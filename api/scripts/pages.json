[{"name":"DELETE()","description":"com.drake.net.request.Method.DELETE","location":"-net/com.drake.net.request/-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE()","com.drake.net.request.Method.DELETE"]},{"name":"GET()","description":"com.drake.net.request.Method.GET","location":"-net/com.drake.net.request/-method/-g-e-t/index.html","searchKeys":["GET","GET()","com.drake.net.request.Method.GET"]},{"name":"HEAD()","description":"com.drake.net.request.Method.HEAD","location":"-net/com.drake.net.request/-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD()","com.drake.net.request.Method.HEAD"]},{"name":"OPTIONS()","description":"com.drake.net.request.Method.OPTIONS","location":"-net/com.drake.net.request/-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS()","com.drake.net.request.Method.OPTIONS"]},{"name":"PATCH()","description":"com.drake.net.request.Method.PATCH","location":"-net/com.drake.net.request/-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH()","com.drake.net.request.Method.PATCH"]},{"name":"POST()","description":"com.drake.net.request.Method.POST","location":"-net/com.drake.net.request/-method/-p-o-s-t/index.html","searchKeys":["POST","POST()","com.drake.net.request.Method.POST"]},{"name":"PUT()","description":"com.drake.net.request.Method.PUT","location":"-net/com.drake.net.request/-method/-p-u-t/index.html","searchKeys":["PUT","PUT()","com.drake.net.request.Method.PUT"]},{"name":"REQUEST_BODY(\"RQB\")","description":"com.drake.net.log.MessageType.REQUEST_BODY","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-b-o-d-y/index.html","searchKeys":["REQUEST_BODY","REQUEST_BODY(\"RQB\")","com.drake.net.log.MessageType.REQUEST_BODY"]},{"name":"REQUEST_END(\"RQD\")","description":"com.drake.net.log.MessageType.REQUEST_END","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-e-n-d/index.html","searchKeys":["REQUEST_END","REQUEST_END(\"RQD\")","com.drake.net.log.MessageType.REQUEST_END"]},{"name":"REQUEST_HEADER(\"RQH\")","description":"com.drake.net.log.MessageType.REQUEST_HEADER","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-h-e-a-d-e-r/index.html","searchKeys":["REQUEST_HEADER","REQUEST_HEADER(\"RQH\")","com.drake.net.log.MessageType.REQUEST_HEADER"]},{"name":"REQUEST_METHOD(\"RQM\")","description":"com.drake.net.log.MessageType.REQUEST_METHOD","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-m-e-t-h-o-d/index.html","searchKeys":["REQUEST_METHOD","REQUEST_METHOD(\"RQM\")","com.drake.net.log.MessageType.REQUEST_METHOD"]},{"name":"REQUEST_TIME(\"RQT\")","description":"com.drake.net.log.MessageType.REQUEST_TIME","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-t-i-m-e/index.html","searchKeys":["REQUEST_TIME","REQUEST_TIME(\"RQT\")","com.drake.net.log.MessageType.REQUEST_TIME"]},{"name":"REQUEST_URL(\"RQU\")","description":"com.drake.net.log.MessageType.REQUEST_URL","location":"-net/com.drake.net.log/-message-type/-r-e-q-u-e-s-t_-u-r-l/index.html","searchKeys":["REQUEST_URL","REQUEST_URL(\"RQU\")","com.drake.net.log.MessageType.REQUEST_URL"]},{"name":"RESPONSE_BODY(\"RSB\")","description":"com.drake.net.log.MessageType.RESPONSE_BODY","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-b-o-d-y/index.html","searchKeys":["RESPONSE_BODY","RESPONSE_BODY(\"RSB\")","com.drake.net.log.MessageType.RESPONSE_BODY"]},{"name":"RESPONSE_END(\"RSD\")","description":"com.drake.net.log.MessageType.RESPONSE_END","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-e-n-d/index.html","searchKeys":["RESPONSE_END","RESPONSE_END(\"RSD\")","com.drake.net.log.MessageType.RESPONSE_END"]},{"name":"RESPONSE_ERROR(\"REE\")","description":"com.drake.net.log.MessageType.RESPONSE_ERROR","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-e-r-r-o-r/index.html","searchKeys":["RESPONSE_ERROR","RESPONSE_ERROR(\"REE\")","com.drake.net.log.MessageType.RESPONSE_ERROR"]},{"name":"RESPONSE_HEADER(\"RSH\")","description":"com.drake.net.log.MessageType.RESPONSE_HEADER","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-h-e-a-d-e-r/index.html","searchKeys":["RESPONSE_HEADER","RESPONSE_HEADER(\"RSH\")","com.drake.net.log.MessageType.RESPONSE_HEADER"]},{"name":"RESPONSE_STATUS(\"RSS\")","description":"com.drake.net.log.MessageType.RESPONSE_STATUS","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-s-t-a-t-u-s/index.html","searchKeys":["RESPONSE_STATUS","RESPONSE_STATUS(\"RSS\")","com.drake.net.log.MessageType.RESPONSE_STATUS"]},{"name":"RESPONSE_TIME(\"RST\")","description":"com.drake.net.log.MessageType.RESPONSE_TIME","location":"-net/com.drake.net.log/-message-type/-r-e-s-p-o-n-s-e_-t-i-m-e/index.html","searchKeys":["RESPONSE_TIME","RESPONSE_TIME(\"RST\")","com.drake.net.log.MessageType.RESPONSE_TIME"]},{"name":"STATE_ACTIVE()","description":"com.drake.net.time.IntervalStatus.STATE_ACTIVE","location":"-net/com.drake.net.time/-interval-status/-s-t-a-t-e_-a-c-t-i-v-e/index.html","searchKeys":["STATE_ACTIVE","STATE_ACTIVE()","com.drake.net.time.IntervalStatus.STATE_ACTIVE"]},{"name":"STATE_IDLE()","description":"com.drake.net.time.IntervalStatus.STATE_IDLE","location":"-net/com.drake.net.time/-interval-status/-s-t-a-t-e_-i-d-l-e/index.html","searchKeys":["STATE_IDLE","STATE_IDLE()","com.drake.net.time.IntervalStatus.STATE_IDLE"]},{"name":"STATE_PAUSE()","description":"com.drake.net.time.IntervalStatus.STATE_PAUSE","location":"-net/com.drake.net.time/-interval-status/-s-t-a-t-e_-p-a-u-s-e/index.html","searchKeys":["STATE_PAUSE","STATE_PAUSE()","com.drake.net.time.IntervalStatus.STATE_PAUSE"]},{"name":"TRACE()","description":"com.drake.net.request.Method.TRACE","location":"-net/com.drake.net.request/-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE()","com.drake.net.request.Method.TRACE"]},{"name":"UNKNOWN(\"UNKNOWN\")","description":"com.drake.net.log.MessageType.UNKNOWN","location":"-net/com.drake.net.log/-message-type/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN(\"UNKNOWN\")","com.drake.net.log.MessageType.UNKNOWN"]},{"name":"abstract class BaseRequest","description":"com.drake.net.request.BaseRequest","location":"-net/com.drake.net.request/-base-request/index.html","searchKeys":["BaseRequest","abstract class BaseRequest","com.drake.net.request.BaseRequest"]},{"name":"abstract class DialogCallback<T>(activity: FragmentActivity, dialog: Dialog?, cancelable: Boolean) : NetCallback<T> , LifecycleObserver","description":"com.drake.net.callback.DialogCallback","location":"-net/com.drake.net.callback/-dialog-callback/index.html","searchKeys":["DialogCallback","abstract class DialogCallback<T>(activity: FragmentActivity, dialog: Dialog?, cancelable: Boolean) : NetCallback<T> , LifecycleObserver","com.drake.net.callback.DialogCallback"]},{"name":"abstract class JSONConvert(success: String, code: String, message: String) : NetConverter","description":"com.drake.net.convert.JSONConvert","location":"-net/com.drake.net.convert/-j-s-o-n-convert/index.html","searchKeys":["JSONConvert","abstract class JSONConvert(success: String, code: String, message: String) : NetConverter","com.drake.net.convert.JSONConvert"]},{"name":"abstract class NetCallback<T>(lifecycle: LifecycleOwner?, lifeEvent: Lifecycle.Event) : Callback","description":"com.drake.net.interfaces.NetCallback","location":"-net/com.drake.net.interfaces/-net-callback/index.html","searchKeys":["NetCallback","abstract class NetCallback<T>(lifecycle: LifecycleOwner?, lifeEvent: Lifecycle.Event) : Callback","com.drake.net.interfaces.NetCallback"]},{"name":"abstract class PageCallback<T>(page: PageRefreshLayout) : NetCallback<T> ","description":"com.drake.net.callback.PageCallback","location":"-net/com.drake.net.callback/-page-callback/index.html","searchKeys":["PageCallback","abstract class PageCallback<T>(page: PageRefreshLayout) : NetCallback<T> ","com.drake.net.callback.PageCallback"]},{"name":"abstract class ProgressListener(interval: Long)","description":"com.drake.net.interfaces.ProgressListener","location":"-net/com.drake.net.interfaces/-progress-listener/index.html","searchKeys":["ProgressListener","abstract class ProgressListener(interval: Long)","com.drake.net.interfaces.ProgressListener"]},{"name":"abstract class StateCallback<T>(state: StateLayout) : NetCallback<T> ","description":"com.drake.net.callback.StateCallback","location":"-net/com.drake.net.callback/-state-callback/index.html","searchKeys":["StateCallback","abstract class StateCallback<T>(state: StateLayout) : NetCallback<T> ","com.drake.net.callback.StateCallback"]},{"name":"abstract fun <R> String.parseBody(succeed: Type): R?","description":"com.drake.net.convert.JSONConvert.parseBody","location":"-net/com.drake.net.convert/-j-s-o-n-convert/parse-body.html","searchKeys":["parseBody","abstract fun <R> String.parseBody(succeed: Type): R?","com.drake.net.convert.JSONConvert.parseBody"]},{"name":"abstract fun <R> onConvert(succeed: Type, response: Response): R?","description":"com.drake.net.convert.NetConverter.onConvert","location":"-net/com.drake.net.convert/-net-converter/on-convert.html","searchKeys":["onConvert","abstract fun <R> onConvert(succeed: Type, response: Response): R?","com.drake.net.convert.NetConverter.onConvert"]},{"name":"abstract fun interceptor(request: BaseRequest)","description":"com.drake.net.interceptor.RequestInterceptor.interceptor","location":"-net/com.drake.net.interceptor/-request-interceptor/interceptor.html","searchKeys":["interceptor","abstract fun interceptor(request: BaseRequest)","com.drake.net.interceptor.RequestInterceptor.interceptor"]},{"name":"abstract fun onCreate(activity: FragmentActivity): Dialog","description":"com.drake.net.interfaces.NetDialogFactory.onCreate","location":"-net/com.drake.net.interfaces/-net-dialog-factory/on-create.html","searchKeys":["onCreate","abstract fun onCreate(activity: FragmentActivity): Dialog","com.drake.net.interfaces.NetDialogFactory.onCreate"]},{"name":"abstract fun onProgress(p: Progress)","description":"com.drake.net.interfaces.ProgressListener.onProgress","location":"-net/com.drake.net.interfaces/-progress-listener/on-progress.html","searchKeys":["onProgress","abstract fun onProgress(p: Progress)","com.drake.net.interfaces.ProgressListener.onProgress"]},{"name":"abstract fun onSuccess(call: Call, result: T)","description":"com.drake.net.interfaces.NetCallback.onSuccess","location":"-net/com.drake.net.interfaces/-net-callback/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess(call: Call, result: T)","com.drake.net.interfaces.NetCallback.onSuccess"]},{"name":"abstract fun param(name: String, value: Boolean?)","description":"com.drake.net.request.BaseRequest.param","location":"-net/com.drake.net.request/-base-request/param.html","searchKeys":["param","abstract fun param(name: String, value: Boolean?)","com.drake.net.request.BaseRequest.param"]},{"name":"abstract fun param(name: String, value: Number?)","description":"com.drake.net.request.BaseRequest.param","location":"-net/com.drake.net.request/-base-request/param.html","searchKeys":["param","abstract fun param(name: String, value: Number?)","com.drake.net.request.BaseRequest.param"]},{"name":"abstract fun param(name: String, value: String?)","description":"com.drake.net.request.BaseRequest.param","location":"-net/com.drake.net.request/-base-request/param.html","searchKeys":["param","abstract fun param(name: String, value: String?)","com.drake.net.request.BaseRequest.param"]},{"name":"abstract fun param(name: String, value: String?, encoded: Boolean)","description":"com.drake.net.request.BaseRequest.param","location":"-net/com.drake.net.request/-base-request/param.html","searchKeys":["param","abstract fun param(name: String, value: String?, encoded: Boolean)","com.drake.net.request.BaseRequest.param"]},{"name":"class $Gson$Preconditions","description":"com.drake.net.reflect.$Gson$Preconditions","location":"-net/com.drake.net.reflect/$-gson$-preconditions/index.html","searchKeys":["$Gson$Preconditions","class $Gson$Preconditions","com.drake.net.reflect.$Gson$Preconditions"]},{"name":"class $Gson$Types","description":"com.drake.net.reflect.$Gson$Types","location":"-net/com.drake.net.reflect/$-gson$-types/index.html","searchKeys":["$Gson$Types","class $Gson$Types","com.drake.net.reflect.$Gson$Types"]},{"name":"class ConvertException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","description":"com.drake.net.exception.ConvertException","location":"-net/com.drake.net.exception/-convert-exception/index.html","searchKeys":["ConvertException","class ConvertException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","com.drake.net.exception.ConvertException"]},{"name":"class DialogCoroutineScope(activity: FragmentActivity, dialog: Dialog?, cancelable: Boolean, dispatcher: CoroutineDispatcher) : NetCoroutineScope, LifecycleObserver","description":"com.drake.net.scope.DialogCoroutineScope","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/index.html","searchKeys":["DialogCoroutineScope","class DialogCoroutineScope(activity: FragmentActivity, dialog: Dialog?, cancelable: Boolean, dispatcher: CoroutineDispatcher) : NetCoroutineScope, LifecycleObserver","com.drake.net.scope.DialogCoroutineScope"]},{"name":"class DownloadFileException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","description":"com.drake.net.exception.DownloadFileException","location":"-net/com.drake.net.exception/-download-file-exception/index.html","searchKeys":["DownloadFileException","class DownloadFileException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","com.drake.net.exception.DownloadFileException"]},{"name":"class DownloadListeners : ConcurrentLinkedQueue<ProgressListener> ","description":"com.drake.net.tag.NetLabel.DownloadListeners","location":"-net/com.drake.net.tag/-net-label/-download-listeners/index.html","searchKeys":["DownloadListeners","class DownloadListeners : ConcurrentLinkedQueue<ProgressListener> ","com.drake.net.tag.NetLabel.DownloadListeners"]},{"name":"class NetCancellationException(coroutineScope: CoroutineScope, message: String?) : CancellationException","description":"com.drake.net.exception.NetCancellationException","location":"-net/com.drake.net.exception/-net-cancellation-exception/index.html","searchKeys":["NetCancellationException","class NetCancellationException(coroutineScope: CoroutineScope, message: String?) : CancellationException","com.drake.net.exception.NetCancellationException"]},{"name":"class NetConnectException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","description":"com.drake.net.exception.NetConnectException","location":"-net/com.drake.net.exception/-net-connect-exception/index.html","searchKeys":["NetConnectException","class NetConnectException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","com.drake.net.exception.NetConnectException"]},{"name":"class NetFileProvider : FileProvider","description":"com.drake.net.component.NetFileProvider","location":"-net/com.drake.net.component/-net-file-provider/index.html","searchKeys":["NetFileProvider","class NetFileProvider : FileProvider","com.drake.net.component.NetFileProvider"]},{"name":"class NetRequestBody(requestBody: RequestBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>?) : RequestBody","description":"com.drake.net.body.NetRequestBody","location":"-net/com.drake.net.body/-net-request-body/index.html","searchKeys":["NetRequestBody","class NetRequestBody(requestBody: RequestBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>?) : RequestBody","com.drake.net.body.NetRequestBody"]},{"name":"class NetResponseBody(responseBody: ResponseBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>?, complete: () -> Unit?) : ResponseBody","description":"com.drake.net.body.NetResponseBody","location":"-net/com.drake.net.body/-net-response-body/index.html","searchKeys":["NetResponseBody","class NetResponseBody(responseBody: ResponseBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>?, complete: () -> Unit?) : ResponseBody","com.drake.net.body.NetResponseBody"]},{"name":"class NetSocketTimeoutException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","description":"com.drake.net.exception.NetSocketTimeoutException","location":"-net/com.drake.net.exception/-net-socket-timeout-exception/index.html","searchKeys":["NetSocketTimeoutException","class NetSocketTimeoutException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","com.drake.net.exception.NetSocketTimeoutException"]},{"name":"class NetUnknownHostException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","description":"com.drake.net.exception.NetUnknownHostException","location":"-net/com.drake.net.exception/-net-unknown-host-exception/index.html","searchKeys":["NetUnknownHostException","class NetUnknownHostException(request: Request, message: String?, cause: Throwable?) : HttpFailureException","com.drake.net.exception.NetUnknownHostException"]},{"name":"class NoCacheException(request: Request, message: String?, cause: Throwable?) : NetException","description":"com.drake.net.exception.NoCacheException","location":"-net/com.drake.net.exception/-no-cache-exception/index.html","searchKeys":["NoCacheException","class NoCacheException(request: Request, message: String?, cause: Throwable?) : NetException","com.drake.net.exception.NoCacheException"]},{"name":"class PageCoroutineScope(page: PageRefreshLayout, dispatcher: CoroutineDispatcher) : NetCoroutineScope","description":"com.drake.net.scope.PageCoroutineScope","location":"-net/com.drake.net.scope/-page-coroutine-scope/index.html","searchKeys":["PageCoroutineScope","class PageCoroutineScope(page: PageRefreshLayout, dispatcher: CoroutineDispatcher) : NetCoroutineScope","com.drake.net.scope.PageCoroutineScope"]},{"name":"class RequestParamsException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","description":"com.drake.net.exception.RequestParamsException","location":"-net/com.drake.net.exception/-request-params-exception/index.html","searchKeys":["RequestParamsException","class RequestParamsException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","com.drake.net.exception.RequestParamsException"]},{"name":"class ResponseException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","description":"com.drake.net.exception.ResponseException","location":"-net/com.drake.net.exception/-response-exception/index.html","searchKeys":["ResponseException","class ResponseException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","com.drake.net.exception.ResponseException"]},{"name":"class RetryInterceptor(retryCount: Int) : Interceptor","description":"com.drake.net.interceptor.RetryInterceptor","location":"-net/com.drake.net.interceptor/-retry-interceptor/index.html","searchKeys":["RetryInterceptor","class RetryInterceptor(retryCount: Int) : Interceptor","com.drake.net.interceptor.RetryInterceptor"]},{"name":"class ServerResponseException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","description":"com.drake.net.exception.ServerResponseException","location":"-net/com.drake.net.exception/-server-response-exception/index.html","searchKeys":["ServerResponseException","class ServerResponseException(response: Response, message: String?, cause: Throwable?, tag: Any?) : HttpResponseException","com.drake.net.exception.ServerResponseException"]},{"name":"class StateCoroutineScope(state: StateLayout, dispatcher: CoroutineDispatcher) : NetCoroutineScope","description":"com.drake.net.scope.StateCoroutineScope","location":"-net/com.drake.net.scope/-state-coroutine-scope/index.html","searchKeys":["StateCoroutineScope","class StateCoroutineScope(state: StateLayout, dispatcher: CoroutineDispatcher) : NetCoroutineScope","com.drake.net.scope.StateCoroutineScope"]},{"name":"class Tags : HashMap<String, Any?> ","description":"com.drake.net.tag.NetLabel.Tags","location":"-net/com.drake.net.tag/-net-label/-tags/index.html","searchKeys":["Tags","class Tags : HashMap<String, Any?> ","com.drake.net.tag.NetLabel.Tags"]},{"name":"class UploadListeners : ConcurrentLinkedQueue<ProgressListener> ","description":"com.drake.net.tag.NetLabel.UploadListeners","location":"-net/com.drake.net.tag/-net-label/-upload-listeners/index.html","searchKeys":["UploadListeners","class UploadListeners : ConcurrentLinkedQueue<ProgressListener> ","com.drake.net.tag.NetLabel.UploadListeners"]},{"name":"data class DeferredTransform<T, R>(deferred: Deferred<T>, block: (T) -> R)","description":"com.drake.net.transform.DeferredTransform","location":"-net/com.drake.net.transform/-deferred-transform/index.html","searchKeys":["DeferredTransform","data class DeferredTransform<T, R>(deferred: Deferred<T>, block: (T) -> R)","com.drake.net.transform.DeferredTransform"]},{"name":"data class Progress(currentByteCount: Long, totalByteCount: Long, intervalByteCount: Long, intervalTime: Long, startElapsedRealtime: Long)","description":"com.drake.net.component.Progress","location":"-net/com.drake.net.component/-progress/index.html","searchKeys":["Progress","data class Progress(currentByteCount: Long, totalByteCount: Long, intervalByteCount: Long, intervalTime: Long, startElapsedRealtime: Long)","com.drake.net.component.Progress"]},{"name":"enum IntervalStatus : Enum<IntervalStatus> ","description":"com.drake.net.time.IntervalStatus","location":"-net/com.drake.net.time/-interval-status/index.html","searchKeys":["IntervalStatus","enum IntervalStatus : Enum<IntervalStatus> ","com.drake.net.time.IntervalStatus"]},{"name":"enum MessageType : Enum<MessageType> ","description":"com.drake.net.log.MessageType","location":"-net/com.drake.net.log/-message-type/index.html","searchKeys":["MessageType","enum MessageType : Enum<MessageType> ","com.drake.net.log.MessageType"]},{"name":"enum Method : Enum<Method> ","description":"com.drake.net.request.Method","location":"-net/com.drake.net.request/-method/index.html","searchKeys":["Method","enum Method : Enum<Method> ","com.drake.net.request.Method"]},{"name":"fun <R> Response.convert(type: Type): R","description":"com.drake.net.response.convert","location":"-net/com.drake.net.response/convert.html","searchKeys":["convert","fun <R> Response.convert(type: Type): R","com.drake.net.response.convert"]},{"name":"fun <T, R> Deferred<T>.transform(block: (T) -> R): DeferredTransform<T, R>","description":"com.drake.net.transform.transform","location":"-net/com.drake.net.transform/transform.html","searchKeys":["transform","fun <T, R> Deferred<T>.transform(block: (T) -> R): DeferredTransform<T, R>","com.drake.net.transform.transform"]},{"name":"fun <T, R> DeferredTransform(deferred: Deferred<T>, block: (T) -> R)","description":"com.drake.net.transform.DeferredTransform.DeferredTransform","location":"-net/com.drake.net.transform/-deferred-transform/-deferred-transform.html","searchKeys":["DeferredTransform","fun <T, R> DeferredTransform(deferred: Deferred<T>, block: (T) -> R)","com.drake.net.transform.DeferredTransform.DeferredTransform"]},{"name":"fun <T, V> T.lazyField(block: T.(KProperty<*>) -> V): ReadWriteProperty<T, V>","description":"com.drake.net.utils.lazyField","location":"-net/com.drake.net.utils/lazy-field.html","searchKeys":["lazyField","fun <T, V> T.lazyField(block: T.(KProperty<*>) -> V): ReadWriteProperty<T, V>","com.drake.net.utils.lazyField"]},{"name":"fun <T> setTag(type: Class<in T>, tag: T?)","description":"com.drake.net.request.BaseRequest.setTag","location":"-net/com.drake.net.request/-base-request/set-tag.html","searchKeys":["setTag","fun <T> setTag(type: Class<in T>, tag: T?)","com.drake.net.request.BaseRequest.setTag"]},{"name":"fun AndroidScope(lifecycleOwner: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"com.drake.net.scope.AndroidScope.AndroidScope","location":"-net/com.drake.net.scope/-android-scope/-android-scope.html","searchKeys":["AndroidScope","fun AndroidScope(lifecycleOwner: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main)","com.drake.net.scope.AndroidScope.AndroidScope"]},{"name":"fun BaseRequest()","description":"com.drake.net.request.BaseRequest.BaseRequest","location":"-net/com.drake.net.request/-base-request/-base-request.html","searchKeys":["BaseRequest","fun BaseRequest()","com.drake.net.request.BaseRequest.BaseRequest"]},{"name":"fun BodyRequest()","description":"com.drake.net.request.BodyRequest.BodyRequest","location":"-net/com.drake.net.request/-body-request/-body-request.html","searchKeys":["BodyRequest","fun BodyRequest()","com.drake.net.request.BodyRequest.BodyRequest"]},{"name":"fun Call.attachToNet()","description":"com.drake.net.okhttp.attachToNet","location":"-net/com.drake.net.okhttp/attach-to-net.html","searchKeys":["attachToNet","fun Call.attachToNet()","com.drake.net.okhttp.attachToNet"]},{"name":"fun Call.detachFromNet()","description":"com.drake.net.okhttp.detachFromNet","location":"-net/com.drake.net.okhttp/detach-from-net.html","searchKeys":["detachFromNet","fun Call.detachFromNet()","com.drake.net.okhttp.detachFromNet"]},{"name":"fun ConvertException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","description":"com.drake.net.exception.ConvertException.ConvertException","location":"-net/com.drake.net.exception/-convert-exception/-convert-exception.html","searchKeys":["ConvertException","fun ConvertException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","com.drake.net.exception.ConvertException.ConvertException"]},{"name":"fun CoroutineScope.NetCancellationException(message: String? = null): NetCancellationException","description":"com.drake.net.exception.NetCancellationException","location":"-net/com.drake.net.exception/-net-cancellation-exception.html","searchKeys":["NetCancellationException","fun CoroutineScope.NetCancellationException(message: String? = null): NetCancellationException","com.drake.net.exception.NetCancellationException"]},{"name":"fun DialogCallback(activity: FragmentActivity, dialog: Dialog? = null, cancelable: Boolean = true)","description":"com.drake.net.callback.DialogCallback.DialogCallback","location":"-net/com.drake.net.callback/-dialog-callback/-dialog-callback.html","searchKeys":["DialogCallback","fun DialogCallback(activity: FragmentActivity, dialog: Dialog? = null, cancelable: Boolean = true)","com.drake.net.callback.DialogCallback.DialogCallback"]},{"name":"fun DialogCoroutineScope(activity: FragmentActivity, dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"com.drake.net.scope.DialogCoroutineScope.DialogCoroutineScope","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/-dialog-coroutine-scope.html","searchKeys":["DialogCoroutineScope","fun DialogCoroutineScope(activity: FragmentActivity, dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main)","com.drake.net.scope.DialogCoroutineScope.DialogCoroutineScope"]},{"name":"fun DownloadFileConflictRename(enabled: Boolean = true)","description":"com.drake.net.tag.NetLabel.DownloadFileConflictRename.DownloadFileConflictRename","location":"-net/com.drake.net.tag/-net-label/-download-file-conflict-rename/-download-file-conflict-rename.html","searchKeys":["DownloadFileConflictRename","fun DownloadFileConflictRename(enabled: Boolean = true)","com.drake.net.tag.NetLabel.DownloadFileConflictRename.DownloadFileConflictRename"]},{"name":"fun DownloadFileDir(dir: String?)","description":"com.drake.net.tag.NetLabel.DownloadFileDir.DownloadFileDir","location":"-net/com.drake.net.tag/-net-label/-download-file-dir/-download-file-dir.html","searchKeys":["DownloadFileDir","fun DownloadFileDir(dir: String?)","com.drake.net.tag.NetLabel.DownloadFileDir.DownloadFileDir"]},{"name":"fun DownloadFileDir(fileDir: File?)","description":"com.drake.net.tag.NetLabel.DownloadFileDir.DownloadFileDir","location":"-net/com.drake.net.tag/-net-label/-download-file-dir/-download-file-dir.html","searchKeys":["DownloadFileDir","fun DownloadFileDir(fileDir: File?)","com.drake.net.tag.NetLabel.DownloadFileDir.DownloadFileDir"]},{"name":"fun DownloadFileException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","description":"com.drake.net.exception.DownloadFileException.DownloadFileException","location":"-net/com.drake.net.exception/-download-file-exception/-download-file-exception.html","searchKeys":["DownloadFileException","fun DownloadFileException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","com.drake.net.exception.DownloadFileException.DownloadFileException"]},{"name":"fun DownloadFileMD5Verify(enabled: Boolean = true)","description":"com.drake.net.tag.NetLabel.DownloadFileMD5Verify.DownloadFileMD5Verify","location":"-net/com.drake.net.tag/-net-label/-download-file-m-d5-verify/-download-file-m-d5-verify.html","searchKeys":["DownloadFileMD5Verify","fun DownloadFileMD5Verify(enabled: Boolean = true)","com.drake.net.tag.NetLabel.DownloadFileMD5Verify.DownloadFileMD5Verify"]},{"name":"fun DownloadFileName(name: String?)","description":"com.drake.net.tag.NetLabel.DownloadFileName.DownloadFileName","location":"-net/com.drake.net.tag/-net-label/-download-file-name/-download-file-name.html","searchKeys":["DownloadFileName","fun DownloadFileName(name: String?)","com.drake.net.tag.NetLabel.DownloadFileName.DownloadFileName"]},{"name":"fun DownloadFileNameDecode(enabled: Boolean = true)","description":"com.drake.net.tag.NetLabel.DownloadFileNameDecode.DownloadFileNameDecode","location":"-net/com.drake.net.tag/-net-label/-download-file-name-decode/-download-file-name-decode.html","searchKeys":["DownloadFileNameDecode","fun DownloadFileNameDecode(enabled: Boolean = true)","com.drake.net.tag.NetLabel.DownloadFileNameDecode.DownloadFileNameDecode"]},{"name":"fun DownloadListeners()","description":"com.drake.net.tag.NetLabel.DownloadListeners.DownloadListeners","location":"-net/com.drake.net.tag/-net-label/-download-listeners/-download-listeners.html","searchKeys":["DownloadListeners","fun DownloadListeners()","com.drake.net.tag.NetLabel.DownloadListeners.DownloadListeners"]},{"name":"fun DownloadTempFile(enabled: Boolean = true)","description":"com.drake.net.tag.NetLabel.DownloadTempFile.DownloadTempFile","location":"-net/com.drake.net.tag/-net-label/-download-temp-file/-download-temp-file.html","searchKeys":["DownloadTempFile","fun DownloadTempFile(enabled: Boolean = true)","com.drake.net.tag.NetLabel.DownloadTempFile.DownloadTempFile"]},{"name":"fun EditText.debounce(timeoutMillis: Long = 800): Flow<String>","description":"com.drake.net.utils.debounce","location":"-net/com.drake.net.utils/debounce.html","searchKeys":["debounce","fun EditText.debounce(timeoutMillis: Long = 800): Flow<String>","com.drake.net.utils.debounce"]},{"name":"fun File.install()","description":"com.drake.net.utils.install","location":"-net/com.drake.net.utils/install.html","searchKeys":["install","fun File.install()","com.drake.net.utils.install"]},{"name":"fun File.md5(): String?","description":"com.drake.net.utils.md5","location":"-net/com.drake.net.utils/md5.html","searchKeys":["md5","fun File.md5(): String?","com.drake.net.utils.md5"]},{"name":"fun File.mediaType(): MediaType?","description":"com.drake.net.utils.mediaType","location":"-net/com.drake.net.utils/media-type.html","searchKeys":["mediaType","fun File.mediaType(): MediaType?","com.drake.net.utils.mediaType"]},{"name":"fun File.toRequestBody(contentType: MediaType? = null): RequestBody","description":"com.drake.net.utils.toRequestBody","location":"-net/com.drake.net.utils/to-request-body.html","searchKeys":["toRequestBody","fun File.toRequestBody(contentType: MediaType? = null): RequestBody","com.drake.net.utils.toRequestBody"]},{"name":"fun Fragment.scopeDialog(dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scopeDialog","location":"-net/com.drake.net.utils/scope-dialog.html","searchKeys":["scopeDialog","fun Fragment.scopeDialog(dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scopeDialog"]},{"name":"fun Fragment.scopeLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"com.drake.net.utils.scopeLife","location":"-net/com.drake.net.utils/scope-life.html","searchKeys":["scopeLife","fun Fragment.scopeLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","com.drake.net.utils.scopeLife"]},{"name":"fun Fragment.scopeNetLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scopeNetLife","location":"-net/com.drake.net.utils/scope-net-life.html","searchKeys":["scopeNetLife","fun Fragment.scopeNetLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scopeNetLife"]},{"name":"fun FragmentActivity.scopeDialog(dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scopeDialog","location":"-net/com.drake.net.utils/scope-dialog.html","searchKeys":["scopeDialog","fun FragmentActivity.scopeDialog(dialog: Dialog? = null, cancelable: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scopeDialog"]},{"name":"fun HttpFailureException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.HttpFailureException.HttpFailureException","location":"-net/com.drake.net.exception/-http-failure-exception/-http-failure-exception.html","searchKeys":["HttpFailureException","fun HttpFailureException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.HttpFailureException.HttpFailureException"]},{"name":"fun HttpResponseException(response: Response, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.HttpResponseException.HttpResponseException","location":"-net/com.drake.net.exception/-http-response-exception/-http-response-exception.html","searchKeys":["HttpResponseException","fun HttpResponseException(response: Response, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.HttpResponseException.HttpResponseException"]},{"name":"fun Interval(end: Long, period: Long, unit: TimeUnit, start: Long = 0, initialDelay: Long = 0)","description":"com.drake.net.time.Interval.Interval","location":"-net/com.drake.net.time/-interval/-interval.html","searchKeys":["Interval","fun Interval(end: Long, period: Long, unit: TimeUnit, start: Long = 0, initialDelay: Long = 0)","com.drake.net.time.Interval.Interval"]},{"name":"fun Interval(period: Long, unit: TimeUnit, initialDelay: Long = 0)","description":"com.drake.net.time.Interval.Interval","location":"-net/com.drake.net.time/-interval/-interval.html","searchKeys":["Interval","fun Interval(period: Long, unit: TimeUnit, initialDelay: Long = 0)","com.drake.net.time.Interval.Interval"]},{"name":"fun Interval.life(viewModel: ViewModel): Interval","description":"androidx.lifecycle.life","location":"-net/androidx.lifecycle/life.html","searchKeys":["life","fun Interval.life(viewModel: ViewModel): Interval","androidx.lifecycle.life"]},{"name":"fun JSONConvert(success: String = \"0\", code: String = \"code\", message: String = \"msg\")","description":"com.drake.net.convert.JSONConvert.JSONConvert","location":"-net/com.drake.net.convert/-j-s-o-n-convert/-j-s-o-n-convert.html","searchKeys":["JSONConvert","fun JSONConvert(success: String = \"0\", code: String = \"code\", message: String = \"msg\")","com.drake.net.convert.JSONConvert.JSONConvert"]},{"name":"fun LifecycleOwner.scopeLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"com.drake.net.utils.scopeLife","location":"-net/com.drake.net.utils/scope-life.html","searchKeys":["scopeLife","fun LifecycleOwner.scopeLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","com.drake.net.utils.scopeLife"]},{"name":"fun LifecycleOwner.scopeNetLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scopeNetLife","location":"-net/com.drake.net.utils/scope-net-life.html","searchKeys":["scopeNetLife","fun LifecycleOwner.scopeNetLife(lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scopeNetLife"]},{"name":"fun LogRecord(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.LogRecord.LogRecord","location":"-net/com.drake.net.tag/-net-label/-log-record/-log-record.html","searchKeys":["LogRecord","fun LogRecord(enabled: Boolean)","com.drake.net.tag.NetLabel.LogRecord.LogRecord"]},{"name":"fun LogRecordInterceptor(enabled: Boolean, requestByteCount: Long = 1024 * 1024, responseByteCount: Long = 1024 * 1024 * 4)","description":"com.drake.net.interceptor.LogRecordInterceptor.LogRecordInterceptor","location":"-net/com.drake.net.interceptor/-log-record-interceptor/-log-record-interceptor.html","searchKeys":["LogRecordInterceptor","fun LogRecordInterceptor(enabled: Boolean, requestByteCount: Long = 1024 * 1024, responseByteCount: Long = 1024 * 1024 * 4)","com.drake.net.interceptor.LogRecordInterceptor.LogRecordInterceptor"]},{"name":"fun NetCallback(lifecycle: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY)","description":"com.drake.net.interfaces.NetCallback.NetCallback","location":"-net/com.drake.net.interfaces/-net-callback/-net-callback.html","searchKeys":["NetCallback","fun NetCallback(lifecycle: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY)","com.drake.net.interfaces.NetCallback.NetCallback"]},{"name":"fun NetCancellationException(coroutineScope: CoroutineScope, message: String? = null)","description":"com.drake.net.exception.NetCancellationException.NetCancellationException","location":"-net/com.drake.net.exception/-net-cancellation-exception/-net-cancellation-exception.html","searchKeys":["NetCancellationException","fun NetCancellationException(coroutineScope: CoroutineScope, message: String? = null)","com.drake.net.exception.NetCancellationException.NetCancellationException"]},{"name":"fun NetConnectException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.NetConnectException.NetConnectException","location":"-net/com.drake.net.exception/-net-connect-exception/-net-connect-exception.html","searchKeys":["NetConnectException","fun NetConnectException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.NetConnectException.NetConnectException"]},{"name":"fun NetCoroutineScope(lifecycleOwner: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"com.drake.net.scope.NetCoroutineScope.NetCoroutineScope","location":"-net/com.drake.net.scope/-net-coroutine-scope/-net-coroutine-scope.html","searchKeys":["NetCoroutineScope","fun NetCoroutineScope(lifecycleOwner: LifecycleOwner? = null, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main)","com.drake.net.scope.NetCoroutineScope.NetCoroutineScope"]},{"name":"fun NetException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.NetException.NetException","location":"-net/com.drake.net.exception/-net-exception/-net-exception.html","searchKeys":["NetException","fun NetException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.NetException.NetException"]},{"name":"fun NetFileProvider()","description":"com.drake.net.component.NetFileProvider.NetFileProvider","location":"-net/com.drake.net.component/-net-file-provider/-net-file-provider.html","searchKeys":["NetFileProvider","fun NetFileProvider()","com.drake.net.component.NetFileProvider.NetFileProvider"]},{"name":"fun NetRequestBody(requestBody: RequestBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>? = null)","description":"com.drake.net.body.NetRequestBody.NetRequestBody","location":"-net/com.drake.net.body/-net-request-body/-net-request-body.html","searchKeys":["NetRequestBody","fun NetRequestBody(requestBody: RequestBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>? = null)","com.drake.net.body.NetRequestBody.NetRequestBody"]},{"name":"fun NetResponseBody(responseBody: ResponseBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>? = null, complete: () -> Unit? = null)","description":"com.drake.net.body.NetResponseBody.NetResponseBody","location":"-net/com.drake.net.body/-net-response-body/-net-response-body.html","searchKeys":["NetResponseBody","fun NetResponseBody(responseBody: ResponseBody, progressListeners: ConcurrentLinkedQueue<ProgressListener>? = null, complete: () -> Unit? = null)","com.drake.net.body.NetResponseBody.NetResponseBody"]},{"name":"fun NetSocketTimeoutException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.NetSocketTimeoutException.NetSocketTimeoutException","location":"-net/com.drake.net.exception/-net-socket-timeout-exception/-net-socket-timeout-exception.html","searchKeys":["NetSocketTimeoutException","fun NetSocketTimeoutException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.NetSocketTimeoutException.NetSocketTimeoutException"]},{"name":"fun NetUnknownHostException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.NetUnknownHostException.NetUnknownHostException","location":"-net/com.drake.net.exception/-net-unknown-host-exception/-net-unknown-host-exception.html","searchKeys":["NetUnknownHostException","fun NetUnknownHostException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.NetUnknownHostException.NetUnknownHostException"]},{"name":"fun NoCacheException(request: Request, message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.NoCacheException.NoCacheException","location":"-net/com.drake.net.exception/-no-cache-exception/-no-cache-exception.html","searchKeys":["NoCacheException","fun NoCacheException(request: Request, message: String? = null, cause: Throwable? = null)","com.drake.net.exception.NoCacheException.NoCacheException"]},{"name":"fun OkHttpClient.Builder.onDialog(block: (FragmentActivity) -> Dialog): OkHttpClient.Builder","description":"com.drake.net.okhttp.onDialog","location":"-net/com.drake.net.okhttp/on-dialog.html","searchKeys":["onDialog","fun OkHttpClient.Builder.onDialog(block: (FragmentActivity) -> Dialog): OkHttpClient.Builder","com.drake.net.okhttp.onDialog"]},{"name":"fun OkHttpClient.Builder.onError(block: Throwable.() -> Unit): OkHttpClient.Builder","description":"com.drake.net.okhttp.onError","location":"-net/com.drake.net.okhttp/on-error.html","searchKeys":["onError","fun OkHttpClient.Builder.onError(block: Throwable.() -> Unit): OkHttpClient.Builder","com.drake.net.okhttp.onError"]},{"name":"fun OkHttpClient.Builder.onStateError(block: Throwable.(view: View) -> Unit): OkHttpClient.Builder","description":"com.drake.net.okhttp.onStateError","location":"-net/com.drake.net.okhttp/on-state-error.html","searchKeys":["onStateError","fun OkHttpClient.Builder.onStateError(block: Throwable.(view: View) -> Unit): OkHttpClient.Builder","com.drake.net.okhttp.onStateError"]},{"name":"fun OkHttpClient.Builder.setConverter(converter: NetConverter): OkHttpClient.Builder","description":"com.drake.net.okhttp.setConverter","location":"-net/com.drake.net.okhttp/set-converter.html","searchKeys":["setConverter","fun OkHttpClient.Builder.setConverter(converter: NetConverter): OkHttpClient.Builder","com.drake.net.okhttp.setConverter"]},{"name":"fun OkHttpClient.Builder.setDialogFactory(dialogFactory: NetDialogFactory): OkHttpClient.Builder","description":"com.drake.net.okhttp.setDialogFactory","location":"-net/com.drake.net.okhttp/set-dialog-factory.html","searchKeys":["setDialogFactory","fun OkHttpClient.Builder.setDialogFactory(dialogFactory: NetDialogFactory): OkHttpClient.Builder","com.drake.net.okhttp.setDialogFactory"]},{"name":"fun OkHttpClient.Builder.setErrorHandler(handler: NetErrorHandler): OkHttpClient.Builder","description":"com.drake.net.okhttp.setErrorHandler","location":"-net/com.drake.net.okhttp/set-error-handler.html","searchKeys":["setErrorHandler","fun OkHttpClient.Builder.setErrorHandler(handler: NetErrorHandler): OkHttpClient.Builder","com.drake.net.okhttp.setErrorHandler"]},{"name":"fun OkHttpClient.Builder.setHost(host: String): OkHttpClient.Builder","description":"com.drake.net.okhttp.setHost","location":"-net/com.drake.net.okhttp/set-host.html","searchKeys":["setHost","fun OkHttpClient.Builder.setHost(host: String): OkHttpClient.Builder","com.drake.net.okhttp.setHost"]},{"name":"fun OkHttpClient.Builder.setLog(enabled: Boolean): OkHttpClient.Builder","description":"com.drake.net.okhttp.setLog","location":"-net/com.drake.net.okhttp/set-log.html","searchKeys":["setLog","fun OkHttpClient.Builder.setLog(enabled: Boolean): OkHttpClient.Builder","com.drake.net.okhttp.setLog"]},{"name":"fun OkHttpClient.Builder.setRequestInterceptor(interceptor: RequestInterceptor): OkHttpClient.Builder","description":"com.drake.net.okhttp.setRequestInterceptor","location":"-net/com.drake.net.okhttp/set-request-interceptor.html","searchKeys":["setRequestInterceptor","fun OkHttpClient.Builder.setRequestInterceptor(interceptor: RequestInterceptor): OkHttpClient.Builder","com.drake.net.okhttp.setRequestInterceptor"]},{"name":"fun OkHttpClient.Builder.setSSLCertificate(trustManager: X509TrustManager?, bksFile: InputStream? = null, password: String? = null): OkHttpClient.Builder","description":"com.drake.net.okhttp.setSSLCertificate","location":"-net/com.drake.net.okhttp/set-s-s-l-certificate.html","searchKeys":["setSSLCertificate","fun OkHttpClient.Builder.setSSLCertificate(trustManager: X509TrustManager?, bksFile: InputStream? = null, password: String? = null): OkHttpClient.Builder","com.drake.net.okhttp.setSSLCertificate"]},{"name":"fun OkHttpClient.Builder.setSSLCertificate(vararg certificates: InputStream, bksFile: InputStream? = null, password: String? = null): OkHttpClient.Builder","description":"com.drake.net.okhttp.setSSLCertificate","location":"-net/com.drake.net.okhttp/set-s-s-l-certificate.html","searchKeys":["setSSLCertificate","fun OkHttpClient.Builder.setSSLCertificate(vararg certificates: InputStream, bksFile: InputStream? = null, password: String? = null): OkHttpClient.Builder","com.drake.net.okhttp.setSSLCertificate"]},{"name":"fun OkHttpClient.Builder.toNetOkhttp(): OkHttpClient.Builder","description":"com.drake.net.okhttp.toNetOkhttp","location":"-net/com.drake.net.okhttp/to-net-okhttp.html","searchKeys":["toNetOkhttp","fun OkHttpClient.Builder.toNetOkhttp(): OkHttpClient.Builder","com.drake.net.okhttp.toNetOkhttp"]},{"name":"fun OkHttpClient.Builder.trustSSLCertificate(): OkHttpClient.Builder","description":"com.drake.net.okhttp.trustSSLCertificate","location":"-net/com.drake.net.okhttp/trust-s-s-l-certificate.html","searchKeys":["trustSSLCertificate","fun OkHttpClient.Builder.trustSSLCertificate(): OkHttpClient.Builder","com.drake.net.okhttp.trustSSLCertificate"]},{"name":"fun OkHttpClient.cancelGroup(group: Any?)","description":"com.drake.net.okhttp.cancelGroup","location":"-net/com.drake.net.okhttp/cancel-group.html","searchKeys":["cancelGroup","fun OkHttpClient.cancelGroup(group: Any?)","com.drake.net.okhttp.cancelGroup"]},{"name":"fun OkHttpClient.cancelId(id: Any?)","description":"com.drake.net.okhttp.cancelId","location":"-net/com.drake.net.okhttp/cancel-id.html","searchKeys":["cancelId","fun OkHttpClient.cancelId(id: Any?)","com.drake.net.okhttp.cancelId"]},{"name":"fun OkHttpClient.toNetOkhttp(): OkHttpClient","description":"com.drake.net.okhttp.toNetOkhttp","location":"-net/com.drake.net.okhttp/to-net-okhttp.html","searchKeys":["toNetOkhttp","fun OkHttpClient.toNetOkhttp(): OkHttpClient","com.drake.net.okhttp.toNetOkhttp"]},{"name":"fun PageCallback(page: PageRefreshLayout)","description":"com.drake.net.callback.PageCallback.PageCallback","location":"-net/com.drake.net.callback/-page-callback/-page-callback.html","searchKeys":["PageCallback","fun PageCallback(page: PageRefreshLayout)","com.drake.net.callback.PageCallback.PageCallback"]},{"name":"fun PageCoroutineScope(page: PageRefreshLayout, dispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"com.drake.net.scope.PageCoroutineScope.PageCoroutineScope","location":"-net/com.drake.net.scope/-page-coroutine-scope/-page-coroutine-scope.html","searchKeys":["PageCoroutineScope","fun PageCoroutineScope(page: PageRefreshLayout, dispatcher: CoroutineDispatcher = Dispatchers.Main)","com.drake.net.scope.PageCoroutineScope.PageCoroutineScope"]},{"name":"fun PageRefreshLayout.scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): PageCoroutineScope","description":"com.drake.net.utils.scope","location":"-net/com.drake.net.utils/scope.html","searchKeys":["scope","fun PageRefreshLayout.scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): PageCoroutineScope","com.drake.net.utils.scope"]},{"name":"fun Progress(currentByteCount: Long = 0, totalByteCount: Long = 0, intervalByteCount: Long = 0, intervalTime: Long = 0, startElapsedRealtime: Long = SystemClock.elapsedRealtime())","description":"com.drake.net.component.Progress.Progress","location":"-net/com.drake.net.component/-progress/-progress.html","searchKeys":["Progress","fun Progress(currentByteCount: Long = 0, totalByteCount: Long = 0, intervalByteCount: Long = 0, intervalTime: Long = 0, startElapsedRealtime: Long = SystemClock.elapsedRealtime())","com.drake.net.component.Progress.Progress"]},{"name":"fun ProgressListener(interval: Long = 500)","description":"com.drake.net.interfaces.ProgressListener.ProgressListener","location":"-net/com.drake.net.interfaces/-progress-listener/-progress-listener.html","searchKeys":["ProgressListener","fun ProgressListener(interval: Long = 500)","com.drake.net.interfaces.ProgressListener.ProgressListener"]},{"name":"fun Request.Builder.downloadListeners(): ConcurrentLinkedQueue<ProgressListener>","description":"com.drake.net.request.downloadListeners","location":"-net/com.drake.net.request/download-listeners.html","searchKeys":["downloadListeners","fun Request.Builder.downloadListeners(): ConcurrentLinkedQueue<ProgressListener>","com.drake.net.request.downloadListeners"]},{"name":"fun Request.Builder.headers(): Headers.Builder","description":"com.drake.net.request.headers","location":"-net/com.drake.net.request/headers.html","searchKeys":["headers","fun Request.Builder.headers(): Headers.Builder","com.drake.net.request.headers"]},{"name":"fun Request.Builder.labels(): MutableMap<Class<*>, Any?>","description":"com.drake.net.request.labels","location":"-net/com.drake.net.request/labels.html","searchKeys":["labels","fun Request.Builder.labels(): MutableMap<Class<*>, Any?>","com.drake.net.request.labels"]},{"name":"fun Request.Builder.setConverter(converter: NetConverter): Request.Builder","description":"com.drake.net.request.setConverter","location":"-net/com.drake.net.request/set-converter.html","searchKeys":["setConverter","fun Request.Builder.setConverter(converter: NetConverter): Request.Builder","com.drake.net.request.setConverter"]},{"name":"fun Request.Builder.setGroup(group: Any?): Request.Builder","description":"com.drake.net.request.setGroup","location":"-net/com.drake.net.request/set-group.html","searchKeys":["setGroup","fun Request.Builder.setGroup(group: Any?): Request.Builder","com.drake.net.request.setGroup"]},{"name":"fun Request.Builder.setId(id: Any?): Request.Builder","description":"com.drake.net.request.setId","location":"-net/com.drake.net.request/set-id.html","searchKeys":["setId","fun Request.Builder.setId(id: Any?): Request.Builder","com.drake.net.request.setId"]},{"name":"fun Request.Builder.setKType(type: KType): Request.Builder","description":"com.drake.net.request.setKType","location":"-net/com.drake.net.request/set-k-type.html","searchKeys":["setKType","fun Request.Builder.setKType(type: KType): Request.Builder","com.drake.net.request.setKType"]},{"name":"fun Request.Builder.setLogRecord(enabled: Boolean): Request.Builder","description":"com.drake.net.request.setLogRecord","location":"-net/com.drake.net.request/set-log-record.html","searchKeys":["setLogRecord","fun Request.Builder.setLogRecord(enabled: Boolean): Request.Builder","com.drake.net.request.setLogRecord"]},{"name":"fun Request.Builder.setTag(name: String, value: Any?): Request.Builder","description":"com.drake.net.request.setTag","location":"-net/com.drake.net.request/set-tag.html","searchKeys":["setTag","fun Request.Builder.setTag(name: String, value: Any?): Request.Builder","com.drake.net.request.setTag"]},{"name":"fun Request.Builder.tags(): HashMap<String, Any?>","description":"com.drake.net.request.tags","location":"-net/com.drake.net.request/tags.html","searchKeys":["tags","fun Request.Builder.tags(): HashMap<String, Any?>","com.drake.net.request.tags"]},{"name":"fun Request.Builder.uploadListeners(): ConcurrentLinkedQueue<ProgressListener>","description":"com.drake.net.request.uploadListeners","location":"-net/com.drake.net.request/upload-listeners.html","searchKeys":["uploadListeners","fun Request.Builder.uploadListeners(): ConcurrentLinkedQueue<ProgressListener>","com.drake.net.request.uploadListeners"]},{"name":"fun Request.addDownloadListener(progressListener: ProgressListener)","description":"com.drake.net.request.addDownloadListener","location":"-net/com.drake.net.request/add-download-listener.html","searchKeys":["addDownloadListener","fun Request.addDownloadListener(progressListener: ProgressListener)","com.drake.net.request.addDownloadListener"]},{"name":"fun Request.addUploadListener(progressListener: ProgressListener)","description":"com.drake.net.request.addUploadListener","location":"-net/com.drake.net.request/add-upload-listener.html","searchKeys":["addUploadListener","fun Request.addUploadListener(progressListener: ProgressListener)","com.drake.net.request.addUploadListener"]},{"name":"fun Request.converter(): NetConverter","description":"com.drake.net.request.converter","location":"-net/com.drake.net.request/converter.html","searchKeys":["converter","fun Request.converter(): NetConverter","com.drake.net.request.converter"]},{"name":"fun Request.downloadConflictRename(): Boolean","description":"com.drake.net.request.downloadConflictRename","location":"-net/com.drake.net.request/download-conflict-rename.html","searchKeys":["downloadConflictRename","fun Request.downloadConflictRename(): Boolean","com.drake.net.request.downloadConflictRename"]},{"name":"fun Request.downloadFileDir(): String","description":"com.drake.net.request.downloadFileDir","location":"-net/com.drake.net.request/download-file-dir.html","searchKeys":["downloadFileDir","fun Request.downloadFileDir(): String","com.drake.net.request.downloadFileDir"]},{"name":"fun Request.downloadFileName(): String?","description":"com.drake.net.request.downloadFileName","location":"-net/com.drake.net.request/download-file-name.html","searchKeys":["downloadFileName","fun Request.downloadFileName(): String?","com.drake.net.request.downloadFileName"]},{"name":"fun Request.downloadFileNameDecode(): Boolean","description":"com.drake.net.request.downloadFileNameDecode","location":"-net/com.drake.net.request/download-file-name-decode.html","searchKeys":["downloadFileNameDecode","fun Request.downloadFileNameDecode(): Boolean","com.drake.net.request.downloadFileNameDecode"]},{"name":"fun Request.downloadListeners(): ConcurrentLinkedQueue<ProgressListener>","description":"com.drake.net.request.downloadListeners","location":"-net/com.drake.net.request/download-listeners.html","searchKeys":["downloadListeners","fun Request.downloadListeners(): ConcurrentLinkedQueue<ProgressListener>","com.drake.net.request.downloadListeners"]},{"name":"fun Request.downloadMd5Verify(): Boolean","description":"com.drake.net.request.downloadMd5Verify","location":"-net/com.drake.net.request/download-md5-verify.html","searchKeys":["downloadMd5Verify","fun Request.downloadMd5Verify(): Boolean","com.drake.net.request.downloadMd5Verify"]},{"name":"fun Request.downloadTempFile(): Boolean","description":"com.drake.net.request.downloadTempFile","location":"-net/com.drake.net.request/download-temp-file.html","searchKeys":["downloadTempFile","fun Request.downloadTempFile(): Boolean","com.drake.net.request.downloadTempFile"]},{"name":"fun Request.group(): Any?","description":"com.drake.net.request.group","location":"-net/com.drake.net.request/group.html","searchKeys":["group","fun Request.group(): Any?","com.drake.net.request.group"]},{"name":"fun Request.id(): Any?","description":"com.drake.net.request.id","location":"-net/com.drake.net.request/id.html","searchKeys":["id","fun Request.id(): Any?","com.drake.net.request.id"]},{"name":"fun Request.isLogRecord(): Boolean?","description":"com.drake.net.request.isLogRecord","location":"-net/com.drake.net.request/is-log-record.html","searchKeys":["isLogRecord","fun Request.isLogRecord(): Boolean?","com.drake.net.request.isLogRecord"]},{"name":"fun Request.kType(): KType?","description":"com.drake.net.request.kType","location":"-net/com.drake.net.request/k-type.html","searchKeys":["kType","fun Request.kType(): KType?","com.drake.net.request.kType"]},{"name":"fun Request.labels(): MutableMap<Class<*>, Any?>","description":"com.drake.net.request.labels","location":"-net/com.drake.net.request/labels.html","searchKeys":["labels","fun Request.labels(): MutableMap<Class<*>, Any?>","com.drake.net.request.labels"]},{"name":"fun Request.logString(byteCount: Long = 1024 * 1024, urlDecode: Boolean = true): String?","description":"com.drake.net.request.logString","location":"-net/com.drake.net.request/log-string.html","searchKeys":["logString","fun Request.logString(byteCount: Long = 1024 * 1024, urlDecode: Boolean = true): String?","com.drake.net.request.logString"]},{"name":"fun Request.setTag(name: String, value: Any?)","description":"com.drake.net.request.setTag","location":"-net/com.drake.net.request/set-tag.html","searchKeys":["setTag","fun Request.setTag(name: String, value: Any?)","com.drake.net.request.setTag"]},{"name":"fun Request.tag(name: String): Any?","description":"com.drake.net.request.tag","location":"-net/com.drake.net.request/tag.html","searchKeys":["tag","fun Request.tag(name: String): Any?","com.drake.net.request.tag"]},{"name":"fun Request.tags(): HashMap<String, Any?>","description":"com.drake.net.request.tags","location":"-net/com.drake.net.request/tags.html","searchKeys":["tags","fun Request.tags(): HashMap<String, Any?>","com.drake.net.request.tags"]},{"name":"fun Request.uploadListeners(): ConcurrentLinkedQueue<ProgressListener>","description":"com.drake.net.request.uploadListeners","location":"-net/com.drake.net.request/upload-listeners.html","searchKeys":["uploadListeners","fun Request.uploadListeners(): ConcurrentLinkedQueue<ProgressListener>","com.drake.net.request.uploadListeners"]},{"name":"fun RequestBody.toNetRequestBody(listeners: ConcurrentLinkedQueue<ProgressListener>? = null): NetRequestBody","description":"com.drake.net.body.toNetRequestBody","location":"-net/com.drake.net.body/to-net-request-body.html","searchKeys":["toNetRequestBody","fun RequestBody.toNetRequestBody(listeners: ConcurrentLinkedQueue<ProgressListener>? = null): NetRequestBody","com.drake.net.body.toNetRequestBody"]},{"name":"fun RequestBody?.peekString(byteCount: Long = 1024 * 1024, discard: Boolean = false): String?","description":"com.drake.net.body.peekString","location":"-net/com.drake.net.body/peek-string.html","searchKeys":["peekString","fun RequestBody?.peekString(byteCount: Long = 1024 * 1024, discard: Boolean = false): String?","com.drake.net.body.peekString"]},{"name":"fun RequestGroup(value: Any?)","description":"com.drake.net.tag.NetLabel.RequestGroup.RequestGroup","location":"-net/com.drake.net.tag/-net-label/-request-group/-request-group.html","searchKeys":["RequestGroup","fun RequestGroup(value: Any?)","com.drake.net.tag.NetLabel.RequestGroup.RequestGroup"]},{"name":"fun RequestId(value: Any?)","description":"com.drake.net.tag.NetLabel.RequestId.RequestId","location":"-net/com.drake.net.tag/-net-label/-request-id/-request-id.html","searchKeys":["RequestId","fun RequestId(value: Any?)","com.drake.net.tag.NetLabel.RequestId.RequestId"]},{"name":"fun RequestKType(value: KType?)","description":"com.drake.net.tag.NetLabel.RequestKType.RequestKType","location":"-net/com.drake.net.tag/-net-label/-request-k-type/-request-k-type.html","searchKeys":["RequestKType","fun RequestKType(value: KType?)","com.drake.net.tag.NetLabel.RequestKType.RequestKType"]},{"name":"fun RequestParamsException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","description":"com.drake.net.exception.RequestParamsException.RequestParamsException","location":"-net/com.drake.net.exception/-request-params-exception/-request-params-exception.html","searchKeys":["RequestParamsException","fun RequestParamsException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","com.drake.net.exception.RequestParamsException.RequestParamsException"]},{"name":"fun Response.file(): File?","description":"com.drake.net.response.file","location":"-net/com.drake.net.response/file.html","searchKeys":["file","fun Response.file(): File?","com.drake.net.response.file"]},{"name":"fun Response.fileName(): String","description":"com.drake.net.response.fileName","location":"-net/com.drake.net.response/file-name.html","searchKeys":["fileName","fun Response.fileName(): String","com.drake.net.response.fileName"]},{"name":"fun Response.logString(byteCount: Long = 1024 * 1024 * 4): String?","description":"com.drake.net.response.logString","location":"-net/com.drake.net.response/log-string.html","searchKeys":["logString","fun Response.logString(byteCount: Long = 1024 * 1024 * 4): String?","com.drake.net.response.logString"]},{"name":"fun ResponseBody.toNetResponseBody(listeners: ConcurrentLinkedQueue<ProgressListener>? = null, complete: () -> Unit? = null): NetResponseBody","description":"com.drake.net.body.toNetResponseBody","location":"-net/com.drake.net.body/to-net-response-body.html","searchKeys":["toNetResponseBody","fun ResponseBody.toNetResponseBody(listeners: ConcurrentLinkedQueue<ProgressListener>? = null, complete: () -> Unit? = null): NetResponseBody","com.drake.net.body.toNetResponseBody"]},{"name":"fun ResponseBody?.peekString(byteCount: Long = 1024 * 1024 * 4, discard: Boolean = false): String?","description":"com.drake.net.body.peekString","location":"-net/com.drake.net.body/peek-string.html","searchKeys":["peekString","fun ResponseBody?.peekString(byteCount: Long = 1024 * 1024 * 4, discard: Boolean = false): String?","com.drake.net.body.peekString"]},{"name":"fun ResponseException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","description":"com.drake.net.exception.ResponseException.ResponseException","location":"-net/com.drake.net.exception/-response-exception/-response-exception.html","searchKeys":["ResponseException","fun ResponseException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","com.drake.net.exception.ResponseException.ResponseException"]},{"name":"fun RetryInterceptor(retryCount: Int = 3)","description":"com.drake.net.interceptor.RetryInterceptor.RetryInterceptor","location":"-net/com.drake.net.interceptor/-retry-interceptor/-retry-interceptor.html","searchKeys":["RetryInterceptor","fun RetryInterceptor(retryCount: Int = 3)","com.drake.net.interceptor.RetryInterceptor.RetryInterceptor"]},{"name":"fun ServerResponseException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","description":"com.drake.net.exception.ServerResponseException.ServerResponseException","location":"-net/com.drake.net.exception/-server-response-exception/-server-response-exception.html","searchKeys":["ServerResponseException","fun ServerResponseException(response: Response, message: String? = null, cause: Throwable? = null, tag: Any? = null)","com.drake.net.exception.ServerResponseException.ServerResponseException"]},{"name":"fun StateCallback(state: StateLayout)","description":"com.drake.net.callback.StateCallback.StateCallback","location":"-net/com.drake.net.callback/-state-callback/-state-callback.html","searchKeys":["StateCallback","fun StateCallback(state: StateLayout)","com.drake.net.callback.StateCallback.StateCallback"]},{"name":"fun StateCoroutineScope(state: StateLayout, dispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"com.drake.net.scope.StateCoroutineScope.StateCoroutineScope","location":"-net/com.drake.net.scope/-state-coroutine-scope/-state-coroutine-scope.html","searchKeys":["StateCoroutineScope","fun StateCoroutineScope(state: StateLayout, dispatcher: CoroutineDispatcher = Dispatchers.Main)","com.drake.net.scope.StateCoroutineScope.StateCoroutineScope"]},{"name":"fun StateLayout.scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scope","location":"-net/com.drake.net.utils/scope.html","searchKeys":["scope","fun StateLayout.scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scope"]},{"name":"fun Tags()","description":"com.drake.net.tag.NetLabel.Tags.Tags","location":"-net/com.drake.net.tag/-net-label/-tags/-tags.html","searchKeys":["Tags","fun Tags()","com.drake.net.tag.NetLabel.Tags.Tags"]},{"name":"fun URLParseException(message: String? = null, cause: Throwable? = null)","description":"com.drake.net.exception.URLParseException.URLParseException","location":"-net/com.drake.net.exception/-u-r-l-parse-exception/-u-r-l-parse-exception.html","searchKeys":["URLParseException","fun URLParseException(message: String? = null, cause: Throwable? = null)","com.drake.net.exception.URLParseException.URLParseException"]},{"name":"fun UploadListeners()","description":"com.drake.net.tag.NetLabel.UploadListeners.UploadListeners","location":"-net/com.drake.net.tag/-net-label/-upload-listeners/-upload-listeners.html","searchKeys":["UploadListeners","fun UploadListeners()","com.drake.net.tag.NetLabel.UploadListeners.UploadListeners"]},{"name":"fun UrlRequest()","description":"com.drake.net.request.UrlRequest.UrlRequest","location":"-net/com.drake.net.request/-url-request/-url-request.html","searchKeys":["UrlRequest","fun UrlRequest()","com.drake.net.request.UrlRequest.UrlRequest"]},{"name":"fun ViewModel.scopeLife(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"androidx.lifecycle.scopeLife","location":"-net/androidx.lifecycle/scope-life.html","searchKeys":["scopeLife","fun ViewModel.scopeLife(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","androidx.lifecycle.scopeLife"]},{"name":"fun ViewModel.scopeNetLife(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"androidx.lifecycle.scopeNetLife","location":"-net/androidx.lifecycle/scope-net-life.html","searchKeys":["scopeNetLife","fun ViewModel.scopeNetLife(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","androidx.lifecycle.scopeNetLife"]},{"name":"fun addDownloadListener(id: Any, progressListener: ProgressListener)","description":"com.drake.net.Net.addDownloadListener","location":"-net/com.drake.net/-net/add-download-listener.html","searchKeys":["addDownloadListener","fun addDownloadListener(id: Any, progressListener: ProgressListener)","com.drake.net.Net.addDownloadListener"]},{"name":"fun addDownloadListener(progressListener: ProgressListener)","description":"com.drake.net.request.BaseRequest.addDownloadListener","location":"-net/com.drake.net.request/-base-request/add-download-listener.html","searchKeys":["addDownloadListener","fun addDownloadListener(progressListener: ProgressListener)","com.drake.net.request.BaseRequest.addDownloadListener"]},{"name":"fun addHeader(name: String, value: String)","description":"com.drake.net.request.BaseRequest.addHeader","location":"-net/com.drake.net.request/-base-request/add-header.html","searchKeys":["addHeader","fun addHeader(name: String, value: String)","com.drake.net.request.BaseRequest.addHeader"]},{"name":"fun addUploadListener(id: Any, progressListener: ProgressListener)","description":"com.drake.net.Net.addUploadListener","location":"-net/com.drake.net/-net/add-upload-listener.html","searchKeys":["addUploadListener","fun addUploadListener(id: Any, progressListener: ProgressListener)","com.drake.net.Net.addUploadListener"]},{"name":"fun addUploadListener(progressListener: ProgressListener)","description":"com.drake.net.request.BodyRequest.addUploadListener","location":"-net/com.drake.net.request/-body-request/add-upload-listener.html","searchKeys":["addUploadListener","fun addUploadListener(progressListener: ProgressListener)","com.drake.net.request.BodyRequest.addUploadListener"]},{"name":"fun cancel()","description":"com.drake.net.time.Interval.cancel","location":"-net/com.drake.net.time/-interval/cancel.html","searchKeys":["cancel","fun cancel()","com.drake.net.time.Interval.cancel"]},{"name":"fun cancelAll()","description":"com.drake.net.Net.cancelAll","location":"-net/com.drake.net/-net/cancel-all.html","searchKeys":["cancelAll","fun cancelAll()","com.drake.net.Net.cancelAll"]},{"name":"fun cancelGroup(group: Any?): Boolean","description":"com.drake.net.Net.cancelGroup","location":"-net/com.drake.net/-net/cancel-group.html","searchKeys":["cancelGroup","fun cancelGroup(group: Any?): Boolean","com.drake.net.Net.cancelGroup"]},{"name":"fun cancelId(id: Any?): Boolean","description":"com.drake.net.Net.cancelId","location":"-net/com.drake.net/-net/cancel-id.html","searchKeys":["cancelId","fun cancelId(id: Any?): Boolean","com.drake.net.Net.cancelId"]},{"name":"fun currentSize(): String","description":"com.drake.net.component.Progress.currentSize","location":"-net/com.drake.net.component/-progress/current-size.html","searchKeys":["currentSize","fun currentSize(): String","com.drake.net.component.Progress.currentSize"]},{"name":"fun delete(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","description":"com.drake.net.Net.delete","location":"-net/com.drake.net/-net/delete.html","searchKeys":["delete","fun delete(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","com.drake.net.Net.delete"]},{"name":"fun dismiss()","description":"com.drake.net.callback.DialogCallback.dismiss","location":"-net/com.drake.net.callback/-dialog-callback/dismiss.html","searchKeys":["dismiss","fun dismiss()","com.drake.net.callback.DialogCallback.dismiss"]},{"name":"fun dismiss()","description":"com.drake.net.scope.DialogCoroutineScope.dismiss","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/dismiss.html","searchKeys":["dismiss","fun dismiss()","com.drake.net.scope.DialogCoroutineScope.dismiss"]},{"name":"fun enqueue(block: Callback): Call","description":"com.drake.net.request.BaseRequest.enqueue","location":"-net/com.drake.net.request/-base-request/enqueue.html","searchKeys":["enqueue","fun enqueue(block: Callback): Call","com.drake.net.request.BaseRequest.enqueue"]},{"name":"fun equals(o: Any): Boolean","description":"com.drake.net.reflect.TypeToken.equals","location":"-net/com.drake.net.reflect/-type-token/equals.html","searchKeys":["equals","fun equals(o: Any): Boolean","com.drake.net.reflect.TypeToken.equals"]},{"name":"fun finish(): Boolean","description":"com.drake.net.component.Progress.finish","location":"-net/com.drake.net.component/-progress/finish.html","searchKeys":["finish","fun finish(): Boolean","com.drake.net.component.Progress.finish"]},{"name":"fun finish(block: Interval.(Long) -> Unit): Interval","description":"com.drake.net.time.Interval.finish","location":"-net/com.drake.net.time/-interval/finish.html","searchKeys":["finish","fun finish(block: Interval.(Long) -> Unit): Interval","com.drake.net.time.Interval.finish"]},{"name":"fun fun interface NetDialogFactory","description":"com.drake.net.interfaces.NetDialogFactory","location":"-net/com.drake.net.interfaces/-net-dialog-factory/index.html","searchKeys":["NetDialogFactory","fun fun interface NetDialogFactory","com.drake.net.interfaces.NetDialogFactory"]},{"name":"fun generateId(): String","description":"com.drake.net.log.LogRecorder.generateId","location":"-net/com.drake.net.log/-log-recorder/generate-id.html","searchKeys":["generateId","fun generateId(): String","com.drake.net.log.LogRecorder.generateId"]},{"name":"fun get(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","description":"com.drake.net.Net.get","location":"-net/com.drake.net/-net/get.html","searchKeys":["get","fun get(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","com.drake.net.Net.get"]},{"name":"fun hashCode(): Int","description":"com.drake.net.reflect.TypeToken.hashCode","location":"-net/com.drake.net.reflect/-type-token/hash-code.html","searchKeys":["hashCode","fun hashCode(): Int","com.drake.net.reflect.TypeToken.hashCode"]},{"name":"fun head(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","description":"com.drake.net.Net.head","location":"-net/com.drake.net/-net/head.html","searchKeys":["head","fun head(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","com.drake.net.Net.head"]},{"name":"fun init(host: String = \"\", config: OkHttpClient.Builder)","description":"com.drake.net.NetConfig.init","location":"-net/com.drake.net/-net-config/init.html","searchKeys":["init","fun init(host: String = \"\", config: OkHttpClient.Builder)","com.drake.net.NetConfig.init"]},{"name":"fun init(host: String = \"\", config: OkHttpClient.Builder.() -> Unit = {})","description":"com.drake.net.NetConfig.init","location":"-net/com.drake.net/-net-config/init.html","searchKeys":["init","fun init(host: String = \"\", config: OkHttpClient.Builder.() -> Unit = {})","com.drake.net.NetConfig.init"]},{"name":"fun initNet(host: String = \"\", config: OkHttpClient.Builder)","description":"com.drake.net.initNet","location":"-net/com.drake.net/init-net.html","searchKeys":["initNet","fun initNet(host: String = \"\", config: OkHttpClient.Builder)","com.drake.net.initNet"]},{"name":"fun initNet(host: String = \"\", config: OkHttpClient.Builder.() -> Unit = {})","description":"com.drake.net.initNet","location":"-net/com.drake.net/init-net.html","searchKeys":["initNet","fun initNet(host: String = \"\", config: OkHttpClient.Builder.() -> Unit = {})","com.drake.net.initNet"]},{"name":"fun json(body: JSONArray?)","description":"com.drake.net.request.BodyRequest.json","location":"-net/com.drake.net.request/-body-request/json.html","searchKeys":["json","fun json(body: JSONArray?)","com.drake.net.request.BodyRequest.json"]},{"name":"fun json(body: JSONObject?)","description":"com.drake.net.request.BodyRequest.json","location":"-net/com.drake.net.request/-body-request/json.html","searchKeys":["json","fun json(body: JSONObject?)","com.drake.net.request.BodyRequest.json"]},{"name":"fun json(body: Map<String, Any?>?)","description":"com.drake.net.request.BodyRequest.json","location":"-net/com.drake.net.request/-body-request/json.html","searchKeys":["json","fun json(body: Map<String, Any?>?)","com.drake.net.request.BodyRequest.json"]},{"name":"fun json(body: String?)","description":"com.drake.net.request.BodyRequest.json","location":"-net/com.drake.net.request/-body-request/json.html","searchKeys":["json","fun json(body: String?)","com.drake.net.request.BodyRequest.json"]},{"name":"fun json(vararg body: Pair<String, Any?>)","description":"com.drake.net.request.BodyRequest.json","location":"-net/com.drake.net.request/-body-request/json.html","searchKeys":["json","fun json(vararg body: Pair<String, Any?>)","com.drake.net.request.BodyRequest.json"]},{"name":"fun life(lifecycleOwner: LifecycleOwner, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP): Interval","description":"com.drake.net.time.Interval.life","location":"-net/com.drake.net.time/-interval/life.html","searchKeys":["life","fun life(lifecycleOwner: LifecycleOwner, lifeEvent: Lifecycle.Event = Lifecycle.Event.ON_STOP): Interval","com.drake.net.time.Interval.life"]},{"name":"fun options(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","description":"com.drake.net.Net.options","location":"-net/com.drake.net/-net/options.html","searchKeys":["options","fun options(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","com.drake.net.Net.options"]},{"name":"fun param(body: MultipartBody.Part)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(body: MultipartBody.Part)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(body: RequestBody, header: Headers? = null)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(body: RequestBody, header: Headers? = null)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, fileName: String?, value: File?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, fileName: String?, value: File?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, value: ByteArray?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, value: ByteArray?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, value: ByteString?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, value: ByteString?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, value: File?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, value: File?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, value: List<File?>?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, value: List<File?>?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun param(name: String, value: RequestBody?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","fun param(name: String, value: RequestBody?)","com.drake.net.request.BodyRequest.param"]},{"name":"fun patch(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","description":"com.drake.net.Net.patch","location":"-net/com.drake.net/-net/patch.html","searchKeys":["patch","fun patch(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","com.drake.net.Net.patch"]},{"name":"fun pause()","description":"com.drake.net.time.Interval.pause","location":"-net/com.drake.net.time/-interval/pause.html","searchKeys":["pause","fun pause()","com.drake.net.time.Interval.pause"]},{"name":"fun peekString(byteCount: Long = 1024 * 1024 * 4, discard: Boolean = false): String","description":"com.drake.net.body.NetResponseBody.peekString","location":"-net/com.drake.net.body/-net-response-body/peek-string.html","searchKeys":["peekString","fun peekString(byteCount: Long = 1024 * 1024 * 4, discard: Boolean = false): String","com.drake.net.body.NetResponseBody.peekString"]},{"name":"fun peekString(byteCount: Long = 1024 * 1024, discard: Boolean = false): String","description":"com.drake.net.body.NetRequestBody.peekString","location":"-net/com.drake.net.body/-net-request-body/peek-string.html","searchKeys":["peekString","fun peekString(byteCount: Long = 1024 * 1024, discard: Boolean = false): String","com.drake.net.body.NetRequestBody.peekString"]},{"name":"fun post(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","description":"com.drake.net.Net.post","location":"-net/com.drake.net/-net/post.html","searchKeys":["post","fun post(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","com.drake.net.Net.post"]},{"name":"fun preview(ignore: Boolean = false, animate: Boolean = false, block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"com.drake.net.scope.NetCoroutineScope.preview","location":"-net/com.drake.net.scope/-net-coroutine-scope/preview.html","searchKeys":["preview","fun preview(ignore: Boolean = false, animate: Boolean = false, block: suspend CoroutineScope.() -> Unit): AndroidScope","com.drake.net.scope.NetCoroutineScope.preview"]},{"name":"fun progress(): Int","description":"com.drake.net.component.Progress.progress","location":"-net/com.drake.net.component/-progress/progress.html","searchKeys":["progress","fun progress(): Int","com.drake.net.component.Progress.progress"]},{"name":"fun put(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","description":"com.drake.net.Net.put","location":"-net/com.drake.net/-net/put.html","searchKeys":["put","fun put(path: String, tag: Any? = null, block: BodyRequest.() -> Unit? = null): BodyRequest","com.drake.net.Net.put"]},{"name":"fun recordException(id: String, requestMillis: Long, code: Int?, response: String?, errorMessage: String?)","description":"com.drake.net.log.LogRecorder.recordException","location":"-net/com.drake.net.log/-log-recorder/record-exception.html","searchKeys":["recordException","fun recordException(id: String, requestMillis: Long, code: Int?, response: String?, errorMessage: String?)","com.drake.net.log.LogRecorder.recordException"]},{"name":"fun recordRequest(id: String, url: String, method: String, headers: Map<String, List<String>>, body: String?)","description":"com.drake.net.log.LogRecorder.recordRequest","location":"-net/com.drake.net.log/-log-recorder/record-request.html","searchKeys":["recordRequest","fun recordRequest(id: String, url: String, method: String, headers: Map<String, List<String>>, body: String?)","com.drake.net.log.LogRecorder.recordRequest"]},{"name":"fun recordResponse(id: String, requestMillis: Long, code: Int, headers: Map<String, List<String>>, body: String?)","description":"com.drake.net.log.LogRecorder.recordResponse","location":"-net/com.drake.net.log/-log-recorder/record-response.html","searchKeys":["recordResponse","fun recordResponse(id: String, requestMillis: Long, code: Int, headers: Map<String, List<String>>, body: String?)","com.drake.net.log.LogRecorder.recordResponse"]},{"name":"fun remainSize(): String","description":"com.drake.net.component.Progress.remainSize","location":"-net/com.drake.net.component/-progress/remain-size.html","searchKeys":["remainSize","fun remainSize(): String","com.drake.net.component.Progress.remainSize"]},{"name":"fun remainTime(): String","description":"com.drake.net.component.Progress.remainTime","location":"-net/com.drake.net.component/-progress/remain-time.html","searchKeys":["remainTime","fun remainTime(): String","com.drake.net.component.Progress.remainTime"]},{"name":"fun remainTimeSeconds(): Long","description":"com.drake.net.component.Progress.remainTimeSeconds","location":"-net/com.drake.net.component/-progress/remain-time-seconds.html","searchKeys":["remainTimeSeconds","fun remainTimeSeconds(): Long","com.drake.net.component.Progress.remainTimeSeconds"]},{"name":"fun removeDownloadListener(id: Any, progressListener: ProgressListener)","description":"com.drake.net.Net.removeDownloadListener","location":"-net/com.drake.net/-net/remove-download-listener.html","searchKeys":["removeDownloadListener","fun removeDownloadListener(id: Any, progressListener: ProgressListener)","com.drake.net.Net.removeDownloadListener"]},{"name":"fun removeHeader(name: String)","description":"com.drake.net.request.BaseRequest.removeHeader","location":"-net/com.drake.net.request/-base-request/remove-header.html","searchKeys":["removeHeader","fun removeHeader(name: String)","com.drake.net.request.BaseRequest.removeHeader"]},{"name":"fun removeUploadListener(id: Any, progressListener: ProgressListener)","description":"com.drake.net.Net.removeUploadListener","location":"-net/com.drake.net/-net/remove-upload-listener.html","searchKeys":["removeUploadListener","fun removeUploadListener(id: Any, progressListener: ProgressListener)","com.drake.net.Net.removeUploadListener"]},{"name":"fun requestByGroup(group: Any): ArrayList<Request>","description":"com.drake.net.Net.requestByGroup","location":"-net/com.drake.net/-net/request-by-group.html","searchKeys":["requestByGroup","fun requestByGroup(group: Any): ArrayList<Request>","com.drake.net.Net.requestByGroup"]},{"name":"fun requestById(id: Any): Request?","description":"com.drake.net.Net.requestById","location":"-net/com.drake.net/-net/request-by-id.html","searchKeys":["requestById","fun requestById(id: Any): Request?","com.drake.net.Net.requestById"]},{"name":"fun reset()","description":"com.drake.net.time.Interval.reset","location":"-net/com.drake.net.time/-interval/reset.html","searchKeys":["reset","fun reset()","com.drake.net.time.Interval.reset"]},{"name":"fun resume()","description":"com.drake.net.time.Interval.resume","location":"-net/com.drake.net.time/-interval/resume.html","searchKeys":["resume","fun resume()","com.drake.net.time.Interval.resume"]},{"name":"fun runMain(block: () -> Unit)","description":"com.drake.net.utils.runMain","location":"-net/com.drake.net.utils/run-main.html","searchKeys":["runMain","fun runMain(block: () -> Unit)","com.drake.net.utils.runMain"]},{"name":"fun scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"com.drake.net.utils.scope","location":"-net/com.drake.net.utils/scope.html","searchKeys":["scope","fun scope(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): AndroidScope","com.drake.net.utils.scope"]},{"name":"fun scopeNet(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.utils.scopeNet","location":"-net/com.drake.net.utils/scope-net.html","searchKeys":["scopeNet","fun scopeNet(dispatcher: CoroutineDispatcher = Dispatchers.Main, block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.utils.scopeNet"]},{"name":"fun setCacheControl(cacheControl: CacheControl)","description":"com.drake.net.request.BaseRequest.setCacheControl","location":"-net/com.drake.net.request/-base-request/set-cache-control.html","searchKeys":["setCacheControl","fun setCacheControl(cacheControl: CacheControl)","com.drake.net.request.BaseRequest.setCacheControl"]},{"name":"fun setClient(block: OkHttpClient.Builder.() -> Unit)","description":"com.drake.net.request.BaseRequest.setClient","location":"-net/com.drake.net.request/-base-request/set-client.html","searchKeys":["setClient","fun setClient(block: OkHttpClient.Builder.() -> Unit)","com.drake.net.request.BaseRequest.setClient"]},{"name":"fun setDownloadDir(name: File?)","description":"com.drake.net.request.BaseRequest.setDownloadDir","location":"-net/com.drake.net.request/-base-request/set-download-dir.html","searchKeys":["setDownloadDir","fun setDownloadDir(name: File?)","com.drake.net.request.BaseRequest.setDownloadDir"]},{"name":"fun setDownloadDir(name: String?)","description":"com.drake.net.request.BaseRequest.setDownloadDir","location":"-net/com.drake.net.request/-base-request/set-download-dir.html","searchKeys":["setDownloadDir","fun setDownloadDir(name: String?)","com.drake.net.request.BaseRequest.setDownloadDir"]},{"name":"fun setDownloadFileName(name: String?)","description":"com.drake.net.request.BaseRequest.setDownloadFileName","location":"-net/com.drake.net.request/-base-request/set-download-file-name.html","searchKeys":["setDownloadFileName","fun setDownloadFileName(name: String?)","com.drake.net.request.BaseRequest.setDownloadFileName"]},{"name":"fun setDownloadFileNameConflict(enabled: Boolean = true)","description":"com.drake.net.request.BaseRequest.setDownloadFileNameConflict","location":"-net/com.drake.net.request/-base-request/set-download-file-name-conflict.html","searchKeys":["setDownloadFileNameConflict","fun setDownloadFileNameConflict(enabled: Boolean = true)","com.drake.net.request.BaseRequest.setDownloadFileNameConflict"]},{"name":"fun setDownloadFileNameDecode(enabled: Boolean = true)","description":"com.drake.net.request.BaseRequest.setDownloadFileNameDecode","location":"-net/com.drake.net.request/-base-request/set-download-file-name-decode.html","searchKeys":["setDownloadFileNameDecode","fun setDownloadFileNameDecode(enabled: Boolean = true)","com.drake.net.request.BaseRequest.setDownloadFileNameDecode"]},{"name":"fun setDownloadMd5Verify(enabled: Boolean = true)","description":"com.drake.net.request.BaseRequest.setDownloadMd5Verify","location":"-net/com.drake.net.request/-base-request/set-download-md5-verify.html","searchKeys":["setDownloadMd5Verify","fun setDownloadMd5Verify(enabled: Boolean = true)","com.drake.net.request.BaseRequest.setDownloadMd5Verify"]},{"name":"fun setDownloadTempFile(enabled: Boolean = true)","description":"com.drake.net.request.BaseRequest.setDownloadTempFile","location":"-net/com.drake.net.request/-base-request/set-download-temp-file.html","searchKeys":["setDownloadTempFile","fun setDownloadTempFile(enabled: Boolean = true)","com.drake.net.request.BaseRequest.setDownloadTempFile"]},{"name":"fun setGroup(group: Any?)","description":"com.drake.net.request.BaseRequest.setGroup","location":"-net/com.drake.net.request/-base-request/set-group.html","searchKeys":["setGroup","fun setGroup(group: Any?)","com.drake.net.request.BaseRequest.setGroup"]},{"name":"fun setHeader(name: String, value: String)","description":"com.drake.net.request.BaseRequest.setHeader","location":"-net/com.drake.net.request/-base-request/set-header.html","searchKeys":["setHeader","fun setHeader(name: String, value: String)","com.drake.net.request.BaseRequest.setHeader"]},{"name":"fun setHeaders(headers: Headers)","description":"com.drake.net.request.BaseRequest.setHeaders","location":"-net/com.drake.net.request/-base-request/set-headers.html","searchKeys":["setHeaders","fun setHeaders(headers: Headers)","com.drake.net.request.BaseRequest.setHeaders"]},{"name":"fun setId(id: Any?)","description":"com.drake.net.request.BaseRequest.setId","location":"-net/com.drake.net.request/-base-request/set-id.html","searchKeys":["setId","fun setId(id: Any?)","com.drake.net.request.BaseRequest.setId"]},{"name":"fun setLogRecord(enabled: Boolean)","description":"com.drake.net.request.BaseRequest.setLogRecord","location":"-net/com.drake.net.request/-base-request/set-log-record.html","searchKeys":["setLogRecord","fun setLogRecord(enabled: Boolean)","com.drake.net.request.BaseRequest.setLogRecord"]},{"name":"fun setPath(path: String?)","description":"com.drake.net.request.BaseRequest.setPath","location":"-net/com.drake.net.request/-base-request/set-path.html","searchKeys":["setPath","fun setPath(path: String?)","com.drake.net.request.BaseRequest.setPath"]},{"name":"fun setQuery(name: String, value: String?, encoded: Boolean = false)","description":"com.drake.net.request.BaseRequest.setQuery","location":"-net/com.drake.net.request/-base-request/set-query.html","searchKeys":["setQuery","fun setQuery(name: String, value: String?, encoded: Boolean = false)","com.drake.net.request.BaseRequest.setQuery"]},{"name":"fun setTag(name: String, tag: Any?)","description":"com.drake.net.request.BaseRequest.setTag","location":"-net/com.drake.net.request/-base-request/set-tag.html","searchKeys":["setTag","fun setTag(name: String, tag: Any?)","com.drake.net.request.BaseRequest.setTag"]},{"name":"fun setTag(tag: Any?)","description":"com.drake.net.request.BaseRequest.setTag","location":"-net/com.drake.net.request/-base-request/set-tag.html","searchKeys":["setTag","fun setTag(tag: Any?)","com.drake.net.request.BaseRequest.setTag"]},{"name":"fun speedSize(): String","description":"com.drake.net.component.Progress.speedSize","location":"-net/com.drake.net.component/-progress/speed-size.html","searchKeys":["speedSize","fun speedSize(): String","com.drake.net.component.Progress.speedSize"]},{"name":"fun start(): Interval","description":"com.drake.net.time.Interval.start","location":"-net/com.drake.net.time/-interval/start.html","searchKeys":["start","fun start(): Interval","com.drake.net.time.Interval.start"]},{"name":"fun stop()","description":"com.drake.net.time.Interval.stop","location":"-net/com.drake.net.time/-interval/stop.html","searchKeys":["stop","fun stop()","com.drake.net.time.Interval.stop"]},{"name":"fun subscribe(block: Interval.(Long) -> Unit): Interval","description":"com.drake.net.time.Interval.subscribe","location":"-net/com.drake.net.time/-interval/subscribe.html","searchKeys":["subscribe","fun subscribe(block: Interval.(Long) -> Unit): Interval","com.drake.net.time.Interval.subscribe"]},{"name":"fun switch()","description":"com.drake.net.time.Interval.switch","location":"-net/com.drake.net.time/-interval/switch.html","searchKeys":["switch","fun switch()","com.drake.net.time.Interval.switch"]},{"name":"fun toString(): String","description":"com.drake.net.reflect.TypeToken.toString","location":"-net/com.drake.net.reflect/-type-token/to-string.html","searchKeys":["toString","fun toString(): String","com.drake.net.reflect.TypeToken.toString"]},{"name":"fun toast(message: String?)","description":"com.drake.net.utils.TipUtils.toast","location":"-net/com.drake.net.utils/-tip-utils/toast.html","searchKeys":["toast","fun toast(message: String?)","com.drake.net.utils.TipUtils.toast"]},{"name":"fun totalSize(): String","description":"com.drake.net.component.Progress.totalSize","location":"-net/com.drake.net.component/-progress/total-size.html","searchKeys":["totalSize","fun totalSize(): String","com.drake.net.component.Progress.totalSize"]},{"name":"fun trace(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","description":"com.drake.net.Net.trace","location":"-net/com.drake.net/-net/trace.html","searchKeys":["trace","fun trace(path: String, tag: Any? = null, block: UrlRequest.() -> Unit? = null): UrlRequest","com.drake.net.Net.trace"]},{"name":"fun useTime(): String","description":"com.drake.net.component.Progress.useTime","location":"-net/com.drake.net.component/-progress/use-time.html","searchKeys":["useTime","fun useTime(): String","com.drake.net.component.Progress.useTime"]},{"name":"fun useTimeSeconds(): Long","description":"com.drake.net.component.Progress.useTimeSeconds","location":"-net/com.drake.net.component/-progress/use-time-seconds.html","searchKeys":["useTimeSeconds","fun useTimeSeconds(): Long","com.drake.net.component.Progress.useTimeSeconds"]},{"name":"inline class DownloadFileConflictRename(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.DownloadFileConflictRename","location":"-net/com.drake.net.tag/-net-label/-download-file-conflict-rename/index.html","searchKeys":["DownloadFileConflictRename","inline class DownloadFileConflictRename(enabled: Boolean)","com.drake.net.tag.NetLabel.DownloadFileConflictRename"]},{"name":"inline class DownloadFileDir(dir: String?)","description":"com.drake.net.tag.NetLabel.DownloadFileDir","location":"-net/com.drake.net.tag/-net-label/-download-file-dir/index.html","searchKeys":["DownloadFileDir","inline class DownloadFileDir(dir: String?)","com.drake.net.tag.NetLabel.DownloadFileDir"]},{"name":"inline class DownloadFileMD5Verify(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.DownloadFileMD5Verify","location":"-net/com.drake.net.tag/-net-label/-download-file-m-d5-verify/index.html","searchKeys":["DownloadFileMD5Verify","inline class DownloadFileMD5Verify(enabled: Boolean)","com.drake.net.tag.NetLabel.DownloadFileMD5Verify"]},{"name":"inline class DownloadFileName(name: String?)","description":"com.drake.net.tag.NetLabel.DownloadFileName","location":"-net/com.drake.net.tag/-net-label/-download-file-name/index.html","searchKeys":["DownloadFileName","inline class DownloadFileName(name: String?)","com.drake.net.tag.NetLabel.DownloadFileName"]},{"name":"inline class DownloadFileNameDecode(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.DownloadFileNameDecode","location":"-net/com.drake.net.tag/-net-label/-download-file-name-decode/index.html","searchKeys":["DownloadFileNameDecode","inline class DownloadFileNameDecode(enabled: Boolean)","com.drake.net.tag.NetLabel.DownloadFileNameDecode"]},{"name":"inline class DownloadTempFile(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.DownloadTempFile","location":"-net/com.drake.net.tag/-net-label/-download-temp-file/index.html","searchKeys":["DownloadTempFile","inline class DownloadTempFile(enabled: Boolean)","com.drake.net.tag.NetLabel.DownloadTempFile"]},{"name":"inline class LogRecord(enabled: Boolean)","description":"com.drake.net.tag.NetLabel.LogRecord","location":"-net/com.drake.net.tag/-net-label/-log-record/index.html","searchKeys":["LogRecord","inline class LogRecord(enabled: Boolean)","com.drake.net.tag.NetLabel.LogRecord"]},{"name":"inline class RequestGroup(value: Any?)","description":"com.drake.net.tag.NetLabel.RequestGroup","location":"-net/com.drake.net.tag/-net-label/-request-group/index.html","searchKeys":["RequestGroup","inline class RequestGroup(value: Any?)","com.drake.net.tag.NetLabel.RequestGroup"]},{"name":"inline class RequestId(value: Any?)","description":"com.drake.net.tag.NetLabel.RequestId","location":"-net/com.drake.net.tag/-net-label/-request-id/index.html","searchKeys":["RequestId","inline class RequestId(value: Any?)","com.drake.net.tag.NetLabel.RequestId"]},{"name":"inline class RequestKType(value: KType?)","description":"com.drake.net.tag.NetLabel.RequestKType","location":"-net/com.drake.net.tag/-net-label/-request-k-type/index.html","searchKeys":["RequestKType","inline class RequestKType(value: KType?)","com.drake.net.tag.NetLabel.RequestKType"]},{"name":"inline fun <M> CoroutineScope.Delete(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Delete","location":"-net/com.drake.net/-delete.html","searchKeys":["Delete","inline fun <M> CoroutineScope.Delete(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Delete"]},{"name":"inline fun <M> CoroutineScope.Get(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Get","location":"-net/com.drake.net/-get.html","searchKeys":["Get","inline fun <M> CoroutineScope.Get(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Get"]},{"name":"inline fun <M> CoroutineScope.Head(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Head","location":"-net/com.drake.net/-head.html","searchKeys":["Head","inline fun <M> CoroutineScope.Head(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Head"]},{"name":"inline fun <M> CoroutineScope.Options(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Options","location":"-net/com.drake.net/-options.html","searchKeys":["Options","inline fun <M> CoroutineScope.Options(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Options"]},{"name":"inline fun <M> CoroutineScope.Patch(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Patch","location":"-net/com.drake.net/-patch.html","searchKeys":["Patch","inline fun <M> CoroutineScope.Patch(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Patch"]},{"name":"inline fun <M> CoroutineScope.Post(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Post","location":"-net/com.drake.net/-post.html","searchKeys":["Post","inline fun <M> CoroutineScope.Post(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Post"]},{"name":"inline fun <M> CoroutineScope.Put(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Put","location":"-net/com.drake.net/-put.html","searchKeys":["Put","inline fun <M> CoroutineScope.Put(path: String, tag: Any? = null, noinline block: BodyRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Put"]},{"name":"inline fun <M> CoroutineScope.Trace(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","description":"com.drake.net.Trace","location":"-net/com.drake.net/-trace.html","searchKeys":["Trace","inline fun <M> CoroutineScope.Trace(path: String, tag: Any? = null, noinline block: UrlRequest.() -> Unit? = null): Deferred<M>","com.drake.net.Trace"]},{"name":"inline fun <R> Response.convert(converter: NetConverter): R","description":"com.drake.net.response.convert","location":"-net/com.drake.net.response/convert.html","searchKeys":["convert","inline fun <R> Response.convert(converter: NetConverter): R","com.drake.net.response.convert"]},{"name":"inline fun <R> execute(): R","description":"com.drake.net.request.BaseRequest.execute","location":"-net/com.drake.net.request/-base-request/execute.html","searchKeys":["execute","inline fun <R> execute(): R","com.drake.net.request.BaseRequest.execute"]},{"name":"inline fun <R> onResult(crossinline block: Result<R>.() -> Unit): Call","description":"com.drake.net.request.BaseRequest.onResult","location":"-net/com.drake.net.request/-base-request/on-result.html","searchKeys":["onResult","inline fun <R> onResult(crossinline block: Result<R>.() -> Unit): Call","com.drake.net.request.BaseRequest.onResult"]},{"name":"inline fun <R> toResult(): Result<R>","description":"com.drake.net.request.BaseRequest.toResult","location":"-net/com.drake.net.request/-base-request/to-result.html","searchKeys":["toResult","inline fun <R> toResult(): Result<R>","com.drake.net.request.BaseRequest.toResult"]},{"name":"inline fun <R> typeTokenOf(): Type","description":"com.drake.net.reflect.typeTokenOf","location":"-net/com.drake.net.reflect/type-token-of.html","searchKeys":["typeTokenOf","inline fun <R> typeTokenOf(): Type","com.drake.net.reflect.typeTokenOf"]},{"name":"inline fun <T> Flow<T>.launchIn(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","description":"com.drake.net.utils.launchIn","location":"-net/com.drake.net.utils/launch-in.html","searchKeys":["launchIn","inline fun <T> Flow<T>.launchIn(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","com.drake.net.utils.launchIn"]},{"name":"inline fun <T> Flow<T>.listen(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","description":"com.drake.net.utils.listen","location":"-net/com.drake.net.utils/listen.html","searchKeys":["listen","inline fun <T> Flow<T>.listen(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","com.drake.net.utils.listen"]},{"name":"inline fun <T> Flow<T>.scope(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","description":"com.drake.net.utils.scope","location":"-net/com.drake.net.utils/scope.html","searchKeys":["scope","inline fun <T> Flow<T>.scope(owner: LifecycleOwner? = null, event: Lifecycle.Event = Lifecycle.Event.ON_DESTROY, dispatcher: CoroutineDispatcher = Dispatchers.Main, crossinline action: suspend CoroutineScope.(T) -> Unit): AndroidScope","com.drake.net.utils.scope"]},{"name":"inline fun <T> Request.Builder.label(): T?","description":"com.drake.net.request.label","location":"-net/com.drake.net.request/label.html","searchKeys":["label","inline fun <T> Request.Builder.label(): T?","com.drake.net.request.label"]},{"name":"inline fun <T> Request.Builder.setLabel(value: T): Request.Builder","description":"com.drake.net.request.setLabel","location":"-net/com.drake.net.request/set-label.html","searchKeys":["setLabel","inline fun <T> Request.Builder.setLabel(value: T): Request.Builder","com.drake.net.request.setLabel"]},{"name":"inline fun <T> Request.label(): T?","description":"com.drake.net.request.label","location":"-net/com.drake.net.request/label.html","searchKeys":["label","inline fun <T> Request.label(): T?","com.drake.net.request.label"]},{"name":"inline fun <T> Request.setLabel(value: T): Request","description":"com.drake.net.request.setLabel","location":"-net/com.drake.net.request/set-label.html","searchKeys":["setLabel","inline fun <T> Request.setLabel(value: T): Request","com.drake.net.request.setLabel"]},{"name":"inline fun <T> setKType()","description":"com.drake.net.request.BaseRequest.setKType","location":"-net/com.drake.net.request/-base-request/set-k-type.html","searchKeys":["setKType","inline fun <T> setKType()","com.drake.net.request.BaseRequest.setKType"]},{"name":"inline fun <T> setLabel(tag: T?)","description":"com.drake.net.request.BaseRequest.setLabel","location":"-net/com.drake.net.request/-base-request/set-label.html","searchKeys":["setLabel","inline fun <T> setLabel(tag: T?)","com.drake.net.request.BaseRequest.setLabel"]},{"name":"inline fun String?.isValid(block: (String) -> Unit)","description":"com.drake.net.utils.isValid","location":"-net/com.drake.net.utils/is-valid.html","searchKeys":["isValid","inline fun String?.isValid(block: (String) -> Unit)","com.drake.net.utils.isValid"]},{"name":"interface NetConverter","description":"com.drake.net.convert.NetConverter","location":"-net/com.drake.net.convert/-net-converter/index.html","searchKeys":["NetConverter","interface NetConverter","com.drake.net.convert.NetConverter"]},{"name":"interface NetErrorHandler","description":"com.drake.net.interfaces.NetErrorHandler","location":"-net/com.drake.net.interfaces/-net-error-handler/index.html","searchKeys":["NetErrorHandler","interface NetErrorHandler","com.drake.net.interfaces.NetErrorHandler"]},{"name":"interface RequestInterceptor","description":"com.drake.net.interceptor.RequestInterceptor","location":"-net/com.drake.net.interceptor/-request-interceptor/index.html","searchKeys":["RequestInterceptor","interface RequestInterceptor","com.drake.net.interceptor.RequestInterceptor"]},{"name":"lateinit var app: Application","description":"com.drake.net.NetConfig.app","location":"-net/com.drake.net/-net-config/app.html","searchKeys":["app","lateinit var app: Application","com.drake.net.NetConfig.app"]},{"name":"lateinit var request: Request","description":"com.drake.net.interfaces.NetCallback.request","location":"-net/com.drake.net.interfaces/-net-callback/request.html","searchKeys":["request","lateinit var request: Request","com.drake.net.interfaces.NetCallback.request"]},{"name":"object DEFAULT : NetConverter","description":"com.drake.net.convert.NetConverter.DEFAULT","location":"-net/com.drake.net.convert/-net-converter/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","object DEFAULT : NetConverter","com.drake.net.convert.NetConverter.DEFAULT"]},{"name":"object DEFAULT : NetDialogFactory","description":"com.drake.net.interfaces.NetDialogFactory.DEFAULT","location":"-net/com.drake.net.interfaces/-net-dialog-factory/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","object DEFAULT : NetDialogFactory","com.drake.net.interfaces.NetDialogFactory.DEFAULT"]},{"name":"object DEFAULT : NetErrorHandler","description":"com.drake.net.interfaces.NetErrorHandler.DEFAULT","location":"-net/com.drake.net.interfaces/-net-error-handler/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","object DEFAULT : NetErrorHandler","com.drake.net.interfaces.NetErrorHandler.DEFAULT"]},{"name":"object Https","description":"com.drake.net.utils.Https","location":"-net/com.drake.net.utils/-https/index.html","searchKeys":["Https","object Https","com.drake.net.utils.Https"]},{"name":"object LogRecorder","description":"com.drake.net.log.LogRecorder","location":"-net/com.drake.net.log/-log-recorder/index.html","searchKeys":["LogRecorder","object LogRecorder","com.drake.net.log.LogRecorder"]},{"name":"object MediaConst","description":"com.drake.net.request.MediaConst","location":"-net/com.drake.net.request/-media-const/index.html","searchKeys":["MediaConst","object MediaConst","com.drake.net.request.MediaConst"]},{"name":"object Net","description":"com.drake.net.Net","location":"-net/com.drake.net/-net/index.html","searchKeys":["Net","object Net","com.drake.net.Net"]},{"name":"object NetConfig","description":"com.drake.net.NetConfig","location":"-net/com.drake.net/-net-config/index.html","searchKeys":["NetConfig","object NetConfig","com.drake.net.NetConfig"]},{"name":"object NetOkHttpInterceptor : Interceptor","description":"com.drake.net.interceptor.NetOkHttpInterceptor","location":"-net/com.drake.net.interceptor/-net-ok-http-interceptor/index.html","searchKeys":["NetOkHttpInterceptor","object NetOkHttpInterceptor : Interceptor","com.drake.net.interceptor.NetOkHttpInterceptor"]},{"name":"object TipUtils","description":"com.drake.net.utils.TipUtils","location":"-net/com.drake.net.utils/-tip-utils/index.html","searchKeys":["TipUtils","object TipUtils","com.drake.net.utils.TipUtils"]},{"name":"open class AndroidScope(lifecycleOwner: LifecycleOwner?, lifeEvent: Lifecycle.Event, dispatcher: CoroutineDispatcher) : CoroutineScope, Closeable","description":"com.drake.net.scope.AndroidScope","location":"-net/com.drake.net.scope/-android-scope/index.html","searchKeys":["AndroidScope","open class AndroidScope(lifecycleOwner: LifecycleOwner?, lifeEvent: Lifecycle.Event, dispatcher: CoroutineDispatcher) : CoroutineScope, Closeable","com.drake.net.scope.AndroidScope"]},{"name":"open class BodyRequest : BaseRequest","description":"com.drake.net.request.BodyRequest","location":"-net/com.drake.net.request/-body-request/index.html","searchKeys":["BodyRequest","open class BodyRequest : BaseRequest","com.drake.net.request.BodyRequest"]},{"name":"open class HttpFailureException(request: Request, message: String?, cause: Throwable?) : NetException","description":"com.drake.net.exception.HttpFailureException","location":"-net/com.drake.net.exception/-http-failure-exception/index.html","searchKeys":["HttpFailureException","open class HttpFailureException(request: Request, message: String?, cause: Throwable?) : NetException","com.drake.net.exception.HttpFailureException"]},{"name":"open class HttpResponseException(response: Response, message: String?, cause: Throwable?) : NetException","description":"com.drake.net.exception.HttpResponseException","location":"-net/com.drake.net.exception/-http-response-exception/index.html","searchKeys":["HttpResponseException","open class HttpResponseException(response: Response, message: String?, cause: Throwable?) : NetException","com.drake.net.exception.HttpResponseException"]},{"name":"open class Interval(end: Long, period: Long, unit: TimeUnit, start: Long, initialDelay: Long) : Serializable, Closeable","description":"com.drake.net.time.Interval","location":"-net/com.drake.net.time/-interval/index.html","searchKeys":["Interval","open class Interval(end: Long, period: Long, unit: TimeUnit, start: Long, initialDelay: Long) : Serializable, Closeable","com.drake.net.time.Interval"]},{"name":"open class LogRecordInterceptor(enabled: Boolean, requestByteCount: Long, responseByteCount: Long) : Interceptor","description":"com.drake.net.interceptor.LogRecordInterceptor","location":"-net/com.drake.net.interceptor/-log-record-interceptor/index.html","searchKeys":["LogRecordInterceptor","open class LogRecordInterceptor(enabled: Boolean, requestByteCount: Long, responseByteCount: Long) : Interceptor","com.drake.net.interceptor.LogRecordInterceptor"]},{"name":"open class NetCoroutineScope(lifecycleOwner: LifecycleOwner?, lifeEvent: Lifecycle.Event, dispatcher: CoroutineDispatcher) : AndroidScope","description":"com.drake.net.scope.NetCoroutineScope","location":"-net/com.drake.net.scope/-net-coroutine-scope/index.html","searchKeys":["NetCoroutineScope","open class NetCoroutineScope(lifecycleOwner: LifecycleOwner?, lifeEvent: Lifecycle.Event, dispatcher: CoroutineDispatcher) : AndroidScope","com.drake.net.scope.NetCoroutineScope"]},{"name":"open class NetException(request: Request, message: String?, cause: Throwable?) : IOException","description":"com.drake.net.exception.NetException","location":"-net/com.drake.net.exception/-net-exception/index.html","searchKeys":["NetException","open class NetException(request: Request, message: String?, cause: Throwable?) : IOException","com.drake.net.exception.NetException"]},{"name":"open class OkHttpUtils","description":"okhttp3.OkHttpUtils","location":"-net/okhttp3/-ok-http-utils/index.html","searchKeys":["OkHttpUtils","open class OkHttpUtils","okhttp3.OkHttpUtils"]},{"name":"open class TypeToken<T>","description":"com.drake.net.reflect.TypeToken","location":"-net/com.drake.net.reflect/-type-token/index.html","searchKeys":["TypeToken","open class TypeToken<T>","com.drake.net.reflect.TypeToken"]},{"name":"open class URLParseException(message: String?, cause: Throwable?) : Exception","description":"com.drake.net.exception.URLParseException","location":"-net/com.drake.net.exception/-u-r-l-parse-exception/index.html","searchKeys":["URLParseException","open class URLParseException(message: String?, cause: Throwable?) : Exception","com.drake.net.exception.URLParseException"]},{"name":"open class UrlRequest : BaseRequest","description":"com.drake.net.request.UrlRequest","location":"-net/com.drake.net.request/-url-request/index.html","searchKeys":["UrlRequest","open class UrlRequest : BaseRequest","com.drake.net.request.UrlRequest"]},{"name":"open fun <T> checkNotNull(obj: T): T","description":"com.drake.net.reflect.$Gson$Preconditions.checkNotNull","location":"-net/com.drake.net.reflect/$-gson$-preconditions/check-not-null.html","searchKeys":["checkNotNull","open fun <T> checkNotNull(obj: T): T","com.drake.net.reflect.$Gson$Preconditions.checkNotNull"]},{"name":"open fun <T> get(type: Class<T>): TypeToken<T>","description":"com.drake.net.reflect.TypeToken.get","location":"-net/com.drake.net.reflect/-type-token/get.html","searchKeys":["get","open fun <T> get(type: Class<T>): TypeToken<T>","com.drake.net.reflect.TypeToken.get"]},{"name":"open fun arrayOf(componentType: Type): GenericArrayType","description":"com.drake.net.reflect.$Gson$Types.arrayOf","location":"-net/com.drake.net.reflect/$-gson$-types/array-of.html","searchKeys":["arrayOf","open fun arrayOf(componentType: Type): GenericArrayType","com.drake.net.reflect.$Gson$Types.arrayOf"]},{"name":"open fun buildRequest(): Request","description":"com.drake.net.request.BaseRequest.buildRequest","location":"-net/com.drake.net.request/-base-request/build-request.html","searchKeys":["buildRequest","open fun buildRequest(): Request","com.drake.net.request.BaseRequest.buildRequest"]},{"name":"open fun cancel(cause: CancellationException? = null)","description":"com.drake.net.scope.AndroidScope.cancel","location":"-net/com.drake.net.scope/-android-scope/cancel.html","searchKeys":["cancel","open fun cancel(cause: CancellationException? = null)","com.drake.net.scope.AndroidScope.cancel"]},{"name":"open fun cancel(message: String, cause: Throwable? = null)","description":"com.drake.net.scope.AndroidScope.cancel","location":"-net/com.drake.net.scope/-android-scope/cancel.html","searchKeys":["cancel","open fun cancel(message: String, cause: Throwable? = null)","com.drake.net.scope.AndroidScope.cancel"]},{"name":"open fun canonicalize(type: Type): Type","description":"com.drake.net.reflect.$Gson$Types.canonicalize","location":"-net/com.drake.net.reflect/$-gson$-types/canonicalize.html","searchKeys":["canonicalize","open fun canonicalize(type: Type): Type","com.drake.net.reflect.$Gson$Types.canonicalize"]},{"name":"open fun catch(block: AndroidScope.(Throwable) -> Unit = {}): AndroidScope","description":"com.drake.net.scope.AndroidScope.catch","location":"-net/com.drake.net.scope/-android-scope/catch.html","searchKeys":["catch","open fun catch(block: AndroidScope.(Throwable) -> Unit = {}): AndroidScope","com.drake.net.scope.AndroidScope.catch"]},{"name":"open fun checkArgument(condition: Boolean)","description":"com.drake.net.reflect.$Gson$Preconditions.checkArgument","location":"-net/com.drake.net.reflect/$-gson$-preconditions/check-argument.html","searchKeys":["checkArgument","open fun checkArgument(condition: Boolean)","com.drake.net.reflect.$Gson$Preconditions.checkArgument"]},{"name":"open fun equals(a: Type, b: Type): Boolean","description":"com.drake.net.reflect.$Gson$Types.equals","location":"-net/com.drake.net.reflect/$-gson$-types/equals.html","searchKeys":["equals","open fun equals(a: Type, b: Type): Boolean","com.drake.net.reflect.$Gson$Types.equals"]},{"name":"open fun finally(block: AndroidScope.(Throwable?) -> Unit = {}): AndroidScope","description":"com.drake.net.scope.AndroidScope.finally","location":"-net/com.drake.net.scope/-android-scope/finally.html","searchKeys":["finally","open fun finally(block: AndroidScope.(Throwable?) -> Unit = {}): AndroidScope","com.drake.net.scope.AndroidScope.finally"]},{"name":"open fun get(type: Type): TypeToken<out Any>","description":"com.drake.net.reflect.TypeToken.get","location":"-net/com.drake.net.reflect/-type-token/get.html","searchKeys":["get","open fun get(type: Type): TypeToken<out Any>","com.drake.net.reflect.TypeToken.get"]},{"name":"open fun getArray(componentType: Type): TypeToken<out Any>","description":"com.drake.net.reflect.TypeToken.getArray","location":"-net/com.drake.net.reflect/-type-token/get-array.html","searchKeys":["getArray","open fun getArray(componentType: Type): TypeToken<out Any>","com.drake.net.reflect.TypeToken.getArray"]},{"name":"open fun getArrayComponentType(array: Type): Type","description":"com.drake.net.reflect.$Gson$Types.getArrayComponentType","location":"-net/com.drake.net.reflect/$-gson$-types/get-array-component-type.html","searchKeys":["getArrayComponentType","open fun getArrayComponentType(array: Type): Type","com.drake.net.reflect.$Gson$Types.getArrayComponentType"]},{"name":"open fun getCollectionElementType(context: Type, contextRawType: Class<out Any>): Type","description":"com.drake.net.reflect.$Gson$Types.getCollectionElementType","location":"-net/com.drake.net.reflect/$-gson$-types/get-collection-element-type.html","searchKeys":["getCollectionElementType","open fun getCollectionElementType(context: Type, contextRawType: Class<out Any>): Type","com.drake.net.reflect.$Gson$Types.getCollectionElementType"]},{"name":"open fun getMapKeyAndValueTypes(context: Type, contextRawType: Class<out Any>): Array<Type>","description":"com.drake.net.reflect.$Gson$Types.getMapKeyAndValueTypes","location":"-net/com.drake.net.reflect/$-gson$-types/get-map-key-and-value-types.html","searchKeys":["getMapKeyAndValueTypes","open fun getMapKeyAndValueTypes(context: Type, contextRawType: Class<out Any>): Array<Type>","com.drake.net.reflect.$Gson$Types.getMapKeyAndValueTypes"]},{"name":"open fun getParameterized(rawType: Type, typeArguments: Array<Type>): TypeToken<out Any>","description":"com.drake.net.reflect.TypeToken.getParameterized","location":"-net/com.drake.net.reflect/-type-token/get-parameterized.html","searchKeys":["getParameterized","open fun getParameterized(rawType: Type, typeArguments: Array<Type>): TypeToken<out Any>","com.drake.net.reflect.TypeToken.getParameterized"]},{"name":"open fun getRawType(type: Type): Class<out Any>","description":"com.drake.net.reflect.$Gson$Types.getRawType","location":"-net/com.drake.net.reflect/$-gson$-types/get-raw-type.html","searchKeys":["getRawType","open fun getRawType(type: Type): Class<out Any>","com.drake.net.reflect.$Gson$Types.getRawType"]},{"name":"open fun handleError(e: Throwable)","description":"com.drake.net.scope.AndroidScope.handleError","location":"-net/com.drake.net.scope/-android-scope/handle-error.html","searchKeys":["handleError","open fun handleError(e: Throwable)","com.drake.net.scope.AndroidScope.handleError"]},{"name":"open fun headers(builder: Request.Builder): Headers.Builder","description":"okhttp3.OkHttpUtils.headers","location":"-net/okhttp3/-ok-http-utils/headers.html","searchKeys":["headers","open fun headers(builder: Request.Builder): Headers.Builder","okhttp3.OkHttpUtils.headers"]},{"name":"open fun isAssignableFrom(cls: Class<out Any>): Boolean","description":"com.drake.net.reflect.TypeToken.isAssignableFrom","location":"-net/com.drake.net.reflect/-type-token/is-assignable-from.html","searchKeys":["isAssignableFrom","open fun isAssignableFrom(cls: Class<out Any>): Boolean","com.drake.net.reflect.TypeToken.isAssignableFrom"]},{"name":"open fun isAssignableFrom(from: Type): Boolean","description":"com.drake.net.reflect.TypeToken.isAssignableFrom","location":"-net/com.drake.net.reflect/-type-token/is-assignable-from.html","searchKeys":["isAssignableFrom","open fun isAssignableFrom(from: Type): Boolean","com.drake.net.reflect.TypeToken.isAssignableFrom"]},{"name":"open fun isAssignableFrom(token: TypeToken<out Any>): Boolean","description":"com.drake.net.reflect.TypeToken.isAssignableFrom","location":"-net/com.drake.net.reflect/-type-token/is-assignable-from.html","searchKeys":["isAssignableFrom","open fun isAssignableFrom(token: TypeToken<out Any>): Boolean","com.drake.net.reflect.TypeToken.isAssignableFrom"]},{"name":"open fun launch(block: suspend CoroutineScope.() -> Unit): AndroidScope","description":"com.drake.net.scope.AndroidScope.launch","location":"-net/com.drake.net.scope/-android-scope/launch.html","searchKeys":["launch","open fun launch(block: suspend CoroutineScope.() -> Unit): AndroidScope","com.drake.net.scope.AndroidScope.launch"]},{"name":"open fun newParameterizedTypeWithOwner(ownerType: Type, rawType: Type, typeArguments: Array<Type>): ParameterizedType","description":"com.drake.net.reflect.$Gson$Types.newParameterizedTypeWithOwner","location":"-net/com.drake.net.reflect/$-gson$-types/new-parameterized-type-with-owner.html","searchKeys":["newParameterizedTypeWithOwner","open fun newParameterizedTypeWithOwner(ownerType: Type, rawType: Type, typeArguments: Array<Type>): ParameterizedType","com.drake.net.reflect.$Gson$Types.newParameterizedTypeWithOwner"]},{"name":"open fun onComplete(call: Call, e: Throwable?)","description":"com.drake.net.interfaces.NetCallback.onComplete","location":"-net/com.drake.net.interfaces/-net-callback/on-complete.html","searchKeys":["onComplete","open fun onComplete(call: Call, e: Throwable?)","com.drake.net.interfaces.NetCallback.onComplete"]},{"name":"open fun onError(call: Call, e: IOException)","description":"com.drake.net.interfaces.NetCallback.onError","location":"-net/com.drake.net.interfaces/-net-callback/on-error.html","searchKeys":["onError","open fun onError(call: Call, e: IOException)","com.drake.net.interfaces.NetCallback.onError"]},{"name":"open fun onError(e: Throwable)","description":"com.drake.net.interfaces.NetErrorHandler.onError","location":"-net/com.drake.net.interfaces/-net-error-handler/on-error.html","searchKeys":["onError","open fun onError(e: Throwable)","com.drake.net.interfaces.NetErrorHandler.onError"]},{"name":"open fun onStart(request: Request)","description":"com.drake.net.interfaces.NetCallback.onStart","location":"-net/com.drake.net.interfaces/-net-callback/on-start.html","searchKeys":["onStart","open fun onStart(request: Request)","com.drake.net.interfaces.NetCallback.onStart"]},{"name":"open fun onStateError(e: Throwable, view: View)","description":"com.drake.net.interfaces.NetErrorHandler.onStateError","location":"-net/com.drake.net.interfaces/-net-error-handler/on-state-error.html","searchKeys":["onStateError","open fun onStateError(e: Throwable, view: View)","com.drake.net.interfaces.NetErrorHandler.onStateError"]},{"name":"open fun resolve(context: Type, contextRawType: Class<out Any>, toResolve: Type): Type","description":"com.drake.net.reflect.$Gson$Types.resolve","location":"-net/com.drake.net.reflect/$-gson$-types/resolve.html","searchKeys":["resolve","open fun resolve(context: Type, contextRawType: Class<out Any>, toResolve: Type): Type","com.drake.net.reflect.$Gson$Types.resolve"]},{"name":"open fun setUrl(url: HttpUrl)","description":"com.drake.net.request.BaseRequest.setUrl","location":"-net/com.drake.net.request/-base-request/set-url.html","searchKeys":["setUrl","open fun setUrl(url: HttpUrl)","com.drake.net.request.BaseRequest.setUrl"]},{"name":"open fun setUrl(url: String)","description":"com.drake.net.request.BaseRequest.setUrl","location":"-net/com.drake.net.request/-base-request/set-url.html","searchKeys":["setUrl","open fun setUrl(url: String)","com.drake.net.request.BaseRequest.setUrl"]},{"name":"open fun setUrl(url: URL)","description":"com.drake.net.request.BaseRequest.setUrl","location":"-net/com.drake.net.request/-base-request/set-url.html","searchKeys":["setUrl","open fun setUrl(url: URL)","com.drake.net.request.BaseRequest.setUrl"]},{"name":"open fun subtypeOf(bound: Type): WildcardType","description":"com.drake.net.reflect.$Gson$Types.subtypeOf","location":"-net/com.drake.net.reflect/$-gson$-types/subtype-of.html","searchKeys":["subtypeOf","open fun subtypeOf(bound: Type): WildcardType","com.drake.net.reflect.$Gson$Types.subtypeOf"]},{"name":"open fun supertypeOf(bound: Type): WildcardType","description":"com.drake.net.reflect.$Gson$Types.supertypeOf","location":"-net/com.drake.net.reflect/$-gson$-types/supertype-of.html","searchKeys":["supertypeOf","open fun supertypeOf(bound: Type): WildcardType","com.drake.net.reflect.$Gson$Types.supertypeOf"]},{"name":"open fun tags(builder: Request.Builder): Map<Class<out Any>, Any>","description":"okhttp3.OkHttpUtils.tags","location":"-net/okhttp3/-ok-http-utils/tags.html","searchKeys":["tags","open fun tags(builder: Request.Builder): Map<Class<out Any>, Any>","okhttp3.OkHttpUtils.tags"]},{"name":"open fun tags(request: Request): Map<Class<out Any>, Any>","description":"okhttp3.OkHttpUtils.tags","location":"-net/okhttp3/-ok-http-utils/tags.html","searchKeys":["tags","open fun tags(request: Request): Map<Class<out Any>, Any>","okhttp3.OkHttpUtils.tags"]},{"name":"open fun typeToString(type: Type): String","description":"com.drake.net.reflect.$Gson$Types.typeToString","location":"-net/com.drake.net.reflect/$-gson$-types/type-to-string.html","searchKeys":["typeToString","open fun typeToString(type: Type): String","com.drake.net.reflect.$Gson$Types.typeToString"]},{"name":"open override fun <R> onConvert(succeed: Type, response: Response): R?","description":"com.drake.net.convert.JSONConvert.onConvert","location":"-net/com.drake.net.convert/-j-s-o-n-convert/on-convert.html","searchKeys":["onConvert","open override fun <R> onConvert(succeed: Type, response: Response): R?","com.drake.net.convert.JSONConvert.onConvert"]},{"name":"open override fun <R> onConvert(succeed: Type, response: Response): R?","description":"com.drake.net.convert.NetConverter.DEFAULT.onConvert","location":"-net/com.drake.net.convert/-net-converter/-d-e-f-a-u-l-t/on-convert.html","searchKeys":["onConvert","open override fun <R> onConvert(succeed: Type, response: Response): R?","com.drake.net.convert.NetConverter.DEFAULT.onConvert"]},{"name":"open override fun buildRequest(): Request","description":"com.drake.net.request.BodyRequest.buildRequest","location":"-net/com.drake.net.request/-body-request/build-request.html","searchKeys":["buildRequest","open override fun buildRequest(): Request","com.drake.net.request.BodyRequest.buildRequest"]},{"name":"open override fun cancel(cause: CancellationException?)","description":"com.drake.net.scope.NetCoroutineScope.cancel","location":"-net/com.drake.net.scope/-net-coroutine-scope/cancel.html","searchKeys":["cancel","open override fun cancel(cause: CancellationException?)","com.drake.net.scope.NetCoroutineScope.cancel"]},{"name":"open override fun close()","description":"com.drake.net.scope.AndroidScope.close","location":"-net/com.drake.net.scope/-android-scope/close.html","searchKeys":["close","open override fun close()","com.drake.net.scope.AndroidScope.close"]},{"name":"open override fun close()","description":"com.drake.net.time.Interval.close","location":"-net/com.drake.net.time/-interval/close.html","searchKeys":["close","open override fun close()","com.drake.net.time.Interval.close"]},{"name":"open override fun contentLength(): Long","description":"com.drake.net.body.NetRequestBody.contentLength","location":"-net/com.drake.net.body/-net-request-body/content-length.html","searchKeys":["contentLength","open override fun contentLength(): Long","com.drake.net.body.NetRequestBody.contentLength"]},{"name":"open override fun contentLength(): Long","description":"com.drake.net.body.NetResponseBody.contentLength","location":"-net/com.drake.net.body/-net-response-body/content-length.html","searchKeys":["contentLength","open override fun contentLength(): Long","com.drake.net.body.NetResponseBody.contentLength"]},{"name":"open override fun contentType(): MediaType?","description":"com.drake.net.body.NetRequestBody.contentType","location":"-net/com.drake.net.body/-net-request-body/content-type.html","searchKeys":["contentType","open override fun contentType(): MediaType?","com.drake.net.body.NetRequestBody.contentType"]},{"name":"open override fun contentType(): MediaType?","description":"com.drake.net.body.NetResponseBody.contentType","location":"-net/com.drake.net.body/-net-response-body/content-type.html","searchKeys":["contentType","open override fun contentType(): MediaType?","com.drake.net.body.NetResponseBody.contentType"]},{"name":"open override fun getLocalizedMessage(): String?","description":"com.drake.net.exception.NetException.getLocalizedMessage","location":"-net/com.drake.net.exception/-net-exception/get-localized-message.html","searchKeys":["getLocalizedMessage","open override fun getLocalizedMessage(): String?","com.drake.net.exception.NetException.getLocalizedMessage"]},{"name":"open override fun handleError(e: Throwable)","description":"com.drake.net.scope.NetCoroutineScope.handleError","location":"-net/com.drake.net.scope/-net-coroutine-scope/handle-error.html","searchKeys":["handleError","open override fun handleError(e: Throwable)","com.drake.net.scope.NetCoroutineScope.handleError"]},{"name":"open override fun handleError(e: Throwable)","description":"com.drake.net.scope.PageCoroutineScope.handleError","location":"-net/com.drake.net.scope/-page-coroutine-scope/handle-error.html","searchKeys":["handleError","open override fun handleError(e: Throwable)","com.drake.net.scope.PageCoroutineScope.handleError"]},{"name":"open override fun handleError(e: Throwable)","description":"com.drake.net.scope.StateCoroutineScope.handleError","location":"-net/com.drake.net.scope/-state-coroutine-scope/handle-error.html","searchKeys":["handleError","open override fun handleError(e: Throwable)","com.drake.net.scope.StateCoroutineScope.handleError"]},{"name":"open override fun intercept(chain: Interceptor.Chain): Response","description":"com.drake.net.interceptor.LogRecordInterceptor.intercept","location":"-net/com.drake.net.interceptor/-log-record-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: Interceptor.Chain): Response","com.drake.net.interceptor.LogRecordInterceptor.intercept"]},{"name":"open override fun intercept(chain: Interceptor.Chain): Response","description":"com.drake.net.interceptor.NetOkHttpInterceptor.intercept","location":"-net/com.drake.net.interceptor/-net-ok-http-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: Interceptor.Chain): Response","com.drake.net.interceptor.NetOkHttpInterceptor.intercept"]},{"name":"open override fun intercept(chain: Interceptor.Chain): Response","description":"com.drake.net.interceptor.RetryInterceptor.intercept","location":"-net/com.drake.net.interceptor/-retry-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: Interceptor.Chain): Response","com.drake.net.interceptor.RetryInterceptor.intercept"]},{"name":"open override fun launch(block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","description":"com.drake.net.scope.NetCoroutineScope.launch","location":"-net/com.drake.net.scope/-net-coroutine-scope/launch.html","searchKeys":["launch","open override fun launch(block: suspend CoroutineScope.() -> Unit): NetCoroutineScope","com.drake.net.scope.NetCoroutineScope.launch"]},{"name":"open override fun onComplete(call: Call, e: Throwable?)","description":"com.drake.net.callback.DialogCallback.onComplete","location":"-net/com.drake.net.callback/-dialog-callback/on-complete.html","searchKeys":["onComplete","open override fun onComplete(call: Call, e: Throwable?)","com.drake.net.callback.DialogCallback.onComplete"]},{"name":"open override fun onComplete(call: Call, e: Throwable?)","description":"com.drake.net.callback.PageCallback.onComplete","location":"-net/com.drake.net.callback/-page-callback/on-complete.html","searchKeys":["onComplete","open override fun onComplete(call: Call, e: Throwable?)","com.drake.net.callback.PageCallback.onComplete"]},{"name":"open override fun onComplete(call: Call, e: Throwable?)","description":"com.drake.net.callback.StateCallback.onComplete","location":"-net/com.drake.net.callback/-state-callback/on-complete.html","searchKeys":["onComplete","open override fun onComplete(call: Call, e: Throwable?)","com.drake.net.callback.StateCallback.onComplete"]},{"name":"open override fun onCreate(activity: FragmentActivity): Dialog","description":"com.drake.net.interfaces.NetDialogFactory.DEFAULT.onCreate","location":"-net/com.drake.net.interfaces/-net-dialog-factory/-d-e-f-a-u-l-t/on-create.html","searchKeys":["onCreate","open override fun onCreate(activity: FragmentActivity): Dialog","com.drake.net.interfaces.NetDialogFactory.DEFAULT.onCreate"]},{"name":"open override fun onError(call: Call, e: IOException)","description":"com.drake.net.callback.PageCallback.onError","location":"-net/com.drake.net.callback/-page-callback/on-error.html","searchKeys":["onError","open override fun onError(call: Call, e: IOException)","com.drake.net.callback.PageCallback.onError"]},{"name":"open override fun onError(call: Call, e: IOException)","description":"com.drake.net.callback.StateCallback.onError","location":"-net/com.drake.net.callback/-state-callback/on-error.html","searchKeys":["onError","open override fun onError(call: Call, e: IOException)","com.drake.net.callback.StateCallback.onError"]},{"name":"open override fun onFailure(call: Call, e: IOException)","description":"com.drake.net.callback.PageCallback.onFailure","location":"-net/com.drake.net.callback/-page-callback/on-failure.html","searchKeys":["onFailure","open override fun onFailure(call: Call, e: IOException)","com.drake.net.callback.PageCallback.onFailure"]},{"name":"open override fun onFailure(call: Call, e: IOException)","description":"com.drake.net.callback.StateCallback.onFailure","location":"-net/com.drake.net.callback/-state-callback/on-failure.html","searchKeys":["onFailure","open override fun onFailure(call: Call, e: IOException)","com.drake.net.callback.StateCallback.onFailure"]},{"name":"open override fun onFailure(call: Call, e: IOException)","description":"com.drake.net.interfaces.NetCallback.onFailure","location":"-net/com.drake.net.interfaces/-net-callback/on-failure.html","searchKeys":["onFailure","open override fun onFailure(call: Call, e: IOException)","com.drake.net.interfaces.NetCallback.onFailure"]},{"name":"open override fun onResponse(call: Call, response: Response)","description":"com.drake.net.interfaces.NetCallback.onResponse","location":"-net/com.drake.net.interfaces/-net-callback/on-response.html","searchKeys":["onResponse","open override fun onResponse(call: Call, response: Response)","com.drake.net.interfaces.NetCallback.onResponse"]},{"name":"open override fun onStart(request: Request)","description":"com.drake.net.callback.DialogCallback.onStart","location":"-net/com.drake.net.callback/-dialog-callback/on-start.html","searchKeys":["onStart","open override fun onStart(request: Request)","com.drake.net.callback.DialogCallback.onStart"]},{"name":"open override fun onStart(request: Request)","description":"com.drake.net.callback.PageCallback.onStart","location":"-net/com.drake.net.callback/-page-callback/on-start.html","searchKeys":["onStart","open override fun onStart(request: Request)","com.drake.net.callback.PageCallback.onStart"]},{"name":"open override fun onStart(request: Request)","description":"com.drake.net.callback.StateCallback.onStart","location":"-net/com.drake.net.callback/-state-callback/on-start.html","searchKeys":["onStart","open override fun onStart(request: Request)","com.drake.net.callback.StateCallback.onStart"]},{"name":"open override fun param(name: String, value: Boolean?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","open override fun param(name: String, value: Boolean?)","com.drake.net.request.BodyRequest.param"]},{"name":"open override fun param(name: String, value: Boolean?)","description":"com.drake.net.request.UrlRequest.param","location":"-net/com.drake.net.request/-url-request/param.html","searchKeys":["param","open override fun param(name: String, value: Boolean?)","com.drake.net.request.UrlRequest.param"]},{"name":"open override fun param(name: String, value: Number?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","open override fun param(name: String, value: Number?)","com.drake.net.request.BodyRequest.param"]},{"name":"open override fun param(name: String, value: Number?)","description":"com.drake.net.request.UrlRequest.param","location":"-net/com.drake.net.request/-url-request/param.html","searchKeys":["param","open override fun param(name: String, value: Number?)","com.drake.net.request.UrlRequest.param"]},{"name":"open override fun param(name: String, value: String?)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","open override fun param(name: String, value: String?)","com.drake.net.request.BodyRequest.param"]},{"name":"open override fun param(name: String, value: String?)","description":"com.drake.net.request.UrlRequest.param","location":"-net/com.drake.net.request/-url-request/param.html","searchKeys":["param","open override fun param(name: String, value: String?)","com.drake.net.request.UrlRequest.param"]},{"name":"open override fun param(name: String, value: String?, encoded: Boolean)","description":"com.drake.net.request.BodyRequest.param","location":"-net/com.drake.net.request/-body-request/param.html","searchKeys":["param","open override fun param(name: String, value: String?, encoded: Boolean)","com.drake.net.request.BodyRequest.param"]},{"name":"open override fun param(name: String, value: String?, encoded: Boolean)","description":"com.drake.net.request.UrlRequest.param","location":"-net/com.drake.net.request/-url-request/param.html","searchKeys":["param","open override fun param(name: String, value: String?, encoded: Boolean)","com.drake.net.request.UrlRequest.param"]},{"name":"open override fun source(): BufferedSource","description":"com.drake.net.body.NetResponseBody.source","location":"-net/com.drake.net.body/-net-response-body/source.html","searchKeys":["source","open override fun source(): BufferedSource","com.drake.net.body.NetResponseBody.source"]},{"name":"open override fun writeTo(sink: BufferedSink)","description":"com.drake.net.body.NetRequestBody.writeTo","location":"-net/com.drake.net.body/-net-request-body/write-to.html","searchKeys":["writeTo","open override fun writeTo(sink: BufferedSink)","com.drake.net.body.NetRequestBody.writeTo"]},{"name":"open override val coroutineContext: CoroutineContext","description":"com.drake.net.scope.AndroidScope.coroutineContext","location":"-net/com.drake.net.scope/-android-scope/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","com.drake.net.scope.AndroidScope.coroutineContext"]},{"name":"open override var method: Method","description":"com.drake.net.request.BodyRequest.method","location":"-net/com.drake.net.request/-body-request/method.html","searchKeys":["method","open override var method: Method","com.drake.net.request.BodyRequest.method"]},{"name":"open val request: Request","description":"com.drake.net.exception.NetException.request","location":"-net/com.drake.net.exception/-net-exception/request.html","searchKeys":["request","open val request: Request","com.drake.net.exception.NetException.request"]},{"name":"open val response: Response","description":"com.drake.net.exception.HttpResponseException.response","location":"-net/com.drake.net.exception/-http-response-exception/response.html","searchKeys":["response","open val response: Response","com.drake.net.exception.HttpResponseException.response"]},{"name":"open var body: RequestBody? = null","description":"com.drake.net.request.BodyRequest.body","location":"-net/com.drake.net.request/-body-request/body.html","searchKeys":["body","open var body: RequestBody? = null","com.drake.net.request.BodyRequest.body"]},{"name":"open var converter: NetConverter","description":"com.drake.net.request.BaseRequest.converter","location":"-net/com.drake.net.request/-base-request/converter.html","searchKeys":["converter","open var converter: NetConverter","com.drake.net.request.BaseRequest.converter"]},{"name":"open var formBody: FormBody.Builder","description":"com.drake.net.request.BodyRequest.formBody","location":"-net/com.drake.net.request/-body-request/form-body.html","searchKeys":["formBody","open var formBody: FormBody.Builder","com.drake.net.request.BodyRequest.formBody"]},{"name":"open var httpUrl: HttpUrl.Builder","description":"com.drake.net.request.BaseRequest.httpUrl","location":"-net/com.drake.net.request/-base-request/http-url.html","searchKeys":["httpUrl","open var httpUrl: HttpUrl.Builder","com.drake.net.request.BaseRequest.httpUrl"]},{"name":"open var mediaType: MediaType","description":"com.drake.net.request.BodyRequest.mediaType","location":"-net/com.drake.net.request/-body-request/media-type.html","searchKeys":["mediaType","open var mediaType: MediaType","com.drake.net.request.BodyRequest.mediaType"]},{"name":"open var method: Method","description":"com.drake.net.request.BaseRequest.method","location":"-net/com.drake.net.request/-base-request/method.html","searchKeys":["method","open var method: Method","com.drake.net.request.BaseRequest.method"]},{"name":"open var okHttpClient: OkHttpClient","description":"com.drake.net.request.BaseRequest.okHttpClient","location":"-net/com.drake.net.request/-base-request/ok-http-client.html","searchKeys":["okHttpClient","open var okHttpClient: OkHttpClient","com.drake.net.request.BaseRequest.okHttpClient"]},{"name":"open var okHttpRequest: Request.Builder","description":"com.drake.net.request.BaseRequest.okHttpRequest","location":"-net/com.drake.net.request/-base-request/ok-http-request.html","searchKeys":["okHttpRequest","open var okHttpRequest: Request.Builder","com.drake.net.request.BaseRequest.okHttpRequest"]},{"name":"open var partBody: MultipartBody.Builder","description":"com.drake.net.request.BodyRequest.partBody","location":"-net/com.drake.net.request/-body-request/part-body.html","searchKeys":["partBody","open var partBody: MultipartBody.Builder","com.drake.net.request.BodyRequest.partBody"]},{"name":"sealed class NetLabel","description":"com.drake.net.tag.NetLabel","location":"-net/com.drake.net.tag/-net-label/index.html","searchKeys":["NetLabel","sealed class NetLabel","com.drake.net.tag.NetLabel"]},{"name":"suspend fun <T, R> CoroutineScope.fastest(listDeferred: List<DeferredTransform<T, R>>?, group: Any? = null): R","description":"com.drake.net.utils.fastest","location":"-net/com.drake.net.utils/fastest.html","searchKeys":["fastest","suspend fun <T, R> CoroutineScope.fastest(listDeferred: List<DeferredTransform<T, R>>?, group: Any? = null): R","com.drake.net.utils.fastest"]},{"name":"suspend fun <T> CoroutineScope.fastest(listDeferred: List<Deferred<T>>, group: Any? = null): T","description":"com.drake.net.utils.fastest","location":"-net/com.drake.net.utils/fastest.html","searchKeys":["fastest","suspend fun <T> CoroutineScope.fastest(listDeferred: List<Deferred<T>>, group: Any? = null): T","com.drake.net.utils.fastest"]},{"name":"suspend fun <T> withDefault(block: suspend CoroutineScope.() -> T): T","description":"com.drake.net.utils.withDefault","location":"-net/com.drake.net.utils/with-default.html","searchKeys":["withDefault","suspend fun <T> withDefault(block: suspend CoroutineScope.() -> T): T","com.drake.net.utils.withDefault"]},{"name":"suspend fun <T> withIO(block: suspend CoroutineScope.() -> T): T","description":"com.drake.net.utils.withIO","location":"-net/com.drake.net.utils/with-i-o.html","searchKeys":["withIO","suspend fun <T> withIO(block: suspend CoroutineScope.() -> T): T","com.drake.net.utils.withIO"]},{"name":"suspend fun <T> withMain(block: suspend CoroutineScope.() -> T): T","description":"com.drake.net.utils.withMain","location":"-net/com.drake.net.utils/with-main.html","searchKeys":["withMain","suspend fun <T> withMain(block: suspend CoroutineScope.() -> T): T","com.drake.net.utils.withMain"]},{"name":"suspend fun <T> withUnconfined(block: suspend CoroutineScope.() -> T): T","description":"com.drake.net.utils.withUnconfined","location":"-net/com.drake.net.utils/with-unconfined.html","searchKeys":["withUnconfined","suspend fun <T> withUnconfined(block: suspend CoroutineScope.() -> T): T","com.drake.net.utils.withUnconfined"]},{"name":"val FORM: MediaType","description":"com.drake.net.request.MediaConst.FORM","location":"-net/com.drake.net.request/-media-const/-f-o-r-m.html","searchKeys":["FORM","val FORM: MediaType","com.drake.net.request.MediaConst.FORM"]},{"name":"val GIF: MediaType","description":"com.drake.net.request.MediaConst.GIF","location":"-net/com.drake.net.request/-media-const/-g-i-f.html","searchKeys":["GIF","val GIF: MediaType","com.drake.net.request.MediaConst.GIF"]},{"name":"val HTML: MediaType","description":"com.drake.net.request.MediaConst.HTML","location":"-net/com.drake.net.request/-media-const/-h-t-m-l.html","searchKeys":["HTML","val HTML: MediaType","com.drake.net.request.MediaConst.HTML"]},{"name":"val IMG: MediaType","description":"com.drake.net.request.MediaConst.IMG","location":"-net/com.drake.net.request/-media-const/-i-m-g.html","searchKeys":["IMG","val IMG: MediaType","com.drake.net.request.MediaConst.IMG"]},{"name":"val JPEG: MediaType","description":"com.drake.net.request.MediaConst.JPEG","location":"-net/com.drake.net.request/-media-const/-j-p-e-g.html","searchKeys":["JPEG","val JPEG: MediaType","com.drake.net.request.MediaConst.JPEG"]},{"name":"val JSON: MediaType","description":"com.drake.net.request.MediaConst.JSON","location":"-net/com.drake.net.request/-media-const/-j-s-o-n.html","searchKeys":["JSON","val JSON: MediaType","com.drake.net.request.MediaConst.JSON"]},{"name":"val MP4: MediaType","description":"com.drake.net.request.MediaConst.MP4","location":"-net/com.drake.net.request/-media-const/-m-p4.html","searchKeys":["MP4","val MP4: MediaType","com.drake.net.request.MediaConst.MP4"]},{"name":"val PNG: MediaType","description":"com.drake.net.request.MediaConst.PNG","location":"-net/com.drake.net.request/-media-const/-p-n-g.html","searchKeys":["PNG","val PNG: MediaType","com.drake.net.request.MediaConst.PNG"]},{"name":"val String?.isValid: String?","description":"com.drake.net.utils.isValid","location":"-net/com.drake.net.utils/is-valid.html","searchKeys":["isValid","val String?.isValid: String?","com.drake.net.utils.isValid"]},{"name":"val TXT: MediaType","description":"com.drake.net.request.MediaConst.TXT","location":"-net/com.drake.net.request/-media-const/-t-x-t.html","searchKeys":["TXT","val TXT: MediaType","com.drake.net.request.MediaConst.TXT"]},{"name":"val URLENCODED: MediaType","description":"com.drake.net.request.MediaConst.URLENCODED","location":"-net/com.drake.net.request/-media-const/-u-r-l-e-n-c-o-d-e-d.html","searchKeys":["URLENCODED","val URLENCODED: MediaType","com.drake.net.request.MediaConst.URLENCODED"]},{"name":"val XML: MediaType","description":"com.drake.net.request.MediaConst.XML","location":"-net/com.drake.net.request/-media-const/-x-m-l.html","searchKeys":["XML","val XML: MediaType","com.drake.net.request.MediaConst.XML"]},{"name":"val activity: FragmentActivity","description":"com.drake.net.callback.DialogCallback.activity","location":"-net/com.drake.net.callback/-dialog-callback/activity.html","searchKeys":["activity","val activity: FragmentActivity","com.drake.net.callback.DialogCallback.activity"]},{"name":"val activity: FragmentActivity","description":"com.drake.net.scope.DialogCoroutineScope.activity","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/activity.html","searchKeys":["activity","val activity: FragmentActivity","com.drake.net.scope.DialogCoroutineScope.activity"]},{"name":"val block: (T) -> R","description":"com.drake.net.transform.DeferredTransform.block","location":"-net/com.drake.net.transform/-deferred-transform/block.html","searchKeys":["block","val block: (T) -> R","com.drake.net.transform.DeferredTransform.block"]},{"name":"val cancelable: Boolean = true","description":"com.drake.net.callback.DialogCallback.cancelable","location":"-net/com.drake.net.callback/-dialog-callback/cancelable.html","searchKeys":["cancelable","val cancelable: Boolean = true","com.drake.net.callback.DialogCallback.cancelable"]},{"name":"val cancelable: Boolean = true","description":"com.drake.net.scope.DialogCoroutineScope.cancelable","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/cancelable.html","searchKeys":["cancelable","val cancelable: Boolean = true","com.drake.net.scope.DialogCoroutineScope.cancelable"]},{"name":"val code: String","description":"com.drake.net.convert.JSONConvert.code","location":"-net/com.drake.net.convert/-j-s-o-n-convert/code.html","searchKeys":["code","val code: String","com.drake.net.convert.JSONConvert.code"]},{"name":"val deferred: Deferred<T>","description":"com.drake.net.transform.DeferredTransform.deferred","location":"-net/com.drake.net.transform/-deferred-transform/deferred.html","searchKeys":["deferred","val deferred: Deferred<T>","com.drake.net.transform.DeferredTransform.deferred"]},{"name":"val dir: String?","description":"com.drake.net.tag.NetLabel.DownloadFileDir.dir","location":"-net/com.drake.net.tag/-net-label/-download-file-dir/dir.html","searchKeys":["dir","val dir: String?","com.drake.net.tag.NetLabel.DownloadFileDir.dir"]},{"name":"val dispatcher: CoroutineDispatcher","description":"com.drake.net.scope.AndroidScope.dispatcher","location":"-net/com.drake.net.scope/-android-scope/dispatcher.html","searchKeys":["dispatcher","val dispatcher: CoroutineDispatcher","com.drake.net.scope.AndroidScope.dispatcher"]},{"name":"val enabled: Boolean","description":"com.drake.net.interceptor.LogRecordInterceptor.enabled","location":"-net/com.drake.net.interceptor/-log-record-interceptor/enabled.html","searchKeys":["enabled","val enabled: Boolean","com.drake.net.interceptor.LogRecordInterceptor.enabled"]},{"name":"val enabled: Boolean","description":"com.drake.net.tag.NetLabel.LogRecord.enabled","location":"-net/com.drake.net.tag/-net-label/-log-record/enabled.html","searchKeys":["enabled","val enabled: Boolean","com.drake.net.tag.NetLabel.LogRecord.enabled"]},{"name":"val enabled: Boolean = true","description":"com.drake.net.tag.NetLabel.DownloadFileConflictRename.enabled","location":"-net/com.drake.net.tag/-net-label/-download-file-conflict-rename/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","com.drake.net.tag.NetLabel.DownloadFileConflictRename.enabled"]},{"name":"val enabled: Boolean = true","description":"com.drake.net.tag.NetLabel.DownloadFileMD5Verify.enabled","location":"-net/com.drake.net.tag/-net-label/-download-file-m-d5-verify/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","com.drake.net.tag.NetLabel.DownloadFileMD5Verify.enabled"]},{"name":"val enabled: Boolean = true","description":"com.drake.net.tag.NetLabel.DownloadFileNameDecode.enabled","location":"-net/com.drake.net.tag/-net-label/-download-file-name-decode/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","com.drake.net.tag.NetLabel.DownloadFileNameDecode.enabled"]},{"name":"val enabled: Boolean = true","description":"com.drake.net.tag.NetLabel.DownloadTempFile.enabled","location":"-net/com.drake.net.tag/-net-label/-download-temp-file/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","com.drake.net.tag.NetLabel.DownloadTempFile.enabled"]},{"name":"val index: Int","description":"com.drake.net.scope.PageCoroutineScope.index","location":"-net/com.drake.net.scope/-page-coroutine-scope/--index--.html","searchKeys":["index","val index: Int","com.drake.net.scope.PageCoroutineScope.index"]},{"name":"val lifeEvent: Lifecycle.Event","description":"com.drake.net.interfaces.NetCallback.lifeEvent","location":"-net/com.drake.net.interfaces/-net-callback/life-event.html","searchKeys":["lifeEvent","val lifeEvent: Lifecycle.Event","com.drake.net.interfaces.NetCallback.lifeEvent"]},{"name":"val lifecycle: LifecycleOwner? = null","description":"com.drake.net.interfaces.NetCallback.lifecycle","location":"-net/com.drake.net.interfaces/-net-callback/lifecycle.html","searchKeys":["lifecycle","val lifecycle: LifecycleOwner? = null","com.drake.net.interfaces.NetCallback.lifecycle"]},{"name":"val message: String","description":"com.drake.net.convert.JSONConvert.message","location":"-net/com.drake.net.convert/-j-s-o-n-convert/message.html","searchKeys":["message","val message: String","com.drake.net.convert.JSONConvert.message"]},{"name":"val name: String?","description":"com.drake.net.tag.NetLabel.DownloadFileName.name","location":"-net/com.drake.net.tag/-net-label/-download-file-name/name.html","searchKeys":["name","val name: String?","com.drake.net.tag.NetLabel.DownloadFileName.name"]},{"name":"val page: PageRefreshLayout","description":"com.drake.net.callback.PageCallback.page","location":"-net/com.drake.net.callback/-page-callback/page.html","searchKeys":["page","val page: PageRefreshLayout","com.drake.net.callback.PageCallback.page"]},{"name":"val page: PageRefreshLayout","description":"com.drake.net.scope.PageCoroutineScope.page","location":"-net/com.drake.net.scope/-page-coroutine-scope/page.html","searchKeys":["page","val page: PageRefreshLayout","com.drake.net.scope.PageCoroutineScope.page"]},{"name":"val rawType: Class<out Any>","description":"com.drake.net.reflect.TypeToken.rawType","location":"-net/com.drake.net.reflect/-type-token/raw-type.html","searchKeys":["rawType","val rawType: Class<out Any>","com.drake.net.reflect.TypeToken.rawType"]},{"name":"val requestByteCount: Long","description":"com.drake.net.interceptor.LogRecordInterceptor.requestByteCount","location":"-net/com.drake.net.interceptor/-log-record-interceptor/request-byte-count.html","searchKeys":["requestByteCount","val requestByteCount: Long","com.drake.net.interceptor.LogRecordInterceptor.requestByteCount"]},{"name":"val responseByteCount: Long","description":"com.drake.net.interceptor.LogRecordInterceptor.responseByteCount","location":"-net/com.drake.net.interceptor/-log-record-interceptor/response-byte-count.html","searchKeys":["responseByteCount","val responseByteCount: Long","com.drake.net.interceptor.LogRecordInterceptor.responseByteCount"]},{"name":"val retryCount: Int = 3","description":"com.drake.net.interceptor.RetryInterceptor.retryCount","location":"-net/com.drake.net.interceptor/-retry-interceptor/retry-count.html","searchKeys":["retryCount","val retryCount: Int = 3","com.drake.net.interceptor.RetryInterceptor.retryCount"]},{"name":"val scopeGroup: CoroutineExceptionHandler","description":"com.drake.net.scope.AndroidScope.scopeGroup","location":"-net/com.drake.net.scope/-android-scope/scope-group.html","searchKeys":["scopeGroup","val scopeGroup: CoroutineExceptionHandler","com.drake.net.scope.AndroidScope.scopeGroup"]},{"name":"val startElapsedRealtime: Long","description":"com.drake.net.component.Progress.startElapsedRealtime","location":"-net/com.drake.net.component/-progress/start-elapsed-realtime.html","searchKeys":["startElapsedRealtime","val startElapsedRealtime: Long","com.drake.net.component.Progress.startElapsedRealtime"]},{"name":"val state: StateLayout","description":"com.drake.net.callback.StateCallback.state","location":"-net/com.drake.net.callback/-state-callback/state.html","searchKeys":["state","val state: StateLayout","com.drake.net.callback.StateCallback.state"]},{"name":"val state: StateLayout","description":"com.drake.net.scope.StateCoroutineScope.state","location":"-net/com.drake.net.scope/-state-coroutine-scope/state.html","searchKeys":["state","val state: StateLayout","com.drake.net.scope.StateCoroutineScope.state"]},{"name":"val success: String","description":"com.drake.net.convert.JSONConvert.success","location":"-net/com.drake.net.convert/-j-s-o-n-convert/success.html","searchKeys":["success","val success: String","com.drake.net.convert.JSONConvert.success"]},{"name":"val type: Type","description":"com.drake.net.reflect.TypeToken.type","location":"-net/com.drake.net.reflect/-type-token/type.html","searchKeys":["type","val type: Type","com.drake.net.reflect.TypeToken.type"]},{"name":"val value: Any?","description":"com.drake.net.tag.NetLabel.RequestGroup.value","location":"-net/com.drake.net.tag/-net-label/-request-group/value.html","searchKeys":["value","val value: Any?","com.drake.net.tag.NetLabel.RequestGroup.value"]},{"name":"val value: Any?","description":"com.drake.net.tag.NetLabel.RequestId.value","location":"-net/com.drake.net.tag/-net-label/-request-id/value.html","searchKeys":["value","val value: Any?","com.drake.net.tag.NetLabel.RequestId.value"]},{"name":"val value: KType?","description":"com.drake.net.tag.NetLabel.RequestKType.value","location":"-net/com.drake.net.tag/-net-label/-request-k-type/value.html","searchKeys":["value","val value: KType?","com.drake.net.tag.NetLabel.RequestKType.value"]},{"name":"var Request.logRecord: Boolean?","description":"com.drake.net.request.logRecord","location":"-net/com.drake.net.request/log-record.html","searchKeys":["logRecord","var Request.logRecord: Boolean?","com.drake.net.request.logRecord"]},{"name":"var UnSafeHostnameVerifier: HostnameVerifier","description":"com.drake.net.utils.Https.UnSafeHostnameVerifier","location":"-net/com.drake.net.utils/-https/-un-safe-hostname-verifier.html","searchKeys":["UnSafeHostnameVerifier","var UnSafeHostnameVerifier: HostnameVerifier","com.drake.net.utils.Https.UnSafeHostnameVerifier"]},{"name":"var UnSafeTrustManager: X509TrustManager","description":"com.drake.net.utils.Https.UnSafeTrustManager","location":"-net/com.drake.net.utils/-https/-un-safe-trust-manager.html","searchKeys":["UnSafeTrustManager","var UnSafeTrustManager: X509TrustManager","com.drake.net.utils.Https.UnSafeTrustManager"]},{"name":"var animate: Boolean = false","description":"com.drake.net.scope.NetCoroutineScope.animate","location":"-net/com.drake.net.scope/-net-coroutine-scope/animate.html","searchKeys":["animate","var animate: Boolean = false","com.drake.net.scope.NetCoroutineScope.animate"]},{"name":"var converter: NetConverter","description":"com.drake.net.NetConfig.converter","location":"-net/com.drake.net/-net-config/converter.html","searchKeys":["converter","var converter: NetConverter","com.drake.net.NetConfig.converter"]},{"name":"var count: Long","description":"com.drake.net.time.Interval.count","location":"-net/com.drake.net.time/-interval/count.html","searchKeys":["count","var count: Long","com.drake.net.time.Interval.count"]},{"name":"var currentByteCount: Long = 0","description":"com.drake.net.component.Progress.currentByteCount","location":"-net/com.drake.net.component/-progress/current-byte-count.html","searchKeys":["currentByteCount","var currentByteCount: Long = 0","com.drake.net.component.Progress.currentByteCount"]},{"name":"var dialog: Dialog? = null","description":"com.drake.net.callback.DialogCallback.dialog","location":"-net/com.drake.net.callback/-dialog-callback/dialog.html","searchKeys":["dialog","var dialog: Dialog? = null","com.drake.net.callback.DialogCallback.dialog"]},{"name":"var dialog: Dialog? = null","description":"com.drake.net.scope.DialogCoroutineScope.dialog","location":"-net/com.drake.net.scope/-dialog-coroutine-scope/dialog.html","searchKeys":["dialog","var dialog: Dialog? = null","com.drake.net.scope.DialogCoroutineScope.dialog"]},{"name":"var dialogFactory: NetDialogFactory","description":"com.drake.net.NetConfig.dialogFactory","location":"-net/com.drake.net/-net-config/dialog-factory.html","searchKeys":["dialogFactory","var dialogFactory: NetDialogFactory","com.drake.net.NetConfig.dialogFactory"]},{"name":"var elapsedTime: Long = 0L","description":"com.drake.net.interfaces.ProgressListener.elapsedTime","location":"-net/com.drake.net.interfaces/-progress-listener/elapsed-time.html","searchKeys":["elapsedTime","var elapsedTime: Long = 0L","com.drake.net.interfaces.ProgressListener.elapsedTime"]},{"name":"var enabled: Boolean = false","description":"com.drake.net.log.LogRecorder.enabled","location":"-net/com.drake.net.log/-log-recorder/enabled.html","searchKeys":["enabled","var enabled: Boolean = false","com.drake.net.log.LogRecorder.enabled"]},{"name":"var end: Long","description":"com.drake.net.time.Interval.end","location":"-net/com.drake.net.time/-interval/end.html","searchKeys":["end","var end: Long","com.drake.net.time.Interval.end"]},{"name":"var errorHandler: NetErrorHandler","description":"com.drake.net.NetConfig.errorHandler","location":"-net/com.drake.net/-net-config/error-handler.html","searchKeys":["errorHandler","var errorHandler: NetErrorHandler","com.drake.net.NetConfig.errorHandler"]},{"name":"var host: String","description":"com.drake.net.NetConfig.host","location":"-net/com.drake.net/-net-config/host.html","searchKeys":["host","var host: String","com.drake.net.NetConfig.host"]},{"name":"var interval: Long = 500","description":"com.drake.net.interfaces.ProgressListener.interval","location":"-net/com.drake.net.interfaces/-progress-listener/interval.html","searchKeys":["interval","var interval: Long = 500","com.drake.net.interfaces.ProgressListener.interval"]},{"name":"var intervalByteCount: Long = 0","description":"com.drake.net.component.Progress.intervalByteCount","location":"-net/com.drake.net.component/-progress/interval-byte-count.html","searchKeys":["intervalByteCount","var intervalByteCount: Long = 0","com.drake.net.component.Progress.intervalByteCount"]},{"name":"var intervalByteCount: Long = 0L","description":"com.drake.net.interfaces.ProgressListener.intervalByteCount","location":"-net/com.drake.net.interfaces/-progress-listener/interval-byte-count.html","searchKeys":["intervalByteCount","var intervalByteCount: Long = 0L","com.drake.net.interfaces.ProgressListener.intervalByteCount"]},{"name":"var intervalTime: Long = 0","description":"com.drake.net.component.Progress.intervalTime","location":"-net/com.drake.net.component/-progress/interval-time.html","searchKeys":["intervalTime","var intervalTime: Long = 0","com.drake.net.component.Progress.intervalTime"]},{"name":"var logEnabled: Boolean = true","description":"com.drake.net.NetConfig.logEnabled","location":"-net/com.drake.net/-net-config/log-enabled.html","searchKeys":["logEnabled","var logEnabled: Boolean = true","com.drake.net.NetConfig.logEnabled"]},{"name":"var okHttpClient: OkHttpClient","description":"com.drake.net.NetConfig.okHttpClient","location":"-net/com.drake.net/-net-config/ok-http-client.html","searchKeys":["okHttpClient","var okHttpClient: OkHttpClient","com.drake.net.NetConfig.okHttpClient"]},{"name":"var onDialog: (FragmentActivity) -> Dialog","description":"com.drake.net.NetConfig.onDialog","location":"-net/com.drake.net/-net-config/on-dialog.html","searchKeys":["onDialog","var onDialog: (FragmentActivity) -> Dialog","com.drake.net.NetConfig.onDialog"]},{"name":"var onError: Throwable.() -> Unit","description":"com.drake.net.NetConfig.onError","location":"-net/com.drake.net/-net-config/on-error.html","searchKeys":["onError","var onError: Throwable.() -> Unit","com.drake.net.NetConfig.onError"]},{"name":"var onStateError: Throwable.(view: View) -> Unit","description":"com.drake.net.NetConfig.onStateError","location":"-net/com.drake.net/-net-config/on-state-error.html","searchKeys":["onStateError","var onStateError: Throwable.(view: View) -> Unit","com.drake.net.NetConfig.onStateError"]},{"name":"var requestInterceptor: RequestInterceptor? = null","description":"com.drake.net.NetConfig.requestInterceptor","location":"-net/com.drake.net/-net-config/request-interceptor.html","searchKeys":["requestInterceptor","var requestInterceptor: RequestInterceptor? = null","com.drake.net.NetConfig.requestInterceptor"]},{"name":"var runningCalls: ConcurrentLinkedQueue<WeakReference<Call>>","description":"com.drake.net.NetConfig.runningCalls","location":"-net/com.drake.net/-net-config/running-calls.html","searchKeys":["runningCalls","var runningCalls: ConcurrentLinkedQueue<WeakReference<Call>>","com.drake.net.NetConfig.runningCalls"]},{"name":"var speedBytes: Long = 0L","description":"com.drake.net.component.Progress.speedBytes","location":"-net/com.drake.net.component/-progress/speed-bytes.html","searchKeys":["speedBytes","var speedBytes: Long = 0L","com.drake.net.component.Progress.speedBytes"]},{"name":"var state: IntervalStatus","description":"com.drake.net.time.Interval.state","location":"-net/com.drake.net.time/-interval/state.html","searchKeys":["state","var state: IntervalStatus","com.drake.net.time.Interval.state"]},{"name":"var tag: Any? = null","description":"com.drake.net.exception.ConvertException.tag","location":"-net/com.drake.net.exception/-convert-exception/tag.html","searchKeys":["tag","var tag: Any? = null","com.drake.net.exception.ConvertException.tag"]},{"name":"var tag: Any? = null","description":"com.drake.net.exception.DownloadFileException.tag","location":"-net/com.drake.net.exception/-download-file-exception/tag.html","searchKeys":["tag","var tag: Any? = null","com.drake.net.exception.DownloadFileException.tag"]},{"name":"var tag: Any? = null","description":"com.drake.net.exception.RequestParamsException.tag","location":"-net/com.drake.net.exception/-request-params-exception/tag.html","searchKeys":["tag","var tag: Any? = null","com.drake.net.exception.RequestParamsException.tag"]},{"name":"var tag: Any? = null","description":"com.drake.net.exception.ResponseException.tag","location":"-net/com.drake.net.exception/-response-exception/tag.html","searchKeys":["tag","var tag: Any? = null","com.drake.net.exception.ResponseException.tag"]},{"name":"var tag: Any? = null","description":"com.drake.net.exception.ServerResponseException.tag","location":"-net/com.drake.net.exception/-server-response-exception/tag.html","searchKeys":["tag","var tag: Any? = null","com.drake.net.exception.ServerResponseException.tag"]},{"name":"var totalByteCount: Long = 0","description":"com.drake.net.component.Progress.totalByteCount","location":"-net/com.drake.net.component/-progress/total-byte-count.html","searchKeys":["totalByteCount","var totalByteCount: Long = 0","com.drake.net.component.Progress.totalByteCount"]},{"name":"var type: String","description":"com.drake.net.log.MessageType.type","location":"-net/com.drake.net.log/-message-type/type.html","searchKeys":["type","var type: String","com.drake.net.log.MessageType.type"]}]
