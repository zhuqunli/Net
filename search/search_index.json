{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u672c\u6846\u67b6\u4f7f\u7528Android\u4e3b\u6d41\u7684Http\u6846\u67b6OkHttp\u4f5c\u4e3a\u8bf7\u6c42\u5185\u6838, \u9075\u5b88\u4e0d\u5f71\u54cdOkHttp\u539f\u6709\u7684\u51fd\u6570\u7ec4\u4ef6\u4f7f\u7528\u539f\u5219\u5f00\u53d1 \u975e\u5e38\u6b22\u8fce\u5171\u540c\u8d21\u732e\u4ee3\u7801/\u4fee\u8ba2\u6587\u6863, \u70b9\u51fb\u6587\u6863\u53f3\u4e0a\u89d2\u5c0f\u94c5\u7b14\u53ef\u76f4\u63a5\u4fee\u8ba2\u6587\u6863 \u2197 \u524d\u8a00 \u00b6 \u907f\u514d\u5199\u4e00\u4e2a\u51fd\u6570\u5c01\u88c5\u4e00\u4e2a\u8bf7\u6c42\u51fd\u6570, \u907f\u514d\u8fc7\u5ea6\u5c01\u88c5 Post/Get\u7b49 \u51fd\u6570\u5c5e\u4e8e\u8bf7\u6c42\u52a8\u4f5c. scope* \u7b49\u51fd\u6570\u5c5e\u4e8e\u4f5c\u7528\u57df, \u5047\u8bbe\u4f60\u8981\u5c01\u88c5\u8bf7\u6c42\u5c3d\u91cf\u5c01\u88c5 \u8bf7\u6c42\u52a8\u4f5c \u800c\u4e0d\u662f\u4f5c\u7528\u57df \u5feb\u901f\u6539\u53d8\u9879\u76ee\u7684\u8bf7\u6c42URL\u53ef\u4ee5URL\u4f5c\u4e3a\u5e38\u91cf\u5199\u5230\u5355\u4e00\u6587\u4ef6\u5c06\u800c\u4e0d\u5efa\u8bae\u5c06\u6240\u6709\u8bf7\u6c42\u52a8\u4f5c\u5199\u5230\u5355\u4e00\u6587\u4ef6 Net\u652f\u6301\u76ee\u524d\u6700\u5148\u8fdb\u7684\u534f\u7a0b\u5e76\u53d1\u7f51\u7edc, \u5f53\u7136\u5373\u4f7f\u4e0d\u4f1a\u534f\u7a0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5\u6846\u67b6 \u5982\u679c\u4f60\u89c9\u5f97\u6587\u6863\u770b\u4e0d\u61c2\u6216\u8005\u6709\u6b67\u4e49\u90a3\u80af\u5b9a\u662f\u4f5c\u8005\u95ee\u9898, \u8bf7\u53cd\u9988\u7ed9\u4f5c\u8005\u6216\u8005\u81ea\u6211\u4fee\u8ba2 \u4f7f\u7528 \u00b6 \u8fd9\u91cc\u6f14\u793a\u53d1\u8d77\u7f51\u7edc \u8bf7\u6c42\u767e\u5ea6\u7f51\u7ad9 \u5185\u5bb9\u7684\u4e09\u4e2a\u6b65\u9aa4 \u521b\u5efa\u4f5c\u7528\u57df \u53d1\u8d77\u8bf7\u6c42 \u63a5\u6536\u6570\u636e \u5355\u4e2a\u8bf7\u6c42 scopeNetLife { // \u521b\u5efa\u4f5c\u7528\u57df // \u8fd9\u4e2a\u5927\u62ec\u53f7\u5185\u5c31\u5c5e\u4e8e\u4f5c\u7528\u57df\u5185\u90e8 val data = Get < String > ( \"http://www.baidu.com/\" ). await () // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de`String`\u7c7b\u578b\u6570\u636e } \u4e32\u884c\u8bf7\u6c42 scopeNetLife { val data = Get < String > ( \"http://0000www.baidu.com/\" ). await () // \u8bf7\u6c42A \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u6570\u636e val data = Get < String > ( \"http://www.baidu.com/\" ). await () // \u8bf7\u6c42B \u5c06\u7b49\u5f85A\u8bf7\u6c42\u5b8c\u6bd5\u540e\u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u6570\u636e } \u5e76\u53d1\u8bf7\u6c42 scopeNetLife { // \u4ee5\u4e0b\u4e24\u4e2a\u7f51\u7edc\u8bf7\u6c42\u5c5e\u4e8e\u540c\u65f6\u8fdb\u884c\u4e2d val aDeferred = Get < String > ( \"http://www.baidu.com/\" ) // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61(Deferred)\u8868\u793a\"\u4efb\u52a1A\" val bDeferred = Get < String > ( \"http://www.baidu.com/\" ) // \u53d1\u8d77\u8bf7\u6c42\u5e76\u8fd4\u56de\"\u4efb\u52a1B\" // \u968f\u4efb\u52a1\u540c\u65f6\u8fdb\u884c, \u4f46\u662f\u6570\u636e\u4f9d\u7136\u53ef\u4ee5\u6309\u5e8f\u8fd4\u56de val aData = aDeferred . await () // \u7b49\u5f85\u4efb\u52a1A\u8fd4\u56de\u6570\u636e val bData = bDeferred . await () // \u7b49\u5f85\u4efb\u52a1B\u8fd4\u56de\u6570\u636e } \u591a\u4e2a\u7f51\u7edc\u8bf7\u6c42\u653e\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u5c31\u53ef\u4ee5\u7edf\u4e00\u63a7\u5236, \u5982\u679c\u4f60\u7684\u591a\u4e2a\u7f51\u7edc\u8bf7\u6c42\u6beb\u65e0\u5173\u8054, \u4f60\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u4f5c\u7528\u57df. \u5f53 Get \u6216 Post \u7b49\u51fd\u6570\u8c03\u7528\u5c31\u4f1a\u5f00\u59cb\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42, await \u53ea\u662f\u7b49\u5f85\u5176\u8bf7\u6c42\u6210\u529f\u8fd4\u56de\u7ed3\u679c, \u6240\u4ee5\u5982\u679c\u4f60\u5728 await \u540e\u6267\u884c\u7684\u7f51\u7edc\u8bf7\u6c42,\u8fd9\u4e0d\u5c5e\u4e8e\u5e76\u53d1(\u5c5e\u4e8e\u4e32\u884c) \u5e76\u53d1\u7684\u9519\u8bef\u793a\u4f8b scopeNetLife { // \u8bf7\u6c42A val aDeferred = Get < String > ( \"http://www.baidu.com/\" ). await () // \u8bf7\u6c42B, \u7531\u4e8e\u4e0a\u9762\u4f7f\u7528`await()`\u51fd\u6570, \u6240\u4ee5\u5fc5\u987b\u7b49\u5f85A\u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u540e\u624d\u4f1a\u6267\u884cB val bDeferred = Get < String > ( \"http://www.baidu.com/\" ) val bData = bDeferred . await () // \u7b49\u5f85\u4efb\u52a1B\u8fd4\u56de\u6570\u636e } \u8fd4\u56de\u7ed3\u679c \u00b6 \u8fd4\u56de\u7ed3\u679c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b(\u5373Post\u7b49\u51fd\u6570\u7684 \u6cdb\u578b )\u7531\u8f6c\u6362\u5668\u51b3\u5b9a, \u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b \u51fd\u6570 \u63cf\u8ff0 String \u5b57\u7b26\u4e32 ByteArray \u5b57\u8282\u6570\u7ec4 ByteString \u5185\u90e8\u5b9a\u4e49\u7684\u4e00\u79cd\u5b57\u7b26\u4e32\u5bf9\u8c61 Response \u6700\u57fa\u7840\u7684\u54cd\u5e94 File \u6587\u4ef6\u5bf9\u8c61, \u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u5e94\u5f53\u79f0\u4e3a \u4e0b\u8f7d\u6587\u4ef6 \u975e\u4ee5\u4e0a\u7c7b\u578b\u8981\u6c42 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 \u8f6c\u6362\u5668\u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4f60\u7684\u7f51\u7edc\u8bf7\u6c42\u7684\u8fd4\u56de\u7ed3\u679c\u7c7b\u578b, \u4f60\u751a\u81f3\u53ef\u4ee5\u8fd4\u56denull, \u524d\u63d0\u662f\u6cdb\u578b\u4e3a\u53ef\u7a7a\u7c7b\u578b RestFul \u00b6 Net\u652f\u6301RestFul\u8bbe\u8ba1\u98ce\u683c scopeNetLife { tvFragment . text = Get < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Post < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Head < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Put < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Patch < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Delete < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Trace < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Options < String > ( \"http://www.baidu.com/\" ). await () } \u51fd\u6570 \u00b6 \u9ed8\u8ba4\u5728IO\u7ebf\u7a0b\u6267\u884c\u7f51\u7edc\u8bf7\u6c42(\u901a\u8fc7\u4f5c\u7528\u57df\u53c2\u6570\u53ef\u4ee5\u63a7\u5236Dispatch\u8c03\u5ea6\u5668), \u8981\u6c42\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u6267\u884c. \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 Get \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Post \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Head \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Options \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Trace \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Delete \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Put \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Patch \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5","title":"\u4f7f\u7528"},{"location":"#_1","text":"\u907f\u514d\u5199\u4e00\u4e2a\u51fd\u6570\u5c01\u88c5\u4e00\u4e2a\u8bf7\u6c42\u51fd\u6570, \u907f\u514d\u8fc7\u5ea6\u5c01\u88c5 Post/Get\u7b49 \u51fd\u6570\u5c5e\u4e8e\u8bf7\u6c42\u52a8\u4f5c. scope* \u7b49\u51fd\u6570\u5c5e\u4e8e\u4f5c\u7528\u57df, \u5047\u8bbe\u4f60\u8981\u5c01\u88c5\u8bf7\u6c42\u5c3d\u91cf\u5c01\u88c5 \u8bf7\u6c42\u52a8\u4f5c \u800c\u4e0d\u662f\u4f5c\u7528\u57df \u5feb\u901f\u6539\u53d8\u9879\u76ee\u7684\u8bf7\u6c42URL\u53ef\u4ee5URL\u4f5c\u4e3a\u5e38\u91cf\u5199\u5230\u5355\u4e00\u6587\u4ef6\u5c06\u800c\u4e0d\u5efa\u8bae\u5c06\u6240\u6709\u8bf7\u6c42\u52a8\u4f5c\u5199\u5230\u5355\u4e00\u6587\u4ef6 Net\u652f\u6301\u76ee\u524d\u6700\u5148\u8fdb\u7684\u534f\u7a0b\u5e76\u53d1\u7f51\u7edc, \u5f53\u7136\u5373\u4f7f\u4e0d\u4f1a\u534f\u7a0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5\u6846\u67b6 \u5982\u679c\u4f60\u89c9\u5f97\u6587\u6863\u770b\u4e0d\u61c2\u6216\u8005\u6709\u6b67\u4e49\u90a3\u80af\u5b9a\u662f\u4f5c\u8005\u95ee\u9898, \u8bf7\u53cd\u9988\u7ed9\u4f5c\u8005\u6216\u8005\u81ea\u6211\u4fee\u8ba2","title":"\u524d\u8a00"},{"location":"#_2","text":"\u8fd9\u91cc\u6f14\u793a\u53d1\u8d77\u7f51\u7edc \u8bf7\u6c42\u767e\u5ea6\u7f51\u7ad9 \u5185\u5bb9\u7684\u4e09\u4e2a\u6b65\u9aa4 \u521b\u5efa\u4f5c\u7528\u57df \u53d1\u8d77\u8bf7\u6c42 \u63a5\u6536\u6570\u636e \u5355\u4e2a\u8bf7\u6c42 scopeNetLife { // \u521b\u5efa\u4f5c\u7528\u57df // \u8fd9\u4e2a\u5927\u62ec\u53f7\u5185\u5c31\u5c5e\u4e8e\u4f5c\u7528\u57df\u5185\u90e8 val data = Get < String > ( \"http://www.baidu.com/\" ). await () // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de`String`\u7c7b\u578b\u6570\u636e } \u4e32\u884c\u8bf7\u6c42 scopeNetLife { val data = Get < String > ( \"http://0000www.baidu.com/\" ). await () // \u8bf7\u6c42A \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u6570\u636e val data = Get < String > ( \"http://www.baidu.com/\" ). await () // \u8bf7\u6c42B \u5c06\u7b49\u5f85A\u8bf7\u6c42\u5b8c\u6bd5\u540e\u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u6570\u636e } \u5e76\u53d1\u8bf7\u6c42 scopeNetLife { // \u4ee5\u4e0b\u4e24\u4e2a\u7f51\u7edc\u8bf7\u6c42\u5c5e\u4e8e\u540c\u65f6\u8fdb\u884c\u4e2d val aDeferred = Get < String > ( \"http://www.baidu.com/\" ) // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61(Deferred)\u8868\u793a\"\u4efb\u52a1A\" val bDeferred = Get < String > ( \"http://www.baidu.com/\" ) // \u53d1\u8d77\u8bf7\u6c42\u5e76\u8fd4\u56de\"\u4efb\u52a1B\" // \u968f\u4efb\u52a1\u540c\u65f6\u8fdb\u884c, \u4f46\u662f\u6570\u636e\u4f9d\u7136\u53ef\u4ee5\u6309\u5e8f\u8fd4\u56de val aData = aDeferred . await () // \u7b49\u5f85\u4efb\u52a1A\u8fd4\u56de\u6570\u636e val bData = bDeferred . await () // \u7b49\u5f85\u4efb\u52a1B\u8fd4\u56de\u6570\u636e } \u591a\u4e2a\u7f51\u7edc\u8bf7\u6c42\u653e\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u5c31\u53ef\u4ee5\u7edf\u4e00\u63a7\u5236, \u5982\u679c\u4f60\u7684\u591a\u4e2a\u7f51\u7edc\u8bf7\u6c42\u6beb\u65e0\u5173\u8054, \u4f60\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u4f5c\u7528\u57df. \u5f53 Get \u6216 Post \u7b49\u51fd\u6570\u8c03\u7528\u5c31\u4f1a\u5f00\u59cb\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42, await \u53ea\u662f\u7b49\u5f85\u5176\u8bf7\u6c42\u6210\u529f\u8fd4\u56de\u7ed3\u679c, \u6240\u4ee5\u5982\u679c\u4f60\u5728 await \u540e\u6267\u884c\u7684\u7f51\u7edc\u8bf7\u6c42,\u8fd9\u4e0d\u5c5e\u4e8e\u5e76\u53d1(\u5c5e\u4e8e\u4e32\u884c) \u5e76\u53d1\u7684\u9519\u8bef\u793a\u4f8b scopeNetLife { // \u8bf7\u6c42A val aDeferred = Get < String > ( \"http://www.baidu.com/\" ). await () // \u8bf7\u6c42B, \u7531\u4e8e\u4e0a\u9762\u4f7f\u7528`await()`\u51fd\u6570, \u6240\u4ee5\u5fc5\u987b\u7b49\u5f85A\u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u540e\u624d\u4f1a\u6267\u884cB val bDeferred = Get < String > ( \"http://www.baidu.com/\" ) val bData = bDeferred . await () // \u7b49\u5f85\u4efb\u52a1B\u8fd4\u56de\u6570\u636e }","title":"\u4f7f\u7528"},{"location":"#_3","text":"\u8fd4\u56de\u7ed3\u679c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b(\u5373Post\u7b49\u51fd\u6570\u7684 \u6cdb\u578b )\u7531\u8f6c\u6362\u5668\u51b3\u5b9a, \u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b \u51fd\u6570 \u63cf\u8ff0 String \u5b57\u7b26\u4e32 ByteArray \u5b57\u8282\u6570\u7ec4 ByteString \u5185\u90e8\u5b9a\u4e49\u7684\u4e00\u79cd\u5b57\u7b26\u4e32\u5bf9\u8c61 Response \u6700\u57fa\u7840\u7684\u54cd\u5e94 File \u6587\u4ef6\u5bf9\u8c61, \u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u5e94\u5f53\u79f0\u4e3a \u4e0b\u8f7d\u6587\u4ef6 \u975e\u4ee5\u4e0a\u7c7b\u578b\u8981\u6c42 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 \u8f6c\u6362\u5668\u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4f60\u7684\u7f51\u7edc\u8bf7\u6c42\u7684\u8fd4\u56de\u7ed3\u679c\u7c7b\u578b, \u4f60\u751a\u81f3\u53ef\u4ee5\u8fd4\u56denull, \u524d\u63d0\u662f\u6cdb\u578b\u4e3a\u53ef\u7a7a\u7c7b\u578b","title":"\u8fd4\u56de\u7ed3\u679c"},{"location":"#restful","text":"Net\u652f\u6301RestFul\u8bbe\u8ba1\u98ce\u683c scopeNetLife { tvFragment . text = Get < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Post < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Head < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Put < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Patch < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Delete < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Trace < String > ( \"http://www.baidu.com/\" ). await () tvFragment . text = Options < String > ( \"http://www.baidu.com/\" ). await () }","title":"RestFul"},{"location":"#_4","text":"\u9ed8\u8ba4\u5728IO\u7ebf\u7a0b\u6267\u884c\u7f51\u7edc\u8bf7\u6c42(\u901a\u8fc7\u4f5c\u7528\u57df\u53c2\u6570\u53ef\u4ee5\u63a7\u5236Dispatch\u8c03\u5ea6\u5668), \u8981\u6c42\u5728\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u6267\u884c. \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 Get \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Post \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Head \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Options \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Trace \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Delete \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Put \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Patch \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5","title":"\u51fd\u6570"},{"location":"auto-dialog/","text":"Net\u652f\u6301\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u81ea\u52a8\u5f39\u51fa\u548c\u5173\u95ed\u5bf9\u8bdd\u6846(Loading Dialog) \u81ea\u52a8\u663e\u793a\u52a0\u8f7d\u6846 \u00b6 \u53ea\u9700\u8981\u4f7f\u7528 scopeDialog \u4f5c\u7528\u57df\u5373\u53ef. scopeDialog { tvFragment . text = Post < String > ( \"dialog\" ) { param ( \"u_name\" , \"drake\" ) // \u8bf7\u6c42\u53c2\u6570 param ( \"pwd\" , \"123456\" ) }. await () } \u52a0\u8f7d\u6846\u9ed8\u8ba4\u4f7f\u7528\u7684\u662fAndroid\u539f\u751f\u52a0\u8f7d\u6846(MaterialDesign Dialog), \u5f53\u7136\u4e5f\u63d0\u4f9b\u53c2\u6570\u4f20\u5165\u6307\u5b9a\u6bcf\u4e2a\u8bf7\u6c42\u7684\u5bf9\u8bdd\u6846 \u6307\u5b9a\u5355\u4f8b\u52a0\u8f7d\u6846 \u00b6 \u5c31\u662f\u4ec5\u9488\u5bf9\u5f53\u524d\u7f51\u7edc\u8bf7\u6c42\u6307\u5b9a\u52a0\u8f7d\u6846 val dialog = BubbleDialog ( requireActivity (), \"\u52a0\u8f7d\u4e2d\" ) scopeDialog ( dialog ) { binding . tvFragment . text = Post < String > ( \"dialog\" ) { param ( \"u_name\" , \"drake\" ) param ( \"pwd\" , \"123456\" ) }. await () } \u8fd9\u91cc\u4f7f\u7528\u7684iOS\u98ce\u683c\u5bf9\u8bdd\u6846: BubbleDialog \u6307\u5b9a\u5168\u5c40\u52a0\u8f7d\u6846 \u00b6 \u5728Application\u4e2d\u914d\u7f6eNet\u65f6\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u7684Dialog \u521d\u59cb\u914d\u7f6e\u5168\u5c40\u52a0\u8f7d\u6846 NetConfig . init ( \"http://github.com/\" ) { setDialogFactory { // \u5168\u5c40\u52a0\u8f7d\u5bf9\u8bdd\u6846 ProgressDialog ( it ). apply { setMessage ( \"\u6211\u662f\u5168\u5c40\u81ea\u5b9a\u4e49\u7684\u52a0\u8f7d\u5bf9\u8bdd\u6846...\" ) } } } \u4fee\u6539\u5168\u5c40\u52a0\u8f7d\u6846 NetConfig . dialogFactory = NetDialogFactory { ProgressDialog ( it ). apply { setMessage ( \"\u6211\u662f\u5168\u5c40\u81ea\u5b9a\u4e49\u7684\u52a0\u8f7d\u5bf9\u8bdd\u6846...\" ) } } \u5982\u679c\u4e0d\u60f3\u4fee\u6539\u5168\u5c40\u52a0\u8f7d\u6846\u6837\u5f0f\u53ea\u662f\u4fee\u6539\u52a0\u8f7d\u6846\u6587\u672c, \u53ef\u4ee5\u8986\u76d6\u6587\u672c(\u56fd\u9645\u5316\u540c\u7406) \u5728\u5f53\u524d\u9879\u76ee\u4e0b\u7684values\u76ee\u5f55\u4e0b\u7684strings.xml\u6dfb\u52a0\u4ee5\u4e0b\u4e00\u884c\u53ef\u4ee5\u4fee\u6539\u6587\u672c <!--\u5bf9\u8bdd\u6846--> <string name= \"net_dialog_msg\" > \u52a0\u8f7d\u4e2d </string> \u751f\u547d\u5468\u671f \u00b6 \u4f7f\u7528 scopeDialog \u53d1\u8d77\u8bf7\u6c42\u540e, Dialog\u5206\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u751f\u547d\u5468\u671f \u751f\u547d\u5468\u671f \u63cf\u8ff0 Dialog \u663e\u793a \u6267\u884c scopeDialog \u65f6\u663e\u793a\u52a0\u8f7d\u6846 Dialog \u81ea\u52a8\u7ed3\u675f \u4f5c\u7528\u57df\u5185\u4efb\u52a1\u7ed3\u675f\u65f6\u5173\u95ed\u52a0\u8f7d\u6846 Dialog \u624b\u52a8\u7ed3\u675f \u52a0\u8f7d\u6846\u88ab\u624b\u52a8\u53d6\u6d88\u65f6\u53d6\u6d88\u4f5c\u7528\u57df\u5185\u7f51\u7edc\u8bf7\u6c42 \u81ea\u5b9a\u4e49\u52a0\u8f7d\u5bf9\u8bdd\u6846 \u00b6 \u6211\u60f3\u8981\u81ea\u5b9a\u4e49\u52a0\u8f7d\u6846\u89c6\u56fe Dialog\u5c5e\u4e8e\u5e03\u5c40\u5bb9\u5668, \u4f60\u53ef\u4ee5\u7ee7\u627fDialog\u7136\u540e\u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684\u663e\u793a\u5185\u5bb9(\u7c7b\u4f3cActivity/Fragment), \u6bd4\u5982\u8be5 iOS\u98ce\u683c\u5bf9\u8bdd\u6846 \u6211\u7684\u52a0\u8f7d\u6846\u4e0d\u662fDialog \u867d\u7136\u6211\u4eec\u6307\u5b9a scopeDialog \u7684\u52a0\u8f7d\u6846\u6216\u8005 setNetDialogFactory \u65f6\u53ea\u5141\u8bb8\u4f20\u5165\u4e00\u4e2aDialog\u5bf9\u8c61, \u4f46\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u4e0d\u662fDialog\u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7c7b\u7ee7\u627fDialog, \u7136\u540e\u5728\u5176\u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u5904\u7406 \u81ea\u5df1\u7279\u6b8a\u5bf9\u8bdd\u6846 \u7684\u5c55\u793a\u548c\u9690\u85cf","title":"\u81ea\u52a8\u52a0\u8f7d\u6846"},{"location":"auto-dialog/#_1","text":"\u53ea\u9700\u8981\u4f7f\u7528 scopeDialog \u4f5c\u7528\u57df\u5373\u53ef. scopeDialog { tvFragment . text = Post < String > ( \"dialog\" ) { param ( \"u_name\" , \"drake\" ) // \u8bf7\u6c42\u53c2\u6570 param ( \"pwd\" , \"123456\" ) }. await () } \u52a0\u8f7d\u6846\u9ed8\u8ba4\u4f7f\u7528\u7684\u662fAndroid\u539f\u751f\u52a0\u8f7d\u6846(MaterialDesign Dialog), \u5f53\u7136\u4e5f\u63d0\u4f9b\u53c2\u6570\u4f20\u5165\u6307\u5b9a\u6bcf\u4e2a\u8bf7\u6c42\u7684\u5bf9\u8bdd\u6846","title":"\u81ea\u52a8\u663e\u793a\u52a0\u8f7d\u6846"},{"location":"auto-dialog/#_2","text":"\u5c31\u662f\u4ec5\u9488\u5bf9\u5f53\u524d\u7f51\u7edc\u8bf7\u6c42\u6307\u5b9a\u52a0\u8f7d\u6846 val dialog = BubbleDialog ( requireActivity (), \"\u52a0\u8f7d\u4e2d\" ) scopeDialog ( dialog ) { binding . tvFragment . text = Post < String > ( \"dialog\" ) { param ( \"u_name\" , \"drake\" ) param ( \"pwd\" , \"123456\" ) }. await () } \u8fd9\u91cc\u4f7f\u7528\u7684iOS\u98ce\u683c\u5bf9\u8bdd\u6846: BubbleDialog","title":"\u6307\u5b9a\u5355\u4f8b\u52a0\u8f7d\u6846"},{"location":"auto-dialog/#_3","text":"\u5728Application\u4e2d\u914d\u7f6eNet\u65f6\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u7684Dialog \u521d\u59cb\u914d\u7f6e\u5168\u5c40\u52a0\u8f7d\u6846 NetConfig . init ( \"http://github.com/\" ) { setDialogFactory { // \u5168\u5c40\u52a0\u8f7d\u5bf9\u8bdd\u6846 ProgressDialog ( it ). apply { setMessage ( \"\u6211\u662f\u5168\u5c40\u81ea\u5b9a\u4e49\u7684\u52a0\u8f7d\u5bf9\u8bdd\u6846...\" ) } } } \u4fee\u6539\u5168\u5c40\u52a0\u8f7d\u6846 NetConfig . dialogFactory = NetDialogFactory { ProgressDialog ( it ). apply { setMessage ( \"\u6211\u662f\u5168\u5c40\u81ea\u5b9a\u4e49\u7684\u52a0\u8f7d\u5bf9\u8bdd\u6846...\" ) } } \u5982\u679c\u4e0d\u60f3\u4fee\u6539\u5168\u5c40\u52a0\u8f7d\u6846\u6837\u5f0f\u53ea\u662f\u4fee\u6539\u52a0\u8f7d\u6846\u6587\u672c, \u53ef\u4ee5\u8986\u76d6\u6587\u672c(\u56fd\u9645\u5316\u540c\u7406) \u5728\u5f53\u524d\u9879\u76ee\u4e0b\u7684values\u76ee\u5f55\u4e0b\u7684strings.xml\u6dfb\u52a0\u4ee5\u4e0b\u4e00\u884c\u53ef\u4ee5\u4fee\u6539\u6587\u672c <!--\u5bf9\u8bdd\u6846--> <string name= \"net_dialog_msg\" > \u52a0\u8f7d\u4e2d </string>","title":"\u6307\u5b9a\u5168\u5c40\u52a0\u8f7d\u6846"},{"location":"auto-dialog/#_4","text":"\u4f7f\u7528 scopeDialog \u53d1\u8d77\u8bf7\u6c42\u540e, Dialog\u5206\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u751f\u547d\u5468\u671f \u751f\u547d\u5468\u671f \u63cf\u8ff0 Dialog \u663e\u793a \u6267\u884c scopeDialog \u65f6\u663e\u793a\u52a0\u8f7d\u6846 Dialog \u81ea\u52a8\u7ed3\u675f \u4f5c\u7528\u57df\u5185\u4efb\u52a1\u7ed3\u675f\u65f6\u5173\u95ed\u52a0\u8f7d\u6846 Dialog \u624b\u52a8\u7ed3\u675f \u52a0\u8f7d\u6846\u88ab\u624b\u52a8\u53d6\u6d88\u65f6\u53d6\u6d88\u4f5c\u7528\u57df\u5185\u7f51\u7edc\u8bf7\u6c42","title":"\u751f\u547d\u5468\u671f"},{"location":"auto-dialog/#_5","text":"\u6211\u60f3\u8981\u81ea\u5b9a\u4e49\u52a0\u8f7d\u6846\u89c6\u56fe Dialog\u5c5e\u4e8e\u5e03\u5c40\u5bb9\u5668, \u4f60\u53ef\u4ee5\u7ee7\u627fDialog\u7136\u540e\u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684\u663e\u793a\u5185\u5bb9(\u7c7b\u4f3cActivity/Fragment), \u6bd4\u5982\u8be5 iOS\u98ce\u683c\u5bf9\u8bdd\u6846 \u6211\u7684\u52a0\u8f7d\u6846\u4e0d\u662fDialog \u867d\u7136\u6211\u4eec\u6307\u5b9a scopeDialog \u7684\u52a0\u8f7d\u6846\u6216\u8005 setNetDialogFactory \u65f6\u53ea\u5141\u8bb8\u4f20\u5165\u4e00\u4e2aDialog\u5bf9\u8c61, \u4f46\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u4e0d\u662fDialog\u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7c7b\u7ee7\u627fDialog, \u7136\u540e\u5728\u5176\u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u5904\u7406 \u81ea\u5df1\u7279\u6b8a\u5bf9\u8bdd\u6846 \u7684\u5c55\u793a\u548c\u9690\u85cf","title":"\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5bf9\u8bdd\u6846"},{"location":"auto-page/","text":"\u9605\u8bfb\u81ea\u52a8\u5206\u9875\u52a0\u8f7d\u4e4b\u524d\u8bf7\u5148\u9605\u8bfb\u81ea\u52a8\u5237\u65b0 Net\u5c5e\u4e8e\u4f4e\u8026\u5408\u6846\u67b6, \u5206\u9875\u52a0\u8f7d\u540c\u6837\u9700\u8981\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7ec4\u4ef6: BRV (\u70b9\u51fb\u94fe\u63a5\u6309\u6587\u6863\u4f9d\u8d56) \u521b\u5efa\u5e03\u5c40 <com.drake.brv.PageRefreshLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:id= \"@+id/page\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".ui.fragment.PullRefreshFragment\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv_pull\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.brv.PageRefreshLayout> \u521b\u5efa\u5217\u8868 rv_pull . linear (). setup { addType < String > ( R . layout . item_list ) } \u521b\u5efa\u7f51\u7edc page . onRefresh { scope { val data = Get < ListModel > ( \"list\" ) { param ( \"page\" , index ) }. await (). data addData ( data . list ) { index < data . total } } }. autoRefresh () index \u5c5e\u4e8ePageRefreshLayout\u7684\u5b57\u6bb5, \u6bcf\u6b21\u4e0a\u62c9\u52a0\u8f7d\u81ea\u52a8+1\u9012\u589e, \u4e0b\u62c9\u5237\u65b0\u81ea\u52a8\u91cd\u7f6e data.total \u5c5e\u4e8e\u670d\u52a1\u5668\u8fd4\u56de\u7684 \u5217\u8868\u5168\u90e8\u6570\u91cf \u7684\u5b57\u6bb5, \u6700\u7ec8\u4f7f\u7528\u4ec0\u4e48\u5b57\u6bb5\u6216\u8005\u5224\u65ad\u6761\u4ef6\u8bf7\u81ea\u5df1\u6839\u636e\u9879\u76ee\u4e0d\u540c\u51b3\u5b9a addData \u5c5e\u4e8ePageRefreshLayout\u7684\u51fd\u6570 fun addData ( data : List < Any? >? , adapter : BindingAdapter? = null , isEmpty : () -> Boolean = { data . isNullOrEmpty () }, hasMore : BindingAdapter .() -> Boolean = { true } ) \u5177\u4f53\u8bf7\u67e5\u770b\u51fd\u6570\u6ce8\u91ca","title":"\u81ea\u52a8\u5206\u9875\u52a0\u8f7d"},{"location":"auto-refresh/","text":"Net\u5c5e\u4e8e\u4f4e\u8026\u5408\u6846\u67b6, \u81ea\u52a8\u4e0b\u62c9\u5237\u65b0\u9700\u8981\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7ec4\u4ef6: BRV (\u70b9\u51fb\u94fe\u63a5\u6309\u6587\u6863\u4f9d\u8d56) \u4f7f\u7528\u56fa\u5b9a\u7248\u672c\u53f7\u66ff\u6362+\u7b26\u53f7 implementation 'com.github.liangjingkanji:BRV:+' \u5f53\u7136\u5982\u679c\u81ea\u5df1\u5904\u7406\u4e0b\u62c9\u5237\u65b0\u4e5f\u662f\u53ef\u4ee5\u7684, Net\u53ef\u4ee5\u4ec5\u4ec5\u4f5c\u4e3a\u7f51\u7edc\u6846\u67b6\u5b58\u5728 \u521b\u5efaPageRefreshLayout <com.drake.brv.PageRefreshLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" android:id= \"@+id/page\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".ui.fragment.PushRefreshFragment\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv_push\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.brv.PageRefreshLayout> \u521b\u5efa\u5217\u8868 rv_push . linear (). setup { addType < String > ( R . layout . item_list ) } \u521b\u5efa\u7f51\u7edc\u8bf7\u6c42 page . onRefresh { scope { // \u8bf7\u6c42\u5230\u6570\u636e\u8bbe\u7f6e\u5230RecyclerView rv_push . models = Get < ListModel > ( \"list\" ). await (). data . list } }. autoRefresh () \u6ce8\u610f\u9ad8\u4eae\u5904\u4f7f\u7528\u7684\u662f scope \u800c\u4e0d\u662f\u5176\u4ed6\u4f5c\u7528\u57df, \u53ea\u80fd\u4f7f\u7528scope, \u5426\u5219\u65e0\u6cd5\u8ddf\u968fPageRefreshLayout\u751f\u547d\u5468\u671f\u7b49\u529f\u80fd \u4f7f\u7528\u4e0a\u548c\u81ea\u52a8\u7f3a\u7701\u9875\u76f8\u4f3c BRV\u540c\u6837\u5c5e\u4e8e\u5177\u5907\u5b8c\u5584\u529f\u80fd\u72ec\u7acb\u7684RecyclerView\u6846\u67b6 BRV\u7684\u4e0b\u62c9\u5237\u65b0\u6269\u5c55\u81ea SmartRefreshLayout_v2 , \u652f\u6301\u5176\u5168\u90e8\u529f\u80fd\u4e14\u66f4\u591a \u751f\u547d\u5468\u671f \u00b6 \u751f\u547d\u5468\u671f \u63cf\u8ff0 \u5f00\u59cb PageRefreshLayout\u6267\u884c showLoading/autoRefresh \u540e\u89e6\u53d1 onRefresh , \u7136\u540e\u5f00\u59cb\u7f51\u7edc\u8bf7\u6c42 \u7ed3\u675f PageRefreshLayout\u88ab\u9500\u6bc1(\u4f8b\u5982\u5176\u6240\u5728\u7684Activity\u6216Fragment\u88ab\u9500\u6bc1), \u7f51\u7edc\u8bf7\u6c42\u81ea\u52a8\u53d6\u6d88","title":"\u81ea\u52a8\u4e0b\u62c9\u5237\u65b0"},{"location":"auto-refresh/#_1","text":"\u751f\u547d\u5468\u671f \u63cf\u8ff0 \u5f00\u59cb PageRefreshLayout\u6267\u884c showLoading/autoRefresh \u540e\u89e6\u53d1 onRefresh , \u7136\u540e\u5f00\u59cb\u7f51\u7edc\u8bf7\u6c42 \u7ed3\u675f PageRefreshLayout\u88ab\u9500\u6bc1(\u4f8b\u5982\u5176\u6240\u5728\u7684Activity\u6216Fragment\u88ab\u9500\u6bc1), \u7f51\u7edc\u8bf7\u6c42\u81ea\u52a8\u53d6\u6d88","title":"\u751f\u547d\u5468\u671f"},{"location":"auto-state/","text":"\u8003\u8651\u5230\u4f4e\u8026\u5408, \u6240\u4ee5\u81ea\u5b9a\u4e49\u7f3a\u7701\u9875\u9700\u8981\u5bfc\u5165\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u4f9d\u8d56(\u70b9\u51fb\u94fe\u63a5\u6309\u7167\u6587\u6863\u4f9d\u8d56), \u5f53\u7136\u5982\u679c\u4f60\u4f7f\u7528\u5176\u4ed6\u65b9\u5f0f\u5904\u7406\u7f3a\u7701\u9875\u53ef\u4ee5\u8df3\u8fc7\u672c\u7ae0. \u4f9d\u8d56\u4ee5\u4e0b\u4e24\u79cd\u5e93\u5176\u4e2d\u4e4b\u4e00\u5373\u53ef\u652f\u6301\u81ea\u52a8\u663e\u793a\u7f3a\u7701\u9875 \u4f9d\u8d56 StateLayout \u4f7f\u7528\u56fa\u5b9a\u7248\u672c\u53f7\u66ff\u6362+\u7b26\u53f7 implementation 'com.github.liangjingkanji:StateLayout:+' \u4f9d\u8d56 BRV (\u56e0\u4e3aBRV\u5305\u542bStateLayout) \u4f7f\u7528\u56fa\u5b9a\u7248\u672c\u53f7\u66ff\u6362+\u7b26\u53f7 implementation 'com.github.liangjingkanji:BRV:+' \u521b\u5efa\u7f3a\u7701\u9875 <com.drake.statelayout.StateLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:id= \"@+id/state\" android:layout_height= \"match_parent\" tools:context= \".ui.fragment.StateLayoutFragment\" > <TextView android:id= \"@+id/tvFragment\" android:padding= \"32dp\" android:textStyle= \"bold\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:text= \"\u5185\u5bb9\" /> </com.drake.statelayout.StateLayout> \u81ea\u52a8\u663e\u793a\u7f3a\u7701\u9875 state . onRefresh { scope { tvFragment . text = Get < String > ( \"api\" ). await () } }. showLoading () \u6ce8\u610f\u9ad8\u4eae\u5904\u4f7f\u7528\u7684\u662f scope \u800c\u4e0d\u662f\u5176\u4ed6\u4f5c\u7528\u57df, \u53ea\u80fd\u4f7f\u7528scope, \u5426\u5219\u65e0\u6cd5\u8ddf\u968fStateLayout\u751f\u547d\u5468\u671f(\u81ea\u52a8\u663e\u793a\u5bf9\u5e94\u7f3a\u7701\u9875)\u7b49\u529f\u80fd \u751f\u547d\u5468\u671f \u00b6 \u751f\u547d\u5468\u671f \u63cf\u8ff0 \u5f00\u59cb StateLayout\u6267\u884c showLoading \u540e\u89e6\u53d1 onRefresh , \u7136\u540e\u5f00\u59cb\u7f51\u7edc\u8bf7\u6c42 \u7ed3\u675f \u7f3a\u7701\u9875\u88ab\u9500\u6bc1(\u4f8b\u5982\u5176\u6240\u5728\u7684Activity\u6216Fragment\u88ab\u9500\u6bc1), \u7f51\u7edc\u8bf7\u6c42\u81ea\u52a8\u53d6\u6d88","title":"\u81ea\u52a8\u7f3a\u7701\u9875"},{"location":"auto-state/#_1","text":"\u751f\u547d\u5468\u671f \u63cf\u8ff0 \u5f00\u59cb StateLayout\u6267\u884c showLoading \u540e\u89e6\u53d1 onRefresh , \u7136\u540e\u5f00\u59cb\u7f51\u7edc\u8bf7\u6c42 \u7ed3\u675f \u7f3a\u7701\u9875\u88ab\u9500\u6bc1(\u4f8b\u5982\u5176\u6240\u5728\u7684Activity\u6216Fragment\u88ab\u9500\u6bc1), \u7f51\u7edc\u8bf7\u6c42\u81ea\u52a8\u53d6\u6d88","title":"\u751f\u547d\u5468\u671f"},{"location":"callback/","text":"Net\u652f\u6301OkHttp\u7684\u539f\u6709\u7684\u961f\u5217\u8bf7\u6c42 -- Callback \u5982\u679c\u4f60\u51b3\u5b9a\u4f7f\u7528\u534f\u7a0b\u53ef\u4ee5\u4e0d\u5fc5\u9605\u8bfb\u672c\u7ae0 Callback\u5c5e\u4e8e\u63a5\u53e3\u56de\u8c03\u8bf7\u6c42, \u5c5e\u4e8e\u6700\u539f\u59cb\u7684\u8bf7\u6c42\u65b9\u5f0f. \u5176\u4ee3\u7801\u5197\u4f59\u53ef\u8bfb\u6027\u4e0d\u9ad8, \u5e76\u4e14\u65e0\u6cd5\u652f\u6301\u5e76\u53d1\u8bf7\u6c42\u534f\u4f5c Callback \u00b6 Callback\u5c5e\u4e8eOkHttp\u6700\u539f\u59cb\u7684\u8bf7\u6c42\u56de\u8c03\u63a5\u53e3 Net . post ( \"api\" ). enqueue ( object : Callback { override fun onFailure ( call : Call , e : IOException ) { } override fun onResponse ( call : Call , response : Response ) { } }) NetCallback \u00b6 \u539f\u59cb\u7684Callback\u662f\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u8f6c\u6362\u548c\u5168\u5c40\u9519\u8bef\u529f\u80fd\u7684. \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528NetCallback Net . post ( \"api\" ) { param ( \"password\" , \"Net123\" ) }. enqueue ( object : NetCallback < String > () { override fun onSuccess ( call : Call , data : String ) { tvFragment . text = data } }) NetCallback\u76f8\u8f83\u4e8eCallback\u7684\u7279\u6027 \u53ef\u4ee5\u6307\u5b9a\u6cdb\u578b\u6570\u636e\u8f6c\u6362 \u65b0\u589e\u4e09\u4e2a\u56de\u8c03\u51fd\u6570: onSuccess/onFailure/onComplete \u4ee5\u4e0a\u4e09\u4e2a\u56de\u8c03\u51fd\u6570\u90fd\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b \u57fa\u672c\u7279\u6027\u4e5f\u88ab\u6269\u5c55\u5728Callback\u4e2d. \u9664\u5f00\u5e93\u672c\u8eab\u81ea\u5e26\u7684Callback\u4f60\u4e5f\u53ef\u4ee5\u4eff\u7167\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u6b8aCallback \u51fd\u6570 \u63cf\u8ff0 DialogCallback \u81ea\u52a8\u663e\u793a\u9690\u85cf\u52a0\u8f7d\u5bf9\u8bdd\u6846 StateCallback \u81ea\u52a8\u663e\u793a\u7f3a\u7701\u9875 PageCallback \u81ea\u52a8\u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d onResult \u00b6 \u4f7f\u7528 onResult \u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u65b9\u4fbf\u7684\u5904\u7406\u961f\u5217\u8bf7\u6c42. \u4f7f\u7528Kotlin\u7684\u7a7a\u5b89\u5168\u51fd\u6570\u53ef\u4ee5\u533a\u5206\u5904\u7406\u8bf7\u6c42\u7ed3\u679c Net . post ( \"api\" ). onResult < String > { getOrNull () ?. let { // \u5982\u679c\u6210\u529f\u5c31\u4e0d\u4e3aNull Log . d ( \"\u65e5\u5fd7\" , \"\u8bf7\u6c42\u6210\u529f\" ) tvFragment . text = it } exceptionOrNull () ?. apply { Log . d ( \"\u65e5\u5fd7\" , \"\u8bf7\u6c42\u5931\u8d25\" ) Net . printStackTrace ( this ) // \u5982\u679c\u53d1\u751f\u9519\u8bef\u5c31\u4e0d\u4e3aNull } Log . d ( \"\u65e5\u5fd7\" , \"\u5b8c\u6210\u8bf7\u6c42\" ) } onResult\u4e5f\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 Net.get \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.post \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.head \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.options \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.trace \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.delete \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.put \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.patch \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5","title":"Callback"},{"location":"callback/#callback","text":"Callback\u5c5e\u4e8eOkHttp\u6700\u539f\u59cb\u7684\u8bf7\u6c42\u56de\u8c03\u63a5\u53e3 Net . post ( \"api\" ). enqueue ( object : Callback { override fun onFailure ( call : Call , e : IOException ) { } override fun onResponse ( call : Call , response : Response ) { } })","title":"Callback"},{"location":"callback/#netcallback","text":"\u539f\u59cb\u7684Callback\u662f\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u8f6c\u6362\u548c\u5168\u5c40\u9519\u8bef\u529f\u80fd\u7684. \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528NetCallback Net . post ( \"api\" ) { param ( \"password\" , \"Net123\" ) }. enqueue ( object : NetCallback < String > () { override fun onSuccess ( call : Call , data : String ) { tvFragment . text = data } }) NetCallback\u76f8\u8f83\u4e8eCallback\u7684\u7279\u6027 \u53ef\u4ee5\u6307\u5b9a\u6cdb\u578b\u6570\u636e\u8f6c\u6362 \u65b0\u589e\u4e09\u4e2a\u56de\u8c03\u51fd\u6570: onSuccess/onFailure/onComplete \u4ee5\u4e0a\u4e09\u4e2a\u56de\u8c03\u51fd\u6570\u90fd\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b \u57fa\u672c\u7279\u6027\u4e5f\u88ab\u6269\u5c55\u5728Callback\u4e2d. \u9664\u5f00\u5e93\u672c\u8eab\u81ea\u5e26\u7684Callback\u4f60\u4e5f\u53ef\u4ee5\u4eff\u7167\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u6b8aCallback \u51fd\u6570 \u63cf\u8ff0 DialogCallback \u81ea\u52a8\u663e\u793a\u9690\u85cf\u52a0\u8f7d\u5bf9\u8bdd\u6846 StateCallback \u81ea\u52a8\u663e\u793a\u7f3a\u7701\u9875 PageCallback \u81ea\u52a8\u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d","title":"NetCallback"},{"location":"callback/#onresult","text":"\u4f7f\u7528 onResult \u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u65b9\u4fbf\u7684\u5904\u7406\u961f\u5217\u8bf7\u6c42. \u4f7f\u7528Kotlin\u7684\u7a7a\u5b89\u5168\u51fd\u6570\u53ef\u4ee5\u533a\u5206\u5904\u7406\u8bf7\u6c42\u7ed3\u679c Net . post ( \"api\" ). onResult < String > { getOrNull () ?. let { // \u5982\u679c\u6210\u529f\u5c31\u4e0d\u4e3aNull Log . d ( \"\u65e5\u5fd7\" , \"\u8bf7\u6c42\u6210\u529f\" ) tvFragment . text = it } exceptionOrNull () ?. apply { Log . d ( \"\u65e5\u5fd7\" , \"\u8bf7\u6c42\u5931\u8d25\" ) Net . printStackTrace ( this ) // \u5982\u679c\u53d1\u751f\u9519\u8bef\u5c31\u4e0d\u4e3aNull } Log . d ( \"\u65e5\u5fd7\" , \"\u5b8c\u6210\u8bf7\u6c42\" ) } onResult\u4e5f\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 Net.get \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.post \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.head \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.options \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.trace \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.delete \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.put \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.patch \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5","title":"onResult"},{"location":"cancel/","text":"Net\u867d\u7136\u652f\u6301\u81ea\u52a8\u8ddf\u968f\u751f\u547d\u5468\u671f\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42, \u7edd\u5927\u90e8\u5206\u573a\u666f\u4e5f\u8db3\u591f. \u4f46\u662f\u6709\u65f6\u8fd8\u662f\u9700\u8981\u624b\u52a8\u53d6\u6d88, \u4f8b\u5982\u53d6\u6d88\u4e0b\u8f7d\u6587\u4ef6. Net\u53d6\u6d88\u534f\u7a0b\u4f5c\u7528\u57df\u81ea\u52a8\u53d6\u6d88\u5185\u90e8\u7f51\u7edc\u8bf7\u6c42, \u4e5f\u652f\u6301\u4efb\u610f\u4f4d\u7f6e\u53d6\u6d88\u6307\u5b9a\u7f51\u7edc\u8bf7\u6c42. downloadScope = scopeNetLife { // \u4e0b\u8f7d\u6587\u4ef6 val file = Get ( \"download\" ). await () } downloadScope . cancel () // \u53d6\u6d88\u4e0b\u8f7d \u5b8c\u6574\u793a\u4f8b: \u6e90\u7801 \u4efb\u610f\u4f4d\u7f6e\u53d6\u6d88 \u00b6 \u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u8981\u6c42\u5b9a\u4e49\u4e00\u4e2a Id \u7528\u4e8e\u6307\u5b9a\u7f51\u7edc\u8bf7\u6c42, \u7136\u540e\u5728\u9700\u8981\u7684\u5730\u65b9\u4f7f\u7528\u5355\u4f8b\u5bf9\u8c61 Net.cancelId \u53d6\u6d88\u8bf7\u6c42. \u521b\u5efa\u8bf7\u6c42 scopeNetLife { tvFragment . text = Get < String > ( \"api\" , uid = \"\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\" ). await () } \u7136\u540e\u6839\u636eId\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 Net . cancelId ( \"\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\" ) Net . cancelGroup ( \"\u8bf7\u6c42\u5206\u7ec4\u540d\u79f0\" ) // \u8bbe\u7f6e\u5206\u7ec4 \u5982\u679c\u4f60\u8981\u95ee\u6211\u8bf7\u6c42\u7684Group\u548cId\u6709\u4ec0\u4e48\u533a\u522b, \u5176\u5b9e\u672c\u8d28\u4e0a\u4e24\u8005\u57fa\u672c\u4e0a\u6ca1\u533a\u522b, \u53ea\u662f\u4e3a\u4e86\u9002\u914d\u4e0d\u540c\u573a\u666f\u4e0b\u4f7f\u7528. \u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u65e6\u4e3a\u7f51\u7edc\u8bf7\u6c42\u8bbe\u7f6e\u5206\u7ec4 setGroup \u4f60\u5c31\u65e0\u6cd5\u5728\u4f5c\u7528\u57df\u6267\u884c\u5b8c\u6bd5\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42\u4e86, \u56e0\u4e3a\u81ea\u52a8\u53d6\u6d88\u7684\u539f\u7406\u5c31\u662f\u4f7f\u7528\u4f5c\u7528\u57df \u7684\u4e0a\u4e0b\u6587\u6765\u4f5c\u4e3aGroup","title":"\u53d6\u6d88\u8bf7\u6c42"},{"location":"cancel/#_1","text":"\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u8981\u6c42\u5b9a\u4e49\u4e00\u4e2a Id \u7528\u4e8e\u6307\u5b9a\u7f51\u7edc\u8bf7\u6c42, \u7136\u540e\u5728\u9700\u8981\u7684\u5730\u65b9\u4f7f\u7528\u5355\u4f8b\u5bf9\u8c61 Net.cancelId \u53d6\u6d88\u8bf7\u6c42. \u521b\u5efa\u8bf7\u6c42 scopeNetLife { tvFragment . text = Get < String > ( \"api\" , uid = \"\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\" ). await () } \u7136\u540e\u6839\u636eId\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 Net . cancelId ( \"\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\" ) Net . cancelGroup ( \"\u8bf7\u6c42\u5206\u7ec4\u540d\u79f0\" ) // \u8bbe\u7f6e\u5206\u7ec4 \u5982\u679c\u4f60\u8981\u95ee\u6211\u8bf7\u6c42\u7684Group\u548cId\u6709\u4ec0\u4e48\u533a\u522b, \u5176\u5b9e\u672c\u8d28\u4e0a\u4e24\u8005\u57fa\u672c\u4e0a\u6ca1\u533a\u522b, \u53ea\u662f\u4e3a\u4e86\u9002\u914d\u4e0d\u540c\u573a\u666f\u4e0b\u4f7f\u7528. \u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u65e6\u4e3a\u7f51\u7edc\u8bf7\u6c42\u8bbe\u7f6e\u5206\u7ec4 setGroup \u4f60\u5c31\u65e0\u6cd5\u5728\u4f5c\u7528\u57df\u6267\u884c\u5b8c\u6bd5\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42\u4e86, \u56e0\u4e3a\u81ea\u52a8\u53d6\u6d88\u7684\u539f\u7406\u5c31\u662f\u4f7f\u7528\u4f5c\u7528\u57df \u7684\u4e0a\u4e0b\u6587\u6765\u4f5c\u4e3aGroup","title":"\u4efb\u610f\u4f4d\u7f6e\u53d6\u6d88"},{"location":"config/","text":"\u5168\u5c40\u914d\u7f6e\u5efa\u8bae\u5728Application\u7684onCreate\u51fd\u6570\u4e2d\u914d\u7f6e \u521d\u59cb\u914d\u7f6e \u00b6 \u666e\u901a\u521d\u59cb\u5316 class App : Application () { override fun onCreate () { super . onCreate () // http://google.com/ \u8fd9\u662f\u63a5\u53e3\u5168\u5c40\u57df\u540d, \u53ef\u4ee5\u4f7f\u7528NetConfig.host\u8fdb\u884c\u5355\u72ec\u7684\u4fee\u6539 NetConfig . init ( \"http://github.com/\" ) { // \u8d85\u65f6\u8bbe\u7f6e connectTimeout ( 2 , TimeUnit . MINUTES ) readTimeout ( 2 , TimeUnit . MINUTES ) writeTimeout ( 2 , TimeUnit . MINUTES setLog ( BuildConfig . DEBUG ) // \u4f5c\u7528\u57df\u53d1\u751f\u5f02\u5e38\u662f\u5426\u6253\u5370 setConverter ( GsonConvert ()) // \u8f6c\u6362\u5668 } } } OkHttpClient.Builder class App : Application () { override fun onCreate () { super . onCreate () // http://google.com/ \u8fd9\u662f\u63a5\u53e3\u5168\u5c40\u57df\u540d, \u53ef\u4ee5\u4f7f\u7528NetConfig.host\u8fdb\u884c\u5355\u72ec\u7684\u4fee\u6539 val okHttpClientBuilder = OkHttpClient . Builder () . setLog ( BuildConfig . DEBUG ) . setConverter ( GsonConvert ()) . addInterceptor ( LogRecordInterceptor ( BuildConfig . DEBUG )) NetConfig . init ( \"http://github.com/\" , okHttpClientBuilder ) } } \u914d\u7f6e\u90fd\u662f\u53ef\u9009\u9879, \u4e0d\u662f\u4e0d\u521d\u59cb\u5316\u5c31\u4e0d\u80fd\u4f7f\u7528. \u5728Xposed\u9879\u76ee\u4e2d\u53ef\u80fd\u9700\u8981\u4f7f\u7528 NetConfig.app = this \u5728initNet\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u7684this\u5c5e\u4e8e OkHttpClient.Builder() , \u53ef\u4ee5\u914d\u7f6e\u4efb\u4f55OkHttp\u53c2\u6570\u9009\u9879 \u51fd\u6570 \u63cf\u8ff0 setLog \u8f93\u51fa\u7f51\u7edc\u5f02\u5e38\u65e5\u5fd7 setHost \u5168\u5c40\u57df\u540d, \u548cNetConfig.init(\"Host\")\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7b49\u6548 setConverter \u8f6c\u6362\u5668 , \u5c06\u7f51\u7edc\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u6362\u6210\u4f60\u60f3\u8981\u7684\u6570\u636e\u7ed3\u6784 setRequestInterceptor \u8bf7\u6c42\u62e6\u622a\u5668 , \u7528\u4e8e\u6dfb\u52a0\u5168\u5c40\u8bf7\u6c42\u5934/\u53c2\u6570 setErrorHandler \u5168\u5c40\u9519\u8bef\u5904\u7406 setDialogFactory \u5168\u5c40\u5bf9\u8bdd\u6846 \u91cd\u8bd5\u6b21\u6570 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f60\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u5373\u53ef, OkHttp\u5185\u90e8\u4e5f\u6709\u91cd\u8bd5\u673a\u5236. \u4f46\u662f\u4e2a\u522b\u5f00\u53d1\u8005\u9700\u6c42\u6307\u5b9a\u91cd\u8bd5\u6b21\u6570\u5219\u53ef\u4ee5\u6dfb\u52a0 RetryInterceptor \u62e6\u622a\u5668\u5373\u53ef\u5b9e\u73b0\u5931\u8d25\u4ee5\u540e\u4f1a\u91cd\u8bd5\u6307\u5b9a\u6b21\u6570 NetConfig . init ( \"http://github.com/\" ) { // ... \u5176\u4ed6\u914d\u7f6e addInterceptor ( RetryInterceptor ( 3 )) // \u5982\u679c\u5168\u90e8\u5931\u8d25\u4f1a\u91cd\u8bd5\u4e09\u6b21 } \u52a8\u6001\u914d\u7f6e \u00b6 \u5355\u4f8b NetConfig \u5b58\u50a8\u4e86\u521d\u59cb\u5316\u65f6\u7684\u914d\u7f6e, \u53ef\u4ee5\u540e\u671f\u52a8\u6001\u8bfb\u5199. \u4f8b\u5982Retrofit\u7684\u52a8\u6001 baseURL \u529f\u80fd\u5c31\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 NetConfig.host NetConfig . host = \"https://github.com/\"","title":"\u5168\u5c40\u914d\u7f6e"},{"location":"config/#_1","text":"\u666e\u901a\u521d\u59cb\u5316 class App : Application () { override fun onCreate () { super . onCreate () // http://google.com/ \u8fd9\u662f\u63a5\u53e3\u5168\u5c40\u57df\u540d, \u53ef\u4ee5\u4f7f\u7528NetConfig.host\u8fdb\u884c\u5355\u72ec\u7684\u4fee\u6539 NetConfig . init ( \"http://github.com/\" ) { // \u8d85\u65f6\u8bbe\u7f6e connectTimeout ( 2 , TimeUnit . MINUTES ) readTimeout ( 2 , TimeUnit . MINUTES ) writeTimeout ( 2 , TimeUnit . MINUTES setLog ( BuildConfig . DEBUG ) // \u4f5c\u7528\u57df\u53d1\u751f\u5f02\u5e38\u662f\u5426\u6253\u5370 setConverter ( GsonConvert ()) // \u8f6c\u6362\u5668 } } } OkHttpClient.Builder class App : Application () { override fun onCreate () { super . onCreate () // http://google.com/ \u8fd9\u662f\u63a5\u53e3\u5168\u5c40\u57df\u540d, \u53ef\u4ee5\u4f7f\u7528NetConfig.host\u8fdb\u884c\u5355\u72ec\u7684\u4fee\u6539 val okHttpClientBuilder = OkHttpClient . Builder () . setLog ( BuildConfig . DEBUG ) . setConverter ( GsonConvert ()) . addInterceptor ( LogRecordInterceptor ( BuildConfig . DEBUG )) NetConfig . init ( \"http://github.com/\" , okHttpClientBuilder ) } } \u914d\u7f6e\u90fd\u662f\u53ef\u9009\u9879, \u4e0d\u662f\u4e0d\u521d\u59cb\u5316\u5c31\u4e0d\u80fd\u4f7f\u7528. \u5728Xposed\u9879\u76ee\u4e2d\u53ef\u80fd\u9700\u8981\u4f7f\u7528 NetConfig.app = this \u5728initNet\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u7684this\u5c5e\u4e8e OkHttpClient.Builder() , \u53ef\u4ee5\u914d\u7f6e\u4efb\u4f55OkHttp\u53c2\u6570\u9009\u9879 \u51fd\u6570 \u63cf\u8ff0 setLog \u8f93\u51fa\u7f51\u7edc\u5f02\u5e38\u65e5\u5fd7 setHost \u5168\u5c40\u57df\u540d, \u548cNetConfig.init(\"Host\")\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7b49\u6548 setConverter \u8f6c\u6362\u5668 , \u5c06\u7f51\u7edc\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u6362\u6210\u4f60\u60f3\u8981\u7684\u6570\u636e\u7ed3\u6784 setRequestInterceptor \u8bf7\u6c42\u62e6\u622a\u5668 , \u7528\u4e8e\u6dfb\u52a0\u5168\u5c40\u8bf7\u6c42\u5934/\u53c2\u6570 setErrorHandler \u5168\u5c40\u9519\u8bef\u5904\u7406 setDialogFactory \u5168\u5c40\u5bf9\u8bdd\u6846","title":"\u521d\u59cb\u914d\u7f6e"},{"location":"config/#_2","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f60\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u5373\u53ef, OkHttp\u5185\u90e8\u4e5f\u6709\u91cd\u8bd5\u673a\u5236. \u4f46\u662f\u4e2a\u522b\u5f00\u53d1\u8005\u9700\u6c42\u6307\u5b9a\u91cd\u8bd5\u6b21\u6570\u5219\u53ef\u4ee5\u6dfb\u52a0 RetryInterceptor \u62e6\u622a\u5668\u5373\u53ef\u5b9e\u73b0\u5931\u8d25\u4ee5\u540e\u4f1a\u91cd\u8bd5\u6307\u5b9a\u6b21\u6570 NetConfig . init ( \"http://github.com/\" ) { // ... \u5176\u4ed6\u914d\u7f6e addInterceptor ( RetryInterceptor ( 3 )) // \u5982\u679c\u5168\u90e8\u5931\u8d25\u4f1a\u91cd\u8bd5\u4e09\u6b21 }","title":"\u91cd\u8bd5\u6b21\u6570"},{"location":"config/#_3","text":"\u5355\u4f8b NetConfig \u5b58\u50a8\u4e86\u521d\u59cb\u5316\u65f6\u7684\u914d\u7f6e, \u53ef\u4ee5\u540e\u671f\u52a8\u6001\u8bfb\u5199. \u4f8b\u5982Retrofit\u7684\u52a8\u6001 baseURL \u529f\u80fd\u5c31\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 NetConfig.host NetConfig . host = \"https://github.com/\"","title":"\u52a8\u6001\u914d\u7f6e"},{"location":"convert-special/","text":"\u89e3\u6790\u5b8c\u6574Json \u00b6 \u4e00\u822c\u7684\u89e3\u6790\u8fc7\u7a0b\u662f\u4ee5\u4e0b \u540e\u7aef\u8fd4\u56de\u7684JSON\u6570\u636e { \"code\" : 0 , \"msg\" : \"\u8bf7\u6c42\u6210\u529f\" , \"data\" : { \"name\" : \"\u5f6d\u4e8e\u664f\" , \"age\" : 27 , \"height\" : 180 } } \u521b\u5efa\u6570\u636e\u6a21\u578b data class UserModel ( var code : Int , var msg : String , var data : Data , ) { data class Data ( var name : String , var age : Int , var height : Int ) } \u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42 scopeNetLife { val data = Get < UserModel > ( \"api\" ). await (). data } \u89e3\u6790Json\u4e2d\u7684\u5b57\u6bb5 \u00b6 \u8fd9\u6837\u6bcf\u6b21\u90fd\u8981 await().data \u624d\u662f\u4f60\u8981\u7684 data \u5bf9\u8c61. \u6709\u4e9b\u4eba\u5c31\u60f3\u7701\u7565\u76f4\u63a5\u4e0d\u5199code\u548cmsg, \u5e0c\u671b\u76f4\u63a5\u8fd4\u56dedata. \u90a3\u4e48\u5728\u8f6c\u6362\u5668\u91cc\u9762\u5c31\u53ea\u89e3\u6790data\u5b57\u6bb5\u5373\u53ef \u7b80\u5316\u6570\u636e\u5bf9\u8c61 data class UserModel ( var name : String , var age : Int , var height : Int ) \u8f6c\u6362\u5668\u53ea\u89e3\u6790data\u5b57\u6bb5 class GsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { private val gson = GsonBuilder (). serializeNulls (). create () override fun < S > String . parseBody ( succeed : Type ): S? { val data = JSONObject ( this ). getString ( \"data\" ) return gson . fromJson ( data , succeed ) } } \u4f7f\u7528\u7b80\u5316\u7684\u6570\u636e\u5bf9\u8c61\u4f5c\u4e3a\u6cdb\u578b scopeNetLife { val data = Get < Info > ( \"api\" ). await (). data } \u89e3\u6790Json\u6570\u7ec4 \u00b6 \u5728Net\u4e2d\u53ef\u4ee5\u76f4\u63a5\u89e3\u6790List\u7b49\u5d4c\u5957\u6cdb\u578b\u6570\u636e, \u89e3\u6790List\u548c\u666e\u901a\u5bf9\u8c61\u6ca1\u6709\u533a\u522b scopeNetLife { tvFragment . text = Get < List < UserModel >> ( \"list\" ) { converter = GsonConverter () // \u5355\u4f8b\u8f6c\u6362\u5668, \u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u8f6c\u6362\u5668 }. await () [ 0 ] . name } \u89e3\u6790\u6cdb\u578b\u6570\u636e\u6a21\u578b \u00b6 \u8fd9\u79cd\u65b9\u5f0f\u5728Retrofit\u4e2d\u7ecf\u5e38\u88ab\u4f7f\u7528\u5230, \u53ef\u80fd\u67d0\u4e9b\u4eba\u6bd4\u8f83\u4e60\u60ef \u6570\u636e\u5bf9\u8c61 // \u6570\u636e\u5bf9\u8c61\u7684\u57fa\u7c7b open class BaseResult < T > { var code : Int = 0 var msg : String = \"\" var data : T? = null } class Result ( var request_method : String ) : BaseResult < Result > () \u4f7f\u7528\u6cdb\u578b scopeNetLife { val data = Get < Result > ( \"api\" ). await (). request_method }","title":"\u7279\u6b8a\u7ed3\u6784\u89e3\u6790"},{"location":"convert-special/#json","text":"\u4e00\u822c\u7684\u89e3\u6790\u8fc7\u7a0b\u662f\u4ee5\u4e0b \u540e\u7aef\u8fd4\u56de\u7684JSON\u6570\u636e { \"code\" : 0 , \"msg\" : \"\u8bf7\u6c42\u6210\u529f\" , \"data\" : { \"name\" : \"\u5f6d\u4e8e\u664f\" , \"age\" : 27 , \"height\" : 180 } } \u521b\u5efa\u6570\u636e\u6a21\u578b data class UserModel ( var code : Int , var msg : String , var data : Data , ) { data class Data ( var name : String , var age : Int , var height : Int ) } \u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42 scopeNetLife { val data = Get < UserModel > ( \"api\" ). await (). data }","title":"\u89e3\u6790\u5b8c\u6574Json"},{"location":"convert-special/#json_1","text":"\u8fd9\u6837\u6bcf\u6b21\u90fd\u8981 await().data \u624d\u662f\u4f60\u8981\u7684 data \u5bf9\u8c61. \u6709\u4e9b\u4eba\u5c31\u60f3\u7701\u7565\u76f4\u63a5\u4e0d\u5199code\u548cmsg, \u5e0c\u671b\u76f4\u63a5\u8fd4\u56dedata. \u90a3\u4e48\u5728\u8f6c\u6362\u5668\u91cc\u9762\u5c31\u53ea\u89e3\u6790data\u5b57\u6bb5\u5373\u53ef \u7b80\u5316\u6570\u636e\u5bf9\u8c61 data class UserModel ( var name : String , var age : Int , var height : Int ) \u8f6c\u6362\u5668\u53ea\u89e3\u6790data\u5b57\u6bb5 class GsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { private val gson = GsonBuilder (). serializeNulls (). create () override fun < S > String . parseBody ( succeed : Type ): S? { val data = JSONObject ( this ). getString ( \"data\" ) return gson . fromJson ( data , succeed ) } } \u4f7f\u7528\u7b80\u5316\u7684\u6570\u636e\u5bf9\u8c61\u4f5c\u4e3a\u6cdb\u578b scopeNetLife { val data = Get < Info > ( \"api\" ). await (). data }","title":"\u89e3\u6790Json\u4e2d\u7684\u5b57\u6bb5"},{"location":"convert-special/#json_2","text":"\u5728Net\u4e2d\u53ef\u4ee5\u76f4\u63a5\u89e3\u6790List\u7b49\u5d4c\u5957\u6cdb\u578b\u6570\u636e, \u89e3\u6790List\u548c\u666e\u901a\u5bf9\u8c61\u6ca1\u6709\u533a\u522b scopeNetLife { tvFragment . text = Get < List < UserModel >> ( \"list\" ) { converter = GsonConverter () // \u5355\u4f8b\u8f6c\u6362\u5668, \u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u8f6c\u6362\u5668 }. await () [ 0 ] . name }","title":"\u89e3\u6790Json\u6570\u7ec4"},{"location":"convert-special/#_1","text":"\u8fd9\u79cd\u65b9\u5f0f\u5728Retrofit\u4e2d\u7ecf\u5e38\u88ab\u4f7f\u7528\u5230, \u53ef\u80fd\u67d0\u4e9b\u4eba\u6bd4\u8f83\u4e60\u60ef \u6570\u636e\u5bf9\u8c61 // \u6570\u636e\u5bf9\u8c61\u7684\u57fa\u7c7b open class BaseResult < T > { var code : Int = 0 var msg : String = \"\" var data : T? = null } class Result ( var request_method : String ) : BaseResult < Result > () \u4f7f\u7528\u6cdb\u578b scopeNetLife { val data = Get < Result > ( \"api\" ). await (). request_method }","title":"\u89e3\u6790\u6cdb\u578b\u6570\u636e\u6a21\u578b"},{"location":"converter/","text":"Net\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u652f\u6301\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362, \u751a\u81f3 List<List<UserModel>> \u7b49\u5d4c\u5957\u6cdb\u578b\u5bf9\u8c61 \u4f8b\u5982\u8bf7\u6c42\u52a8\u4f5cPost \u6307\u5b9a\u6cdb\u578b\u4e3aModel , \u5219\u8f6c\u6362\u5668NetConverter\u4e2d\u7684\u51fd\u6570 onConvert\u8fd4\u56de\u503c\u5fc5\u987b\u4e3aModel , \u5982\u679c\u8f6c\u6362\u5931\u8d25\u6216\u8005\u53d1\u751f\u5f02\u5e38\u90fd\u7b97\u8bf7\u6c42\u9519\u8bef \u6ce8\u610f\u5982\u679c\u4f60\u5728\u8f6c\u6362\u5668\u91cc\u9762\u8fd4\u56denull. \u90a3\u4e48\u6307\u5b9a\u7684\u6cdb\u578b\u4e5f\u5e94\u5f53\u662f\u53ef\u7a7a\u7c7b\u578b, \u4f8b\u5982 Post<String?>(\"api\") scopeNetLife { val userList = Get < List < UserModel >> ( \"list\" ) { converter = GsonConverter () }. await () } \u5982\u679c\u4f60\u8981\u8fd4\u56de\u6620\u5c04\u597d\u7684\u6570\u636e\u6a21\u578b\u5bf9\u8c61, \u90a3\u4e48\u80af\u5b9a\u8981\u6c42\u521b\u5efa\u8f6c\u6362\u5668\u7684. \u672c\u6846\u67b6\u7531\u4e8e\u4f4e\u8026\u5408\u539f\u5219\u4e0d\u81ea\u5e26\u89e3\u6790\u6846\u67b6 \u5e38\u7528\u7684Json\u8f6c\u6362\u5668-\u4ee3\u7801\u793a\u4f8b \u9ed8\u8ba4\u8fd4\u56de\u6570\u636e\u7c7b\u578b \u00b6 Net\u652f\u6301\u8bf7\u6c42\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u4f60\u7684\u8f6c\u6362\u5668(\u4e5f\u5c31\u662f\u652f\u6301\u8fd4\u56de\u4efb\u4f55\u5bf9\u8c61), \u9ed8\u8ba4\u60c5\u51b5\u4e0d\u521b\u5efa\u8f6c\u6362\u5668\u4e5f\u652f\u6301\u8fd4\u56de\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b \u51fd\u6570 \u63cf\u8ff0 String \u5b57\u7b26\u4e32 ByteArray \u5b57\u8282\u6570\u7ec4 ByteString \u5185\u90e8\u5b9a\u4e49\u7684\u4e00\u79cd\u5b57\u7b26\u4e32\u5bf9\u8c61 Response \u6700\u57fa\u7840\u7684\u54cd\u5e94 File \u6587\u4ef6\u5bf9\u8c61, \u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u5e94\u5f53\u79f0\u4e3a \u4e0b\u8f7d\u6587\u4ef6 \u4f7f\u7528\u793a\u4f8b scopeNetLife { Get < Response > ( \"api\" ). await (). headers ( \"\u54cd\u5e94\u5934\u540d\u79f0\" ) // \u8fd4\u56de\u54cd\u5e94\u5934 } \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f: NetConverter.DEFAULT val DEFAULT = object : NetConverter { override fun < R > onConvert ( succeed : Type , response : Response ): R? { return when ( succeed ) { String :: class . java -> response . body ?. string () as R ByteString :: class . java -> response . body ?. byteString () as R ByteArray :: class . java -> response . body ?. bytes () as R Response :: class . java -> response as R File :: class . java -> response . file () as R else -> throw ConvertException ( response , \"The default converter does not support this type\" ) } } } \u5047\u8bbe\u8fd9\u91cc\u6ca1\u6709\u4f60\u9700\u8981\u7684\u6570\u636e\u7c7b\u578b\u8bf7 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 (\u4f8b\u5982\u8fd4\u56deJson\u6216Protocol) \u8bbe\u7f6e\u8f6c\u6362\u5668 \u00b6 \u8f6c\u6362\u5668\u5206\u4e3a\u5168\u5c40\u548c\u5355\u4f8b, \u5355\u4f8b\u53ef\u4ee5\u8986\u76d6\u5168\u5c40\u7684\u8f6c\u6362\u5668. \u5982\u679c\u4e0d\u8bbe\u7f6e\u8f6c\u6362\u5668\u5c31\u4f1a\u91c7\u7528\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668 \u5168\u5c40 NetConfig . init ( \"http://github.com/\" ) { setConverter ( SerializationConverter ()) } \u5355\u4f8b scopeNetLife { tvFragment . text = Get < String > ( \"api\" ){ converter = SerializationConverter () }. await () } Json\u89e3\u6790\u5e93\u8f6c\u6362\u5668 \u00b6 \u4e00\u822c\u4e1a\u52a1\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f JSONConverter \u4f7f\u7528\u81ea\u5df1\u7684JSON\u89e3\u6790\u5668\u89e3\u6790\u6570\u636e, \u5b8c\u5168\u81ea\u5b9a\u4e49\u9700\u6c42\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 NetConverter (\u6bd4\u5982\u76f4\u63a5\u8f6c\u6362IO\u6d41) Gson class GsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { val gson = GsonBuilder (). serializeNulls (). create () override fun < S > String . parseBody ( succeed : Type ): S? { return gson . fromJson ( this , succeed ) } } kotlin-serialization class SerializationConverter ( val success : String = \"0\" , val code : String = \"code\" , val message : String = \"msg\" ) : NetConverter { private val jsonDecoder = Json { ignoreUnknownKeys = true // JSON\u548c\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u53ef\u4ee5\u4e0d\u5339\u914d coerceInputValues = true // \u5982\u679cJSON\u5b57\u6bb5\u662fNull\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c } override fun < R > onConvert ( succeed : Type , response : Response ): R? { try { return NetConverter . onConvert < R > ( succeed , response ) } catch ( e : ConvertException ) { val code = response . code when { code in 200. . 299 -> { // \u8bf7\u6c42\u6210\u529f val bodyString = response . body ?. string () ?: return null val kType = response . request . kType () ?: return null return try { val json = JSONObject ( bodyString ) // \u83b7\u53d6JSON\u4e2d\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f if ( json . getString ( this . code ) == success ) { // \u5bf9\u6bd4\u540e\u7aef\u81ea\u5b9a\u4e49\u9519\u8bef\u7801 bodyString . parseBody < R > ( kType ) } else { // \u9519\u8bef\u7801\u5339\u914d\u5931\u8d25, \u5f00\u59cb\u5199\u5165\u9519\u8bef\u5f02\u5e38 val errorMessage = json . optString ( message , NetConfig . app . getString ( com . drake . net . R . string . no_error_message ) ) throw ResponseException ( response , errorMessage ) } } catch ( e : JSONException ) { // \u56fa\u5b9a\u683c\u5f0fJSON\u5206\u6790\u5931\u8d25\u76f4\u63a5\u89e3\u6790JSON bodyString . parseBody < R > ( kType ) } } code in 400. . 499 -> throw RequestParamsException ( response , code . toString ()) // \u8bf7\u6c42\u53c2\u6570\u9519\u8bef code >= 500 -> throw ServerResponseException ( response , code . toString ()) // \u670d\u52a1\u5668\u5f02\u5e38\u9519\u8bef else -> throw ConvertException ( response ) } } } fun < R > String . parseBody ( succeed : KType ): R? { return jsonDecoder . decodeFromString ( Json . serializersModule . serializer ( succeed ), this ) as R } } SerializationConverter\u5c31\u662f\u4eff\u7167JSONConverter\u4ee3\u7801\u5b9e\u73b0 FastJson class FastJsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { override fun < S > String . parseBody ( succeed : Type ): S? { return JSON . parseObject ( this , succeed ) } } Moshi class MoshiConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { val moshi = Moshi . Builder (). build () override fun < S > String . parseBody ( succeed : Type ): S? { return moshi . adapter < S > ( succeed ). fromJson ( this ) } } \u4f7f\u7528\u8f6c\u6362\u5668\u65f6\u8bf7\u6dfb\u52a0\u5176\u4f9d\u8d56: GSON | kotlin-serialization | FastJson | Moshi \u63a8\u8350\u4f7f\u7528 kotlinx.Serialization , \u5176\u53ef\u89e3\u6790 \u4efb\u4f55\u6cdb\u578b Sample\u6709\u5b8c\u6574\u4ee3\u7801\u793a\u4f8b \u4ee5\u4e0a\u8f6c\u6362\u5668\u793a\u4f8b\u662f\u5efa\u7acb\u5728\u6570\u636e\u7ed3\u6784\u4e3a\u4ee5\u4e0b\u8868\u683c\u7684\u56fa\u5b9a\u683c\u5f0f\u4e0b, \u5982\u679c\u6709\u7279\u6b8a\u7684\u4e1a\u52a1\u53ef\u80fd\u9700\u8981\u81ea\u884c\u4fee\u6539 \u8f6c\u6362\u5668\u53c2\u6570 \u63cf\u8ff0 code \u5373\u540e\u7aef\u5b9a\u4e49\u7684 \u6210\u529f\u7801 \u5b57\u6bb5\u540d message \u5373\u540e\u7aef\u5b9a\u4e49\u7684 \u9519\u8bef\u6d88\u606f \u5b57\u6bb5\u540d success \u5373 \u6210\u529f\u7801 \u7684\u503c\u7b49\u4e8e\u6307\u5b9a\u65f6\u624d\u7b97\u7f51\u7edc\u8bf7\u6c42\u6210\u529f \u6bd4\u5982\u622a\u56fe\u4e2d\u7684\u610f\u4e3a, \u5f53\u8fd4\u56de\u7684Json\u4e2d\u5305\u542bstate\u5b57\u6bb5\u4e14\u503c\u4e3aok\u65f6\u8bf7\u6c42\u624d\u7b97\u662f\u771f\u6b63\u6210\u529f\u624d\u4f1a\u8fd4\u56de\u6570\u636e, \u5426\u5219\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38. \u5176\u4e2dmessage\u4e3a\u9519\u8bef\u4fe1\u606f\u5b57\u6bb5\u540d \u5047\u8bbe\u7b80\u5355\u7684\u6307\u5b9a\u540d\u79f0\u4e0d\u80fd\u6ee1\u8db3\u4f60\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91, \u8bf7\u590d\u5236 JSONConvert \u6e90\u7801\u5230\u4f60\u9879\u76ee\u4e2d\u4fee\u6539\u6216\u8005\u76f4\u63a5\u81ea\u5df1\u5b9e\u73b0 NetConverter \u6ce8\u610f\u89e3\u6790\u5668(Gson\u6216\u8005Moshi)\u7684\u89e3\u6790\u5bf9\u8c61\u8bb0\u5f97\u5b9a\u4e49\u4e3a\u7c7b\u6210\u5458, \u8fd9\u6837\u53ef\u4ee5\u4e0d\u4f1a\u5bfc\u81f4\u6bcf\u6b21\u89e3\u6790\u90fd\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89e3\u6790\u5bf9\u8c61, \u51cf\u5c11\u5185\u5b58\u6d88\u8017 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 \u00b6 \u901a\u8fc7\u5b9e\u73b0 NetConverter \u63a5\u53e3\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u903b\u8f91\u7f51\u7edc\u8bf7\u6c42\u8fd4\u56de\u7684\u6570\u636e, NetConvert.DEFAULT \u4e3a\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668\u652f\u6301\u8fd4\u56deFile/String/Response\u7b49 \u6846\u67b6\u4e2d\u81ea\u5e26\u4e00\u4e2a JSONConverter \u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\u6216\u8005\u76f4\u63a5\u4f7f\u7528. \u5176\u53ef\u4ee5\u8f6c\u6362JSON\u6570\u636e. JSONConverter \u6e90\u7801 /** * \u5e38\u89c1\u7684JSON\u8f6c\u6362\u5668\u5b9e\u73b0, \u5982\u679c\u4e0d\u6ee1\u610f\u7ee7\u627f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u4e1a\u52a1\u903b\u8f91 * * @param success \u540e\u7aef\u5b9a\u4e49\u4e3a\u6210\u529f\u72b6\u6001\u7684\u9519\u8bef\u7801\u503c * @param code \u9519\u8bef\u7801\u5728JSON\u4e2d\u7684\u5b57\u6bb5\u540d * @param message \u9519\u8bef\u4fe1\u606f\u5728JSON\u4e2d\u7684\u5b57\u6bb5\u540d */ abstract class JSONConvert ( val success : String = \"0\" , val code : String = \"code\" , val message : String = \"msg\" ) : NetConverter { override fun < R > onConvert ( succeed : Type , response : Response ): R? { try { return NetConverter . onConvert < R > ( succeed , response ) } catch ( e : ConvertException ) { val code = response . code when { code in 200. . 299 -> { // \u8bf7\u6c42\u6210\u529f val bodyString = response . body ?. string () ?: return null return try { val json = JSONObject ( bodyString ) // \u83b7\u53d6JSON\u4e2d\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f if ( json . getString ( this . code ) == success ) { // \u5bf9\u6bd4\u540e\u7aef\u81ea\u5b9a\u4e49\u9519\u8bef\u7801 bodyString . parseBody < R > ( succeed ) } else { // \u9519\u8bef\u7801\u5339\u914d\u5931\u8d25, \u5f00\u59cb\u5199\u5165\u9519\u8bef\u5f02\u5e38 val errorMessage = json . optString ( message , NetConfig . app . getString ( com . drake . net . R . string . no_error_message ) ) throw ResponseException ( response , errorMessage ) } } catch ( e : JSONException ) { // \u56fa\u5b9a\u683c\u5f0fJSON\u5206\u6790\u5931\u8d25\u76f4\u63a5\u89e3\u6790JSON bodyString . parseBody < R > ( succeed ) } } code in 400. . 499 -> throw RequestParamsException ( response , code . toString ()) // \u8bf7\u6c42\u53c2\u6570\u9519\u8bef code >= 500 -> throw ServerResponseException ( response , code . toString ()) // \u670d\u52a1\u5668\u5f02\u5e38\u9519\u8bef else -> throw ConvertException ( response ) } } } /** * \u53cd\u5e8f\u5217\u5316JSON * * @param succeed JSON\u5bf9\u8c61\u7684\u7c7b\u578b * @receiver \u539f\u59cb\u5b57\u7b26\u4e32 */ abstract fun < R > String . parseBody ( succeed : Type ): R? } JSONConvert\u7684\u6838\u5fc3\u903b\u8f91 \u5224\u65ad\u670d\u52a1\u5668\u7684\u9519\u8bef\u7801 \u5224\u65ad\u540e\u7aef\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u7801 \u5982\u679c\u5224\u65ad\u53d1\u751f\u9519\u8bef\u5219\u629b\u51fa\u4e00\u4e2a\u5305\u542b\u9519\u8bef\u4fe1\u606f\u7684\u5f02\u5e38 \u5982\u679c\u90fd\u5224\u65ad\u6210\u529f\u5219\u5f00\u59cb\u89e3\u6790\u6570\u636e\u5e76return\u6570\u636e\u5bf9\u8c61 \u5728\u8f6c\u6362\u5668\u4e2d\u6839\u636e\u9700\u8981\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0\u4e0a\u5e38\u89c1\u7684\u89e3\u5bc6\u6570\u636e, token\u5931\u6548\u8df3\u8f6c\u767b\u5f55, \u9650\u5236\u591a\u7aef\u767b\u5f55\u7b49\u903b\u8f91. \u65e5\u5fd7\u4fe1\u606f\u8f93\u51fa\u8bf7\u9605\u8bfb: \u65e5\u5fd7\u8bb0\u5f55\u5668 \u5982\u679c\u662f\u9519\u8bef\u4fe1\u606f\u5efa\u8bae\u629b\u51fa\u5f02\u5e38, \u5c31\u53ef\u4ee5\u5728\u5168\u5c40\u5f02\u5e38\u5904\u7406\u5668\u4e2d\u7edf\u4e00\u5904\u7406, \u8bf7\u9605\u8bfb: \u5168\u5c40\u9519\u8bef\u5904\u7406","title":"\u4f7f\u7528\u8f6c\u6362\u5668"},{"location":"converter/#_1","text":"Net\u652f\u6301\u8bf7\u6c42\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u4f60\u7684\u8f6c\u6362\u5668(\u4e5f\u5c31\u662f\u652f\u6301\u8fd4\u56de\u4efb\u4f55\u5bf9\u8c61), \u9ed8\u8ba4\u60c5\u51b5\u4e0d\u521b\u5efa\u8f6c\u6362\u5668\u4e5f\u652f\u6301\u8fd4\u56de\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b \u51fd\u6570 \u63cf\u8ff0 String \u5b57\u7b26\u4e32 ByteArray \u5b57\u8282\u6570\u7ec4 ByteString \u5185\u90e8\u5b9a\u4e49\u7684\u4e00\u79cd\u5b57\u7b26\u4e32\u5bf9\u8c61 Response \u6700\u57fa\u7840\u7684\u54cd\u5e94 File \u6587\u4ef6\u5bf9\u8c61, \u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u5e94\u5f53\u79f0\u4e3a \u4e0b\u8f7d\u6587\u4ef6 \u4f7f\u7528\u793a\u4f8b scopeNetLife { Get < Response > ( \"api\" ). await (). headers ( \"\u54cd\u5e94\u5934\u540d\u79f0\" ) // \u8fd4\u56de\u54cd\u5e94\u5934 } \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f: NetConverter.DEFAULT val DEFAULT = object : NetConverter { override fun < R > onConvert ( succeed : Type , response : Response ): R? { return when ( succeed ) { String :: class . java -> response . body ?. string () as R ByteString :: class . java -> response . body ?. byteString () as R ByteArray :: class . java -> response . body ?. bytes () as R Response :: class . java -> response as R File :: class . java -> response . file () as R else -> throw ConvertException ( response , \"The default converter does not support this type\" ) } } } \u5047\u8bbe\u8fd9\u91cc\u6ca1\u6709\u4f60\u9700\u8981\u7684\u6570\u636e\u7c7b\u578b\u8bf7 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 (\u4f8b\u5982\u8fd4\u56deJson\u6216Protocol)","title":"\u9ed8\u8ba4\u8fd4\u56de\u6570\u636e\u7c7b\u578b"},{"location":"converter/#_2","text":"\u8f6c\u6362\u5668\u5206\u4e3a\u5168\u5c40\u548c\u5355\u4f8b, \u5355\u4f8b\u53ef\u4ee5\u8986\u76d6\u5168\u5c40\u7684\u8f6c\u6362\u5668. \u5982\u679c\u4e0d\u8bbe\u7f6e\u8f6c\u6362\u5668\u5c31\u4f1a\u91c7\u7528\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668 \u5168\u5c40 NetConfig . init ( \"http://github.com/\" ) { setConverter ( SerializationConverter ()) } \u5355\u4f8b scopeNetLife { tvFragment . text = Get < String > ( \"api\" ){ converter = SerializationConverter () }. await () }","title":"\u8bbe\u7f6e\u8f6c\u6362\u5668"},{"location":"converter/#json","text":"\u4e00\u822c\u4e1a\u52a1\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f JSONConverter \u4f7f\u7528\u81ea\u5df1\u7684JSON\u89e3\u6790\u5668\u89e3\u6790\u6570\u636e, \u5b8c\u5168\u81ea\u5b9a\u4e49\u9700\u6c42\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 NetConverter (\u6bd4\u5982\u76f4\u63a5\u8f6c\u6362IO\u6d41) Gson class GsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { val gson = GsonBuilder (). serializeNulls (). create () override fun < S > String . parseBody ( succeed : Type ): S? { return gson . fromJson ( this , succeed ) } } kotlin-serialization class SerializationConverter ( val success : String = \"0\" , val code : String = \"code\" , val message : String = \"msg\" ) : NetConverter { private val jsonDecoder = Json { ignoreUnknownKeys = true // JSON\u548c\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u53ef\u4ee5\u4e0d\u5339\u914d coerceInputValues = true // \u5982\u679cJSON\u5b57\u6bb5\u662fNull\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c } override fun < R > onConvert ( succeed : Type , response : Response ): R? { try { return NetConverter . onConvert < R > ( succeed , response ) } catch ( e : ConvertException ) { val code = response . code when { code in 200. . 299 -> { // \u8bf7\u6c42\u6210\u529f val bodyString = response . body ?. string () ?: return null val kType = response . request . kType () ?: return null return try { val json = JSONObject ( bodyString ) // \u83b7\u53d6JSON\u4e2d\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f if ( json . getString ( this . code ) == success ) { // \u5bf9\u6bd4\u540e\u7aef\u81ea\u5b9a\u4e49\u9519\u8bef\u7801 bodyString . parseBody < R > ( kType ) } else { // \u9519\u8bef\u7801\u5339\u914d\u5931\u8d25, \u5f00\u59cb\u5199\u5165\u9519\u8bef\u5f02\u5e38 val errorMessage = json . optString ( message , NetConfig . app . getString ( com . drake . net . R . string . no_error_message ) ) throw ResponseException ( response , errorMessage ) } } catch ( e : JSONException ) { // \u56fa\u5b9a\u683c\u5f0fJSON\u5206\u6790\u5931\u8d25\u76f4\u63a5\u89e3\u6790JSON bodyString . parseBody < R > ( kType ) } } code in 400. . 499 -> throw RequestParamsException ( response , code . toString ()) // \u8bf7\u6c42\u53c2\u6570\u9519\u8bef code >= 500 -> throw ServerResponseException ( response , code . toString ()) // \u670d\u52a1\u5668\u5f02\u5e38\u9519\u8bef else -> throw ConvertException ( response ) } } } fun < R > String . parseBody ( succeed : KType ): R? { return jsonDecoder . decodeFromString ( Json . serializersModule . serializer ( succeed ), this ) as R } } SerializationConverter\u5c31\u662f\u4eff\u7167JSONConverter\u4ee3\u7801\u5b9e\u73b0 FastJson class FastJsonConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { override fun < S > String . parseBody ( succeed : Type ): S? { return JSON . parseObject ( this , succeed ) } } Moshi class MoshiConvert : JSONConvert ( code = \"code\" , message = \"msg\" , success = \"200\" ) { val moshi = Moshi . Builder (). build () override fun < S > String . parseBody ( succeed : Type ): S? { return moshi . adapter < S > ( succeed ). fromJson ( this ) } } \u4f7f\u7528\u8f6c\u6362\u5668\u65f6\u8bf7\u6dfb\u52a0\u5176\u4f9d\u8d56: GSON | kotlin-serialization | FastJson | Moshi \u63a8\u8350\u4f7f\u7528 kotlinx.Serialization , \u5176\u53ef\u89e3\u6790 \u4efb\u4f55\u6cdb\u578b Sample\u6709\u5b8c\u6574\u4ee3\u7801\u793a\u4f8b \u4ee5\u4e0a\u8f6c\u6362\u5668\u793a\u4f8b\u662f\u5efa\u7acb\u5728\u6570\u636e\u7ed3\u6784\u4e3a\u4ee5\u4e0b\u8868\u683c\u7684\u56fa\u5b9a\u683c\u5f0f\u4e0b, \u5982\u679c\u6709\u7279\u6b8a\u7684\u4e1a\u52a1\u53ef\u80fd\u9700\u8981\u81ea\u884c\u4fee\u6539 \u8f6c\u6362\u5668\u53c2\u6570 \u63cf\u8ff0 code \u5373\u540e\u7aef\u5b9a\u4e49\u7684 \u6210\u529f\u7801 \u5b57\u6bb5\u540d message \u5373\u540e\u7aef\u5b9a\u4e49\u7684 \u9519\u8bef\u6d88\u606f \u5b57\u6bb5\u540d success \u5373 \u6210\u529f\u7801 \u7684\u503c\u7b49\u4e8e\u6307\u5b9a\u65f6\u624d\u7b97\u7f51\u7edc\u8bf7\u6c42\u6210\u529f \u6bd4\u5982\u622a\u56fe\u4e2d\u7684\u610f\u4e3a, \u5f53\u8fd4\u56de\u7684Json\u4e2d\u5305\u542bstate\u5b57\u6bb5\u4e14\u503c\u4e3aok\u65f6\u8bf7\u6c42\u624d\u7b97\u662f\u771f\u6b63\u6210\u529f\u624d\u4f1a\u8fd4\u56de\u6570\u636e, \u5426\u5219\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38. \u5176\u4e2dmessage\u4e3a\u9519\u8bef\u4fe1\u606f\u5b57\u6bb5\u540d \u5047\u8bbe\u7b80\u5355\u7684\u6307\u5b9a\u540d\u79f0\u4e0d\u80fd\u6ee1\u8db3\u4f60\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91, \u8bf7\u590d\u5236 JSONConvert \u6e90\u7801\u5230\u4f60\u9879\u76ee\u4e2d\u4fee\u6539\u6216\u8005\u76f4\u63a5\u81ea\u5df1\u5b9e\u73b0 NetConverter \u6ce8\u610f\u89e3\u6790\u5668(Gson\u6216\u8005Moshi)\u7684\u89e3\u6790\u5bf9\u8c61\u8bb0\u5f97\u5b9a\u4e49\u4e3a\u7c7b\u6210\u5458, \u8fd9\u6837\u53ef\u4ee5\u4e0d\u4f1a\u5bfc\u81f4\u6bcf\u6b21\u89e3\u6790\u90fd\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89e3\u6790\u5bf9\u8c61, \u51cf\u5c11\u5185\u5b58\u6d88\u8017","title":"Json\u89e3\u6790\u5e93\u8f6c\u6362\u5668"},{"location":"converter/#_3","text":"\u901a\u8fc7\u5b9e\u73b0 NetConverter \u63a5\u53e3\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u903b\u8f91\u7f51\u7edc\u8bf7\u6c42\u8fd4\u56de\u7684\u6570\u636e, NetConvert.DEFAULT \u4e3a\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668\u652f\u6301\u8fd4\u56deFile/String/Response\u7b49 \u6846\u67b6\u4e2d\u81ea\u5e26\u4e00\u4e2a JSONConverter \u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\u6216\u8005\u76f4\u63a5\u4f7f\u7528. \u5176\u53ef\u4ee5\u8f6c\u6362JSON\u6570\u636e. JSONConverter \u6e90\u7801 /** * \u5e38\u89c1\u7684JSON\u8f6c\u6362\u5668\u5b9e\u73b0, \u5982\u679c\u4e0d\u6ee1\u610f\u7ee7\u627f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u4e1a\u52a1\u903b\u8f91 * * @param success \u540e\u7aef\u5b9a\u4e49\u4e3a\u6210\u529f\u72b6\u6001\u7684\u9519\u8bef\u7801\u503c * @param code \u9519\u8bef\u7801\u5728JSON\u4e2d\u7684\u5b57\u6bb5\u540d * @param message \u9519\u8bef\u4fe1\u606f\u5728JSON\u4e2d\u7684\u5b57\u6bb5\u540d */ abstract class JSONConvert ( val success : String = \"0\" , val code : String = \"code\" , val message : String = \"msg\" ) : NetConverter { override fun < R > onConvert ( succeed : Type , response : Response ): R? { try { return NetConverter . onConvert < R > ( succeed , response ) } catch ( e : ConvertException ) { val code = response . code when { code in 200. . 299 -> { // \u8bf7\u6c42\u6210\u529f val bodyString = response . body ?. string () ?: return null return try { val json = JSONObject ( bodyString ) // \u83b7\u53d6JSON\u4e2d\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f if ( json . getString ( this . code ) == success ) { // \u5bf9\u6bd4\u540e\u7aef\u81ea\u5b9a\u4e49\u9519\u8bef\u7801 bodyString . parseBody < R > ( succeed ) } else { // \u9519\u8bef\u7801\u5339\u914d\u5931\u8d25, \u5f00\u59cb\u5199\u5165\u9519\u8bef\u5f02\u5e38 val errorMessage = json . optString ( message , NetConfig . app . getString ( com . drake . net . R . string . no_error_message ) ) throw ResponseException ( response , errorMessage ) } } catch ( e : JSONException ) { // \u56fa\u5b9a\u683c\u5f0fJSON\u5206\u6790\u5931\u8d25\u76f4\u63a5\u89e3\u6790JSON bodyString . parseBody < R > ( succeed ) } } code in 400. . 499 -> throw RequestParamsException ( response , code . toString ()) // \u8bf7\u6c42\u53c2\u6570\u9519\u8bef code >= 500 -> throw ServerResponseException ( response , code . toString ()) // \u670d\u52a1\u5668\u5f02\u5e38\u9519\u8bef else -> throw ConvertException ( response ) } } } /** * \u53cd\u5e8f\u5217\u5316JSON * * @param succeed JSON\u5bf9\u8c61\u7684\u7c7b\u578b * @receiver \u539f\u59cb\u5b57\u7b26\u4e32 */ abstract fun < R > String . parseBody ( succeed : Type ): R? } JSONConvert\u7684\u6838\u5fc3\u903b\u8f91 \u5224\u65ad\u670d\u52a1\u5668\u7684\u9519\u8bef\u7801 \u5224\u65ad\u540e\u7aef\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u7801 \u5982\u679c\u5224\u65ad\u53d1\u751f\u9519\u8bef\u5219\u629b\u51fa\u4e00\u4e2a\u5305\u542b\u9519\u8bef\u4fe1\u606f\u7684\u5f02\u5e38 \u5982\u679c\u90fd\u5224\u65ad\u6210\u529f\u5219\u5f00\u59cb\u89e3\u6790\u6570\u636e\u5e76return\u6570\u636e\u5bf9\u8c61 \u5728\u8f6c\u6362\u5668\u4e2d\u6839\u636e\u9700\u8981\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0\u4e0a\u5e38\u89c1\u7684\u89e3\u5bc6\u6570\u636e, token\u5931\u6548\u8df3\u8f6c\u767b\u5f55, \u9650\u5236\u591a\u7aef\u767b\u5f55\u7b49\u903b\u8f91. \u65e5\u5fd7\u4fe1\u606f\u8f93\u51fa\u8bf7\u9605\u8bfb: \u65e5\u5fd7\u8bb0\u5f55\u5668 \u5982\u679c\u662f\u9519\u8bef\u4fe1\u606f\u5efa\u8bae\u629b\u51fa\u5f02\u5e38, \u5c31\u53ef\u4ee5\u5728\u5168\u5c40\u5f02\u5e38\u5904\u7406\u5668\u4e2d\u7edf\u4e00\u5904\u7406, \u8bf7\u9605\u8bfb: \u5168\u5c40\u9519\u8bef\u5904\u7406","title":"\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668"},{"location":"coroutine-request/","text":"Net\u57282.0\u5f00\u59cb\u5f15\u5165\u534f\u7a0b\u6765\u652f\u6301\u5e76\u53d1\u548c\u5f02\u6b65, \u867d\u7136\u5f88\u591a\u7f51\u7edc\u6846\u67b6\u652f\u6301\u534f\u7a0b, \u4f46\u662fNet\u5bf9\u4e8e\u534f\u7a0b\u751f\u547d\u5468\u671f\u7684\u63a7\u5236\u7b97\u5f97\u4e0a\u662f\u72ec\u6709. \u5e76\u4e14Net\u4e0d\u4ec5\u4ec5\u7f51\u7edc\u8bf7\u6c42, \u5176\u4e5f\u652f\u6301\u521b\u5efa\u4efb\u4f55\u5f02\u6b65\u4efb\u52a1. \u8fd9\u91cc\u7684 \u540c\u65f6/\u5e76\u53d1/\u5e76\u884c \u7edf\u79f0\u4e3a\u5e76\u53d1(\u5177\u4f53\u662f\u4e0d\u662f\u5e76\u884c\u4e0d\u9700\u8981\u5f00\u53d1\u8005\u6765\u8003\u8651) \u5728\u4e0a\u7ae0\u8282\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e86\u7f51\u7edc\u7684\u5e76\u53d1\u8bf7\u6c42 \u8fd9\u91cc\u518d\u6f14\u793a\u540c\u65f6(\u5e76\u53d1)\u8bf7\u6c42\u767e\u5ea6\u7f51\u7ad9 \u4e00\u4e07\u6b21 \u5e76\u4e14\u4e00\u6b21\u53d6\u6d88 val job = scopeNetLife { repeat ( 10000 ) { // \u8fd9\u91cc\u5c06\u8fd4\u56de\u7684\u6570\u636e\u663e\u793a\u5728TextView\u4e0a tvFragment . text = Get < String > ( \"http://www.baidu.com/\" ). await () } } \u7b49\u5f85\u4e94\u79d2\u540e\u53d6\u6d88\u8bf7\u6c42 thread { Thread . sleep ( 5000 ) // \u7b49\u5f85\u4e94\u79d2 job . cancel () } Net\u4e3b\u8981\u63a8\u8350\u4f7f\u7528\u7684\u662f\u534f\u7a0b\u8bf7\u6c42, \u4f46\u662f\u540c\u65f6\u652f\u6301\u5176\u4ed6\u65b9\u5f0f\u53d1\u8d77\u8bf7\u6c42 \u534f\u7a0b\u8bf7\u6c42 \u540c\u6b65\u8bf7\u6c42 \u56de\u8c03\u8bf7\u6c42","title":"\u534f\u7a0b\u8bf7\u6c42"},{"location":"debounce/","text":"\u73b0\u5728\u5e94\u7528\u7684\u641c\u7d22\u8f93\u5165\u6846\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u662f\u8f93\u5165\u5b8c\u641c\u7d22\u5173\u952e\u8bcd\u540e\u81ea\u52a8\u53d1\u8d77\u8bf7\u6c42\u5f00\u59cb\u641c\u7d22 \u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230\u4ee5\u4e0b\u9700\u6c42: \u4e0d\u80fd\u6bcf\u6b21\u53d8\u5316\u90fd\u5f00\u59cb\u641c\u7d22\u8bf7\u6c42, \u8fd9\u6837\u4f1a\u5bfc\u81f4\u591a\u4f59\u7684\u7f51\u7edc\u8d44\u6e90\u6d6a\u8d39. \u6240\u4ee5\u5e94\u8be5\u5728\u7528\u6237\u505c\u6b62\u8f93\u5165\u540e\u7684\u6307\u5b9a\u65f6\u95f4\u540e(\u9ed8\u8ba4800\u6beb\u79d2)\u5f00\u59cb\u641c\u7d22 \u5f53\u4ea7\u751f\u65b0\u7684\u641c\u7d22\u8bf7\u6c42\u540e\u53d6\u6d88\u65e7\u7684\u8bf7\u6c42\u4ee5\u9632\u6b62\u65e7\u6570\u636e\u8986\u76d6\u65b0\u6570\u636e \u5f53\u8f93\u5165\u5185\u5bb9\u6ca1\u6709\u53d8\u5316(\u4f8b\u5982\u590d\u5236\u7c98\u8d34\u91cd\u590d\u5185\u5bb9\u5230\u641c\u7d22\u6846)\u4e0d\u4f1a\u53d1\u8d77\u641c\u7d22\u8bf7\u6c42 \u622a\u56fe\u9884\u89c8 var scope : CoroutineScope? = null et_input . debounce (). listen ( this ) { scope ?. cancel () // \u53d1\u8d77\u65b0\u7684\u8bf7\u6c42\u524d\u53d6\u6d88\u65e7\u7684\u8bf7\u6c42, \u907f\u514d\u65e7\u6570\u636e\u8986\u76d6\u65b0\u6570\u636e scope = scopeNetLife { // \u4fdd\u5b58\u65e7\u7684\u8bf7\u6c42\u5230\u4e00\u4e2a\u53d8\u91cf\u4e2d, scopeNetLife\u5176\u51fd\u6570\u51b3\u5b9a\u7f51\u7edc\u8bf7\u6c42\u751f\u547d\u5468\u671f tvFragment . text = \"\u8bf7\u6c42\u4e2d\" val data = Get < String > ( \"http://api.k780.com/?app=life.time&appkey=10003&sign=b59bc3ef6191eb9f747dd4e83c99f2a4&format=json\" , absolutePath = true ). await () tvFragment . text = JSONObject ( data ). getJSONObject ( \"result\" ). getString ( \"datetime_2\" ) } } \u5982\u679c\u60f3\u8981\u8bbe\u7f6e\u81ea\u5df1\u7684\u8282\u6d41\u9600\u8d85\u65f6\u65f6\u95f4\u8bf7\u6307\u5b9a\u53c2\u6570 fun EditText . debounce ( timeoutMillis : Long = 800 ) \u751f\u547d\u5468\u671f \u00b6 \u5176\u751f\u547d\u5468\u671f\u4f9d\u7136\u9075\u5b88 \u7f51\u7edc\u8bf7\u6c42\u4f5c\u7528\u57df\u51fd\u6570scope* \u4f8b\u5982\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684 scopeNetLife \u5c31\u4f1a\u5728Activity\u6216Fragment\u5173\u95ed\u65f6\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42","title":"\u81ea\u52a8\u641c\u7d22/\u8282\u6d41\u9600"},{"location":"debounce/#_1","text":"\u5176\u751f\u547d\u5468\u671f\u4f9d\u7136\u9075\u5b88 \u7f51\u7edc\u8bf7\u6c42\u4f5c\u7528\u57df\u51fd\u6570scope* \u4f8b\u5982\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684 scopeNetLife \u5c31\u4f1a\u5728Activity\u6216Fragment\u5173\u95ed\u65f6\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42","title":"\u751f\u547d\u5468\u671f"},{"location":"download-file/","text":"\u7b80\u5355\u4e0b\u8f7d \u00b6 \u4e0b\u8f7d\u6587\u4ef6\u548c\u666e\u901a\u7684\u63a5\u53e3\u8bf7\u6c42\u552f\u4e00\u533a\u522b\u5c31\u662f\u6cdb\u578b\u4e0d\u540c scopeNetLife { val file = Get < File > ( \"download\" ). await () } Download\u51fd\u6570\u4e00\u8c03\u7528\u5c31\u4f1a\u5f00\u59cb\u6267\u884c\u4e0b\u8f7d\u6587\u4ef6\u8bf7\u6c42, \u7136\u540e await \u5219\u4f1a\u7b49\u5f85\u4e0b\u8f7d\u6587\u4ef6\u5b8c\u6210\u7136\u540e\u8fd4\u56de\u4e00\u4e2aFile\u5bf9\u8c61 \u4e0b\u8f7d\u9009\u9879 \u00b6 \u652f\u6301\u4e30\u5bcc\u7684\u4e0b\u8f7d\u5b9a\u5236\u65b9\u6848, \u5e76\u4e14\u4f1a\u4e0d\u65ad\u5730\u66f4\u65b0\u5b8c\u5584 \u4e0b\u8f7d\u6587\u4ef6 scopeNetLife { val file = Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) setDownloadMd5Verify () }. await () } \u4e0b\u8f7d\u5e76\u5b89\u88c5 scopeNetLife { Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) setDownloadMd5Verify () }. await (). install () } \u914d\u7f6e\u9009\u9879 \u51fd\u6570 \u63cf\u8ff0 setDownloadFileName \u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u79f0 setDownloadDir \u4e0b\u8f7d\u4fdd\u5b58\u7684\u76ee\u5f55, \u4e5f\u652f\u6301\u5305\u542b\u6587\u4ef6\u540d\u79f0\u7684\u5b8c\u6574\u8def\u5f84, \u5982\u679c\u4f7f\u7528\u5b8c\u6574\u8def\u5f84\u5219\u65e0\u89c6 setDownloadFileName \u8bbe\u7f6e setDownloadMd5Verify \u4e0b\u8f7d\u662f\u5426\u5f00\u542fMD5\u6821\u9a8c, \u5982\u679c\u670d\u52a1\u5668\u8fd4\u56de \"Content-MD5\"\u54cd\u5e94\u5934\u548c\u5236\u5b9a\u8def\u5f84\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6MD5\u76f8\u540c\u662f\u5426\u76f4\u63a5\u8fd4\u56deFile, \u4e0d\u4f1a\u91cd\u65b0\u4e0b\u8f7d setDownloadFileNameConflict \u4e0b\u8f7d\u6587\u4ef6\u540d\u5982\u679c\u5728\u6307\u5b9a\u8def\u5f84\u4e0b\u5b58\u5728\u540c\u540d\u4f1a\u81ea\u52a8\u91cd\u65b0\u547d\u540d, \u4f8b\u5982 file_name(1).apk setDownloadFileNameDecode \u6587\u4ef6\u540d\u79f0\u662f\u5426\u4f7f\u7528URL\u89e3\u7801, \u4f8b\u5982\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u5982\u679c\u662f\u4e2d\u6587, \u670d\u52a1\u5668\u4f20\u8f93\u7ed9\u4f60\u7684\u4f1a\u662f\u88abURL\u7f16\u7801\u7684\u5b57\u7b26\u4e32. \u4f60\u4f7f\u7528URL\u89e3\u7801\u540e\u624d\u662f\u53ef\u8bfb\u7684\u4e2d\u6587\u540d\u79f0 setDownloadTempFile \u4e0b\u8f7d\u662f\u5426\u4f7f\u7528\u4e34\u65f6\u6587\u4ef6, \u907f\u514d\u4e0b\u8f7d\u5931\u8d25\u540e\u8986\u76d6\u540c\u540d\u6587\u4ef6\u6216\u8005\u65e0\u6cd5\u5224\u522b\u662f\u5426\u5df2\u4e0b\u8f7d\u5b8c\u6574, \u4ec5\u5728\u4e0b\u8f7d\u5b8c\u6574\u4ee5\u540e\u624d\u4f1a\u663e\u793a\u4e3a\u539f\u6709\u6587\u4ef6\u540d addDownloadListener \u4e0b\u8f7d\u8fdb\u5ea6\u76d1\u542c\u5668, \u5177\u4f53\u4ecb\u7ecd\u5728 \u8fdb\u5ea6\u76d1\u542c \u4e2d \u4e0d\u4f7f\u7528 await \u51fd\u6570\u5219\u4e0b\u8f7d\u62a5\u9519\u4e5f\u4e0d\u4f1a\u88abNet\u6355\u6349\u5230, \u5c06\u4f1a\u88ab\u5ffd\u7565, \u4f7f\u7528await\u5219\u4f1a\u89e6\u53d1Net\u7684\u9519\u8bef\u5904\u7406, \u7ec8\u6b62\u5f53\u524d\u4f5c\u7528\u57df(scope)\u5185\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42, \u88abNet\u5168\u5c40\u9519\u8bef\u5904\u7406\u6355\u83b7","title":"\u4e0b\u8f7d\u6587\u4ef6"},{"location":"download-file/#_1","text":"\u4e0b\u8f7d\u6587\u4ef6\u548c\u666e\u901a\u7684\u63a5\u53e3\u8bf7\u6c42\u552f\u4e00\u533a\u522b\u5c31\u662f\u6cdb\u578b\u4e0d\u540c scopeNetLife { val file = Get < File > ( \"download\" ). await () } Download\u51fd\u6570\u4e00\u8c03\u7528\u5c31\u4f1a\u5f00\u59cb\u6267\u884c\u4e0b\u8f7d\u6587\u4ef6\u8bf7\u6c42, \u7136\u540e await \u5219\u4f1a\u7b49\u5f85\u4e0b\u8f7d\u6587\u4ef6\u5b8c\u6210\u7136\u540e\u8fd4\u56de\u4e00\u4e2aFile\u5bf9\u8c61","title":"\u7b80\u5355\u4e0b\u8f7d"},{"location":"download-file/#_2","text":"\u652f\u6301\u4e30\u5bcc\u7684\u4e0b\u8f7d\u5b9a\u5236\u65b9\u6848, \u5e76\u4e14\u4f1a\u4e0d\u65ad\u5730\u66f4\u65b0\u5b8c\u5584 \u4e0b\u8f7d\u6587\u4ef6 scopeNetLife { val file = Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) setDownloadMd5Verify () }. await () } \u4e0b\u8f7d\u5e76\u5b89\u88c5 scopeNetLife { Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) setDownloadMd5Verify () }. await (). install () } \u914d\u7f6e\u9009\u9879 \u51fd\u6570 \u63cf\u8ff0 setDownloadFileName \u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u79f0 setDownloadDir \u4e0b\u8f7d\u4fdd\u5b58\u7684\u76ee\u5f55, \u4e5f\u652f\u6301\u5305\u542b\u6587\u4ef6\u540d\u79f0\u7684\u5b8c\u6574\u8def\u5f84, \u5982\u679c\u4f7f\u7528\u5b8c\u6574\u8def\u5f84\u5219\u65e0\u89c6 setDownloadFileName \u8bbe\u7f6e setDownloadMd5Verify \u4e0b\u8f7d\u662f\u5426\u5f00\u542fMD5\u6821\u9a8c, \u5982\u679c\u670d\u52a1\u5668\u8fd4\u56de \"Content-MD5\"\u54cd\u5e94\u5934\u548c\u5236\u5b9a\u8def\u5f84\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6MD5\u76f8\u540c\u662f\u5426\u76f4\u63a5\u8fd4\u56deFile, \u4e0d\u4f1a\u91cd\u65b0\u4e0b\u8f7d setDownloadFileNameConflict \u4e0b\u8f7d\u6587\u4ef6\u540d\u5982\u679c\u5728\u6307\u5b9a\u8def\u5f84\u4e0b\u5b58\u5728\u540c\u540d\u4f1a\u81ea\u52a8\u91cd\u65b0\u547d\u540d, \u4f8b\u5982 file_name(1).apk setDownloadFileNameDecode \u6587\u4ef6\u540d\u79f0\u662f\u5426\u4f7f\u7528URL\u89e3\u7801, \u4f8b\u5982\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u5982\u679c\u662f\u4e2d\u6587, \u670d\u52a1\u5668\u4f20\u8f93\u7ed9\u4f60\u7684\u4f1a\u662f\u88abURL\u7f16\u7801\u7684\u5b57\u7b26\u4e32. \u4f60\u4f7f\u7528URL\u89e3\u7801\u540e\u624d\u662f\u53ef\u8bfb\u7684\u4e2d\u6587\u540d\u79f0 setDownloadTempFile \u4e0b\u8f7d\u662f\u5426\u4f7f\u7528\u4e34\u65f6\u6587\u4ef6, \u907f\u514d\u4e0b\u8f7d\u5931\u8d25\u540e\u8986\u76d6\u540c\u540d\u6587\u4ef6\u6216\u8005\u65e0\u6cd5\u5224\u522b\u662f\u5426\u5df2\u4e0b\u8f7d\u5b8c\u6574, \u4ec5\u5728\u4e0b\u8f7d\u5b8c\u6574\u4ee5\u540e\u624d\u4f1a\u663e\u793a\u4e3a\u539f\u6709\u6587\u4ef6\u540d addDownloadListener \u4e0b\u8f7d\u8fdb\u5ea6\u76d1\u542c\u5668, \u5177\u4f53\u4ecb\u7ecd\u5728 \u8fdb\u5ea6\u76d1\u542c \u4e2d \u4e0d\u4f7f\u7528 await \u51fd\u6570\u5219\u4e0b\u8f7d\u62a5\u9519\u4e5f\u4e0d\u4f1a\u88abNet\u6355\u6349\u5230, \u5c06\u4f1a\u88ab\u5ffd\u7565, \u4f7f\u7528await\u5219\u4f1a\u89e6\u53d1Net\u7684\u9519\u8bef\u5904\u7406, \u7ec8\u6b62\u5f53\u524d\u4f5c\u7528\u57df(scope)\u5185\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42, \u88abNet\u5168\u5c40\u9519\u8bef\u5904\u7406\u6355\u83b7","title":"\u4e0b\u8f7d\u9009\u9879"},{"location":"error-handle/","text":"Net\u5177\u5907\u5b8c\u5584\u7684\u9519\u8bef\u5904\u7406\u673a\u5236, \u9ed8\u8ba4\u60c5\u51b5\u53d1\u751f\u9519\u8bef\u4f1a\u6267\u884c Logcat \u663e\u793a\u5f02\u5e38\u4fe1\u606f Toast \u663e\u793a\u9519\u8bef\u4fe1\u606f \u8981\u6539\u53d8\u4ee5\u4e0a\u9519\u8bef\u5904\u7406\u6d41\u7a0b\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\u5668 \u5355\u4f8b\u5904\u7406\u5f02\u5e38 \u00b6 scope { val data = Get < String > ( \"http://www.thisiserror.com/\" ). await () }. catch { // \u534f\u7a0b\u5185\u90e8\u53d1\u751f\u9519\u8bef\u56de\u8c03, it\u4e3a\u5f02\u5e38 handleError ( it ) // \u8be5\u51fd\u6570\u4f1a\u5c06\u9519\u8bef\u518d\u6b21\u4f20\u9012\u7ed9\u5168\u5c40\u9519\u8bef\u56de\u8c03\u5904\u7406 }. finally { // \u534f\u7a0b\u5185\u5168\u90e8\u6267\u884c\u5b8c\u6210\u56de\u8c03(\u5305\u62ec\u5b50\u534f\u7a0b), it\u4e3a\u5f02\u5e38 } \u4ee5\u4e0b\u51fd\u6570\u5e55\u540e\u5b57\u6bb5 it \u4e3a\u5f02\u5e38\u5bf9\u8c61, \u5982\u679c\u6b63\u5e38\u5b8c\u6210it\u5219\u4e3anull. \u5982\u679c\u5c5e\u4e8e\u8bf7\u6c42\u88ab\u624b\u52a8\u53d6\u6d88\u5219it\u4e3a CancellationException \u51fd\u6570 \u63cf\u8ff0 catch \u4f5c\u7528\u57df\u88ab catch \u5219\u4e0d\u4f1a\u88ab\u4f20\u9012\u5230\u5168\u5c40\u5f02\u5e38\u5904\u7406\u56de\u8c03\u4e2d: \u5168\u5c40\u5904\u7406\u5f02\u5e38 , \u9664\u975e\u4f7f\u7528 handleError \u518d\u6b21\u4f20\u9012\u7ed9\u5168\u5c40 finally \u540c\u6837\u53ef\u4ee5\u83b7\u53d6\u5230\u5f02\u5e38\u5bf9\u8c61, \u4e14\u4e0d\u5f71\u54cd\u5168\u5c40\u5f02\u5e38\u56de\u8c03\u5904\u7406 \u5168\u5c40\u5904\u7406\u5f02\u5e38 \u00b6 Net\u9ed8\u8ba4\u5c31\u4f1a\u5904\u7406\u5f02\u5e38\u9519\u8bef\u907f\u514d\u5d29\u6e83. \u4f46\u662f\u5982\u679c\u4f60\u60f3\u8981\u81ea\u5b9a\u4e49\u6216\u8005\u76d1\u542c\u5168\u5c40\u9519\u8bef, \u4f60\u53ef\u4ee5\u8986\u76d6\u9ed8\u8ba4\u7684\u9519\u8bef\u5904\u7406. \u5728 initNet \u6216\u8005 NetConfig.errorHandler \u51fd\u6570\u91cc\u9762\u81ea\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u5904\u7406 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u53bb\u5b9a\u4e49\u9519\u8bef\u5904\u7406, \u56e0\u4e3a NetErrorHandler \u9ed8\u8ba4\u5b9e\u73b0\u9002\u7528\u4e8e\u5927\u90e8\u5206\u60c5\u51b5\u7684\u9519\u8bef\u5904\u7406. \u573a\u666f \u5904\u7406\u51fd\u6570 \u5904\u7406\u65b9\u5f0f \u666e\u901a\u7f51\u7edc\u8bf7\u6c42/\u81ea\u52a8\u52a0\u8f7d\u6846 onError toast \u63d0\u793a\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u6d88\u606f \u81ea\u52a8\u7f3a\u7701\u9875 onStateError \u90e8\u5206\u9519\u8bef\u4fe1\u606f toast \u793a\u4f8b NetConfig . init ( \"http://localhost:80/\" ) { setErrorHandler ( object : NetErrorHandler () { override fun onError ( e : Throwable ) { super . onError ( e ) } override fun onStateError ( e : Throwable , view : View ) { super . onStateError ( e , view ) } }) } \u7f3a\u7701\u9875\u4e0d\u9700\u8981\u6240\u6709\u7684\u9519\u8bef\u4fe1\u606f\u90fd\u5410\u53f8(toast)\u63d0\u793a, \u56e0\u4e3a\u9519\u8bef\u9875\u53ef\u80fd\u5df2\u7ecf\u5c55\u793a\u9519\u8bef\u4fe1\u606f, \u6240\u4ee5\u8fd9\u91cc\u4e24\u8005\u5904\u7406\u7684\u51fd\u6570\u533a\u5206. \u4f46\u662f\u6240\u6709\u7684\u9519\u8bef\u4fe1\u606f\u548c\u9519\u8bef\u7801\u90fd\u4f1a\u5728LogCat\u63a7\u5236\u53f0\u770b\u5230, \u5177\u4f53\u67e5\u770b \u5f02\u5e38\u8ffd\u8e2a . \u672c\u7ae0\u672b\u5c3e\u6709\u9ed8\u8ba4\u5b9e\u73b0\u7684\u6e90\u7801, \u53ef\u4f9b\u53c2\u8003\u6216\u8005\u7406\u89e3: \u9ed8\u8ba4\u5904\u7406 \u5f02\u5e38\u5bf9\u8c61 \u00b6 \u4ee5\u4e0b\u4e3aNet\u5185\u90e8\u5e38\u89c1\u53d1\u751f\u7684\u5f02\u5e38\u5bf9\u8c61. \u4e0d\u4ee3\u8868\u5168\u90e8\u5f02\u5e38, \u4f8b\u5982\u4e0d\u5305\u542b\u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u4e49\u7684\u5f02\u5e38 scope/scopeLife \u4e0d\u4f1a\u89e6\u53d1\u4efb\u4f55\u5168\u5c40\u9519\u8befNetErrorHandler, \u8bf7\u4f7f\u7528\u5355\u4f8b\u9519\u8bef\u5904\u7406\u65b9\u5f0f catch , \u56e0\u4e3a scope \u7528\u4e8e\u5904\u7406\u5f02\u6b65\u4efb\u52a1,\u4e0d\u5e94\u5f53\u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42 \u5f02\u5e38 \u63cf\u8ff0 NetException \u672a\u77e5\u7684\u7f51\u7edc\u5f02\u5e38, \u4e00\u822c\u60c5\u51b5\u5e94\u5f53\u7ee7\u627f\u4ed6\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u5f02\u5e38 HttpFailureException Http\u8bf7\u6c42\u9519\u8bef, Http\u8bf7\u6c42\u5931\u8d25(onFailure) HttpResponseException Http\u8bf7\u6c42\u6210\u529f\u540e\u53d1\u751f\u7684\u9519\u8bef, Http\u8bf7\u6c42\u6210\u529f\u4f46\u53d1\u751f\u5f02\u5e38(onResponse) URLParseException \u5730\u5740\u9519\u8bef NetUnknownHostException \u57df\u540d\u9519\u8bef NetSocketTimeoutException \u8fde\u63a5\u8d85\u65f6 NetConnectException \u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25 DownloadFileException \u4e0b\u8f7d\u6587\u4ef6\u5f02\u5e38 ConvertException \u89e3\u6790\u9519\u8bef, NetConvert \u4e2d\u53d1\u751f\u7684\u672a\u6355\u83b7\u5f02\u5e38\u90fd\u7b97\u89e3\u6790\u9519\u8bef RequestParamsException \u8bf7\u6c42\u53c2\u6570\u9519\u8bef 400 - 499 \u8303\u56f4\u5185\u9519\u8bef\u7801 ServerResponseException \u670d\u52a1\u5668\u9519\u8bef 500 - 599 \u8303\u56f4\u5185\u9519\u8bef\u7801 ResponseException \u9519\u8bef\u7801\u5f02\u5e38, \u4e00\u822c\u5e94\u7528\u4e8e\u540e\u7aef\u8fd4\u56de\u7684\u9519\u8bef\u7801\u548c\u5176\u5b9a\u4e49\u7684\u6210\u529f\u7801\u4e0d\u5339\u914d NullPointerException \u7a7a\u6307\u9488, \u4e00\u822c\u662f\u5728\u4f5c\u7528\u57df\u5185\u64cd\u4f5c\u4e00\u4e2a\u7a7a\u7684\u5bf9\u8c61 \u5047\u8bbe\u4f60\u91cd\u5199 NetConverter \u53ef\u4ee5\u6539\u53d8\u5f02\u5e38\u53d1\u751f\u7684\u6761\u4ef6, \u5f53\u7136\u4f60\u5728\u8f6c\u6362\u5668\u6216\u8005\u62e6\u622a\u5668\u4e2d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\u90fd\u4f1a\u88ab\u6355\u83b7\u6216\u8005\u5168\u5c40\u5904\u7406 \u8f6c\u6362\u5668\u4e2d\u53d1\u751f\u7684\u6240\u6709\u5f02\u5e38\u9664\u975e\u662fNetException\u7684\u5b50\u7c7b\u5426\u5219\u90fd\u5c06\u88abConvertException\u5305\u88f9(\u5373\u6355\u83b7\u7684\u662fConvertException). \u8986\u76d6\u9ed8\u8ba4\u9519\u8bef\u5904\u7406 \u00b6 \u8986\u76d6\u9ed8\u8ba4\u9519\u8bef\u5904\u7406\u6709\u4e24\u79cd\u65b9\u5f0f 1) \u53c2\u8003\u6e90\u7801\u5b8c\u5168\u81ea\u5b9a\u4e49 \u00b6 \u6e90\u7801\u4f4d\u4e8e: NetConfig \u7f3a\u7701\u9875\u7684\u9519\u8bef\u5904\u7406\u662f\u5355\u72ec\u7684: onStateError 2) \u4ec5\u8986\u76d6\u9519\u8bef\u4fe1\u606f \u00b6 \u9ed8\u8ba4\u9519\u8bef\u5904\u7406\u7684\u6587\u672c\u88ab\u5b9a\u4e49\u5728 strings.xml \u4e2d, \u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u540c\u540d\u8986\u76d6\u6216\u8005\u591a\u8bed\u8a00 <!--\u7f51\u7edc\u8bf7\u6c42\u5f02\u5e38--> <string name= \"net_network_error\" > \u5f53\u524d\u7f51\u7edc\u4e0d\u53ef\u7528 </string> <string name= \"net_url_error\" > \u8bf7\u6c42\u8d44\u6e90\u5730\u5740\u9519\u8bef </string> <string name= \"net_host_error\" > \u65e0\u6cd5\u627e\u5230\u6307\u5b9a\u670d\u52a1\u5668\u4e3b\u673a </string> <string name= \"net_connect_timeout_error\" > \u8fde\u63a5\u670d\u52a1\u5668\u8d85\u65f6\uff0c%s </string> <string name= \"net_download_error\" > \u4e0b\u8f7d\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef </string> <string name= \"net_no_cache_error\" > \u8bfb\u53d6\u7f13\u5b58\u9519\u8bef </string> <string name= \"net_parse_error\" > \u89e3\u6790\u6570\u636e\u65f6\u53d1\u751f\u5f02\u5e38 </string> <string name= \"net_request_error\" > \u8bf7\u6c42\u53c2\u6570\u9519\u8bef </string> <string name= \"net_server_error\" > \u670d\u52a1\u54cd\u5e94\u9519\u8bef </string> <string name= \"net_null_error\" > \u6570\u636e\u4e3a\u7a7a </string> <string name= \"net_error\" > \u672a\u77e5\u7f51\u7edc\u9519\u8bef </string> <string name= \"net_other_error\" > \u672a\u77e5\u9519\u8bef </string> <string name= \"no_error_message\" > \u65e0\u9519\u8bef\u4fe1\u606f </string>","title":"\u9519\u8bef\u5904\u7406"},{"location":"error-handle/#_1","text":"scope { val data = Get < String > ( \"http://www.thisiserror.com/\" ). await () }. catch { // \u534f\u7a0b\u5185\u90e8\u53d1\u751f\u9519\u8bef\u56de\u8c03, it\u4e3a\u5f02\u5e38 handleError ( it ) // \u8be5\u51fd\u6570\u4f1a\u5c06\u9519\u8bef\u518d\u6b21\u4f20\u9012\u7ed9\u5168\u5c40\u9519\u8bef\u56de\u8c03\u5904\u7406 }. finally { // \u534f\u7a0b\u5185\u5168\u90e8\u6267\u884c\u5b8c\u6210\u56de\u8c03(\u5305\u62ec\u5b50\u534f\u7a0b), it\u4e3a\u5f02\u5e38 } \u4ee5\u4e0b\u51fd\u6570\u5e55\u540e\u5b57\u6bb5 it \u4e3a\u5f02\u5e38\u5bf9\u8c61, \u5982\u679c\u6b63\u5e38\u5b8c\u6210it\u5219\u4e3anull. \u5982\u679c\u5c5e\u4e8e\u8bf7\u6c42\u88ab\u624b\u52a8\u53d6\u6d88\u5219it\u4e3a CancellationException \u51fd\u6570 \u63cf\u8ff0 catch \u4f5c\u7528\u57df\u88ab catch \u5219\u4e0d\u4f1a\u88ab\u4f20\u9012\u5230\u5168\u5c40\u5f02\u5e38\u5904\u7406\u56de\u8c03\u4e2d: \u5168\u5c40\u5904\u7406\u5f02\u5e38 , \u9664\u975e\u4f7f\u7528 handleError \u518d\u6b21\u4f20\u9012\u7ed9\u5168\u5c40 finally \u540c\u6837\u53ef\u4ee5\u83b7\u53d6\u5230\u5f02\u5e38\u5bf9\u8c61, \u4e14\u4e0d\u5f71\u54cd\u5168\u5c40\u5f02\u5e38\u56de\u8c03\u5904\u7406","title":"\u5355\u4f8b\u5904\u7406\u5f02\u5e38"},{"location":"error-handle/#_2","text":"Net\u9ed8\u8ba4\u5c31\u4f1a\u5904\u7406\u5f02\u5e38\u9519\u8bef\u907f\u514d\u5d29\u6e83. \u4f46\u662f\u5982\u679c\u4f60\u60f3\u8981\u81ea\u5b9a\u4e49\u6216\u8005\u76d1\u542c\u5168\u5c40\u9519\u8bef, \u4f60\u53ef\u4ee5\u8986\u76d6\u9ed8\u8ba4\u7684\u9519\u8bef\u5904\u7406. \u5728 initNet \u6216\u8005 NetConfig.errorHandler \u51fd\u6570\u91cc\u9762\u81ea\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u5904\u7406 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u53bb\u5b9a\u4e49\u9519\u8bef\u5904\u7406, \u56e0\u4e3a NetErrorHandler \u9ed8\u8ba4\u5b9e\u73b0\u9002\u7528\u4e8e\u5927\u90e8\u5206\u60c5\u51b5\u7684\u9519\u8bef\u5904\u7406. \u573a\u666f \u5904\u7406\u51fd\u6570 \u5904\u7406\u65b9\u5f0f \u666e\u901a\u7f51\u7edc\u8bf7\u6c42/\u81ea\u52a8\u52a0\u8f7d\u6846 onError toast \u63d0\u793a\u540e\u7aef\u5b9a\u4e49\u7684\u9519\u8bef\u6d88\u606f \u81ea\u52a8\u7f3a\u7701\u9875 onStateError \u90e8\u5206\u9519\u8bef\u4fe1\u606f toast \u793a\u4f8b NetConfig . init ( \"http://localhost:80/\" ) { setErrorHandler ( object : NetErrorHandler () { override fun onError ( e : Throwable ) { super . onError ( e ) } override fun onStateError ( e : Throwable , view : View ) { super . onStateError ( e , view ) } }) } \u7f3a\u7701\u9875\u4e0d\u9700\u8981\u6240\u6709\u7684\u9519\u8bef\u4fe1\u606f\u90fd\u5410\u53f8(toast)\u63d0\u793a, \u56e0\u4e3a\u9519\u8bef\u9875\u53ef\u80fd\u5df2\u7ecf\u5c55\u793a\u9519\u8bef\u4fe1\u606f, \u6240\u4ee5\u8fd9\u91cc\u4e24\u8005\u5904\u7406\u7684\u51fd\u6570\u533a\u5206. \u4f46\u662f\u6240\u6709\u7684\u9519\u8bef\u4fe1\u606f\u548c\u9519\u8bef\u7801\u90fd\u4f1a\u5728LogCat\u63a7\u5236\u53f0\u770b\u5230, \u5177\u4f53\u67e5\u770b \u5f02\u5e38\u8ffd\u8e2a . \u672c\u7ae0\u672b\u5c3e\u6709\u9ed8\u8ba4\u5b9e\u73b0\u7684\u6e90\u7801, \u53ef\u4f9b\u53c2\u8003\u6216\u8005\u7406\u89e3: \u9ed8\u8ba4\u5904\u7406","title":"\u5168\u5c40\u5904\u7406\u5f02\u5e38"},{"location":"error-handle/#_3","text":"\u4ee5\u4e0b\u4e3aNet\u5185\u90e8\u5e38\u89c1\u53d1\u751f\u7684\u5f02\u5e38\u5bf9\u8c61. \u4e0d\u4ee3\u8868\u5168\u90e8\u5f02\u5e38, \u4f8b\u5982\u4e0d\u5305\u542b\u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u4e49\u7684\u5f02\u5e38 scope/scopeLife \u4e0d\u4f1a\u89e6\u53d1\u4efb\u4f55\u5168\u5c40\u9519\u8befNetErrorHandler, \u8bf7\u4f7f\u7528\u5355\u4f8b\u9519\u8bef\u5904\u7406\u65b9\u5f0f catch , \u56e0\u4e3a scope \u7528\u4e8e\u5904\u7406\u5f02\u6b65\u4efb\u52a1,\u4e0d\u5e94\u5f53\u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42 \u5f02\u5e38 \u63cf\u8ff0 NetException \u672a\u77e5\u7684\u7f51\u7edc\u5f02\u5e38, \u4e00\u822c\u60c5\u51b5\u5e94\u5f53\u7ee7\u627f\u4ed6\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u5f02\u5e38 HttpFailureException Http\u8bf7\u6c42\u9519\u8bef, Http\u8bf7\u6c42\u5931\u8d25(onFailure) HttpResponseException Http\u8bf7\u6c42\u6210\u529f\u540e\u53d1\u751f\u7684\u9519\u8bef, Http\u8bf7\u6c42\u6210\u529f\u4f46\u53d1\u751f\u5f02\u5e38(onResponse) URLParseException \u5730\u5740\u9519\u8bef NetUnknownHostException \u57df\u540d\u9519\u8bef NetSocketTimeoutException \u8fde\u63a5\u8d85\u65f6 NetConnectException \u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25 DownloadFileException \u4e0b\u8f7d\u6587\u4ef6\u5f02\u5e38 ConvertException \u89e3\u6790\u9519\u8bef, NetConvert \u4e2d\u53d1\u751f\u7684\u672a\u6355\u83b7\u5f02\u5e38\u90fd\u7b97\u89e3\u6790\u9519\u8bef RequestParamsException \u8bf7\u6c42\u53c2\u6570\u9519\u8bef 400 - 499 \u8303\u56f4\u5185\u9519\u8bef\u7801 ServerResponseException \u670d\u52a1\u5668\u9519\u8bef 500 - 599 \u8303\u56f4\u5185\u9519\u8bef\u7801 ResponseException \u9519\u8bef\u7801\u5f02\u5e38, \u4e00\u822c\u5e94\u7528\u4e8e\u540e\u7aef\u8fd4\u56de\u7684\u9519\u8bef\u7801\u548c\u5176\u5b9a\u4e49\u7684\u6210\u529f\u7801\u4e0d\u5339\u914d NullPointerException \u7a7a\u6307\u9488, \u4e00\u822c\u662f\u5728\u4f5c\u7528\u57df\u5185\u64cd\u4f5c\u4e00\u4e2a\u7a7a\u7684\u5bf9\u8c61 \u5047\u8bbe\u4f60\u91cd\u5199 NetConverter \u53ef\u4ee5\u6539\u53d8\u5f02\u5e38\u53d1\u751f\u7684\u6761\u4ef6, \u5f53\u7136\u4f60\u5728\u8f6c\u6362\u5668\u6216\u8005\u62e6\u622a\u5668\u4e2d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\u90fd\u4f1a\u88ab\u6355\u83b7\u6216\u8005\u5168\u5c40\u5904\u7406 \u8f6c\u6362\u5668\u4e2d\u53d1\u751f\u7684\u6240\u6709\u5f02\u5e38\u9664\u975e\u662fNetException\u7684\u5b50\u7c7b\u5426\u5219\u90fd\u5c06\u88abConvertException\u5305\u88f9(\u5373\u6355\u83b7\u7684\u662fConvertException).","title":"\u5f02\u5e38\u5bf9\u8c61"},{"location":"error-handle/#_4","text":"\u8986\u76d6\u9ed8\u8ba4\u9519\u8bef\u5904\u7406\u6709\u4e24\u79cd\u65b9\u5f0f","title":"\u8986\u76d6\u9ed8\u8ba4\u9519\u8bef\u5904\u7406"},{"location":"error-handle/#1","text":"\u6e90\u7801\u4f4d\u4e8e: NetConfig \u7f3a\u7701\u9875\u7684\u9519\u8bef\u5904\u7406\u662f\u5355\u72ec\u7684: onStateError","title":"1) \u53c2\u8003\u6e90\u7801\u5b8c\u5168\u81ea\u5b9a\u4e49"},{"location":"error-handle/#2","text":"\u9ed8\u8ba4\u9519\u8bef\u5904\u7406\u7684\u6587\u672c\u88ab\u5b9a\u4e49\u5728 strings.xml \u4e2d, \u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u540c\u540d\u8986\u76d6\u6216\u8005\u591a\u8bed\u8a00 <!--\u7f51\u7edc\u8bf7\u6c42\u5f02\u5e38--> <string name= \"net_network_error\" > \u5f53\u524d\u7f51\u7edc\u4e0d\u53ef\u7528 </string> <string name= \"net_url_error\" > \u8bf7\u6c42\u8d44\u6e90\u5730\u5740\u9519\u8bef </string> <string name= \"net_host_error\" > \u65e0\u6cd5\u627e\u5230\u6307\u5b9a\u670d\u52a1\u5668\u4e3b\u673a </string> <string name= \"net_connect_timeout_error\" > \u8fde\u63a5\u670d\u52a1\u5668\u8d85\u65f6\uff0c%s </string> <string name= \"net_download_error\" > \u4e0b\u8f7d\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef </string> <string name= \"net_no_cache_error\" > \u8bfb\u53d6\u7f13\u5b58\u9519\u8bef </string> <string name= \"net_parse_error\" > \u89e3\u6790\u6570\u636e\u65f6\u53d1\u751f\u5f02\u5e38 </string> <string name= \"net_request_error\" > \u8bf7\u6c42\u53c2\u6570\u9519\u8bef </string> <string name= \"net_server_error\" > \u670d\u52a1\u54cd\u5e94\u9519\u8bef </string> <string name= \"net_null_error\" > \u6570\u636e\u4e3a\u7a7a </string> <string name= \"net_error\" > \u672a\u77e5\u7f51\u7edc\u9519\u8bef </string> <string name= \"net_other_error\" > \u672a\u77e5\u9519\u8bef </string> <string name= \"no_error_message\" > \u65e0\u9519\u8bef\u4fe1\u606f </string>","title":"2)  \u4ec5\u8986\u76d6\u9519\u8bef\u4fe1\u606f"},{"location":"exception-track/","text":"Net\u4e2d\u7f51\u7edc\u8bf7\u6c42\u5bfc\u81f4\u7684\u5f02\u5e38\u90fd\u4f1a\u5728LogCat\u4e2d\u6253\u5370, \u540c\u65f6\u88ab\u5168\u5c40\u7684NetErrorHandler\u7684onError\u62e6\u622a\u5230 Net\u7684\u5f02\u5e38\u5bf9\u8c61\u901a\u5e38\u4f1a\u643a\u5e26Request\u6216\u8005Response\u5bf9\u8c61. \u53ef\u4ee5\u7cbe\u51c6\u5b9a\u4f4d\u5230\u8bf7\u6c42\u4fe1\u606f \u6f14\u793a\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u8bf7\u6c42\u8def\u5f84(\u4f46\u662fURL\u5b58\u5728) scopeNetLife { // \u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u5730\u5740, \u8bf7\u67e5\u770bLogCat\u7684\u9519\u8bef\u4fe1\u606f, \u5728[Convert]\u4e2d\u4f60\u4e5f\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f\u6253\u5370 tvFragment . text = Get < String > ( \"error\" ). await () } \u67e5\u770bLogCat\u53ef\u4ee5\u770b\u5230\u5f02\u5e38\u5806\u6808\u4fe1\u606f \u8fd9\u5c5e\u4e8e\u8bf7\u6c42\u53c2\u6570\u9519\u8bef404, \u5c06\u4f1a\u6253\u5370\u51fa\u9519\u8bef\u7801\u4ee5\u53ca\u8bf7\u6c42\u7684URL. \u5173\u95ed\u65e5\u5fd7 \u00b6 \u5728\u521d\u59cb\u5316\u65f6\u5019\u53ef\u4ee5\u5173\u95ed\u65e5\u5fd7\u6253\u5370 NetConfig . init ( \"http://github.com/\" ) { setLog ( false ) // \u5173\u95ed\u65e5\u5fd7 } \u6216\u8005\u8bbe\u7f6e\u5b57\u6bb5 NetConfig.logEnabled \u7684\u503c","title":"\u5b9a\u4f4d\u5f02\u5e38"},{"location":"exception-track/#_1","text":"\u5728\u521d\u59cb\u5316\u65f6\u5019\u53ef\u4ee5\u5173\u95ed\u65e5\u5fd7\u6253\u5370 NetConfig . init ( \"http://github.com/\" ) { setLog ( false ) // \u5173\u95ed\u65e5\u5fd7 } \u6216\u8005\u8bbe\u7f6e\u5b57\u6bb5 NetConfig.logEnabled \u7684\u503c","title":"\u5173\u95ed\u65e5\u5fd7"},{"location":"fastest/","text":"Net\u652f\u6301\u591a\u4e2a\u63a5\u53e3\u8bf7\u6c42\u5e76\u53d1, \u4ec5\u8fd4\u56de\u6700\u5feb\u7684\u8bf7\u6c42\u7ed3\u679c, \u5269\u4f59\u8bf7\u6c42\u5c06\u88ab\u81ea\u52a8\u53d6\u6d88, \u540c\u6837\u53ef\u4ee5\u7528\u4e8e\u7b5b\u9009\u6389\u65e0\u6cd5\u54cd\u5e94\u7684\u57df\u540d \u63a5\u53e3\u8bf7\u6c42\u9519\u8bef\u88ab\u5ffd\u7565(LogCat\u4f9d\u7136\u53ef\u4ee5\u770b\u5230\u5f02\u5e38\u4fe1\u606f), \u4f46\u5982\u679c\u6240\u6709\u8bf7\u6c42\u5168\u90e8\u5f02\u5e38\u5219\u629b\u51fa\u6700\u540e\u4e00\u4e2a\u8bf7\u6c42\u7684\u5f02\u5e38\u4f5c\u4e3a\u9519\u8bef\u5904\u7406 \u793a\u4f8b scopeNetLife { // \u540c\u65f6\u53d1\u8d77\u56db\u4e2a\u7f51\u7edc\u8bf7\u6c42 val deferred = Get < String > ( \"api0\" ) // \u9519\u8bef\u63a5\u53e3 val deferred1 = Get < String > ( \"api1\" ) // \u9519\u8bef\u63a5\u53e3 val deferred2 = Get < String > ( \"api\" ) val deferred3 = Post < String > ( \"api\" ) // \u53ea\u8fd4\u56de\u6700\u5feb\u7684\u8bf7\u6c42\u7ed3\u679c tvFragment . text = fastest ( deferred , deferred1 , deferred2 , deferred3 ) } \u53d6\u6d88\u5269\u4f59 \u00b6 \u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u5728\u83b7\u53d6\u5230\u6700\u5feb\u7684\u7ed3\u679c\u540e\u81ea\u52a8\u53d6\u6d88\u8bf7\u6c42, \u6211\u4eec\u9700\u8981\u624b\u52a8\u8bbe\u7f6euid\u624d\u53ef\u4ee5 scopeNetLife { // \u540c\u65f6\u53d1\u8d77\u56db\u4e2a\u7f51\u7edc\u8bf7\u6c42 val deferred2 = Get < String > ( \"api\" ) { setGroup ( \"\u6700\u5feb\" ) } val deferred3 = Post < String > ( \"api\" ) { setGroup ( \"\u6700\u5feb\" ) } val deferred = Get < String > ( \"api0\" ) { setGroup ( \"\u6700\u5feb\" ) } // \u9519\u8bef\u63a5\u53e3 val deferred1 = Get < String > ( \"api1\" ) { setGroup ( \"\u6700\u5feb\" ) } // \u9519\u8bef\u63a5\u53e3 // \u53ea\u8fd4\u56de\u6700\u5feb\u7684\u8bf7\u6c42\u7ed3\u679c tvFragment . text = fastest ( listOf ( deferred , deferred1 , deferred2 , deferred3 ), \"\u6700\u5feb\" ) } \u7f51\u7edc\u8bf7\u6c42\u7684\u53d6\u6d88\u672c\u8d28\u4e0a\u4f9d\u9760uid\u6765\u8fa8\u522b,\u5982\u679c\u4f7f\u7528 setGroup \u51fd\u6570\u8bbe\u7f6e\u5206\u7ec4\u540d\u79f0\u5c31\u53ef\u4ee5\u5728\u8fd4\u56de\u6700\u5feb\u7ed3\u679c\u540e\u53d6\u6d88\u6389\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42, \u53cd\u4e4b\u4e0d\u4f1a\u53d6\u6d88\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42 uid\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u4efb\u4f55\u503c, \u53ea\u6709\u8bf7\u6c42\u7684 setGroup \u53c2\u6570\u548c fastest \u51fd\u6570\u7684group\u53c2\u6570\u7b49\u4e8e\u5373\u53ef \u7c7b\u578b\u4e0d\u4e00\u81f4 \u00b6 \u5047\u8bbe\u5e76\u53d1\u7684\u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c \u6216\u8005\u60f3\u8981\u76d1\u542c\u6700\u5feb\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c\u56de\u8c03\u8bf7\u4f7f\u7528 transform \u51fd\u6570 scopeNetLife { val fastest = Post < String > ( \"api\" ). transform { Log . d ( \"\u65e5\u5fd7\" , \"Post\" ) // \u5982\u679c\u8be5\u63a5\u53e3\u6700\u5feb\u5219\u4f1a\u56de\u8c03\u8fd9\u91cc it // \u8fd9\u91cc\u53ef\u4ee5\u8fd4\u56de\u5176\u4ed6\u6570\u636e\u7ed3\u679c } val fastest2 = Get < String > ( \"api\" ). transform { Log . d ( \"\u65e5\u5fd7\" , \"Get\" ) // \u5982\u679c\u8be5\u63a5\u53e3\u6700\u5feb\u5219\u4f1a\u56de\u8c03\u8fd9\u91cc it } tvFragment . text = fastest ( fastest , fastest2 ) } \u6709\u7684\u573a\u666f\u4e0b\u5e76\u53d1\u7684\u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c, \u4f46\u662ffastest\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b, \u6211\u4eec\u53ef\u4ee5\u4f7f transform \u7684\u56de\u8c03\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u90fd\u62e5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u63a5\u53e3, \u7136\u540e\u53bb\u7c7b\u578b\u5224\u65ad \u53ea\u6709\u6700\u5feb\u8fd4\u56de\u7ed3\u679c\u7684\u7f51\u7edc\u8bf7\u6c42(\u6216\u5f02\u6b65\u4efb\u52a1)\u7684 transform \u56de\u8c03\u624d\u4f1a\u88ab\u6267\u884c\u5230 \u6355\u83b7Fastest \u00b6 scopeNetLife { val task = Get < String > ( \"api2\" ) val task1 = Get < String > ( \"api2\" ) val task2 = Get < String > ( \"api2\" ) val data = try { fastest ( task , task1 , task2 ) // \u5f53 task/task1/task2 \u5168\u90e8\u5f02\u5e38\u4e4b\u540e\u518d\u5e76\u53d1\u6267\u884c backupTask/backupTask1 } catch ( e : Exception ) { val backupTask = Get < String > ( \"api2\" ) val backupTask1 = Get < String > ( \"api\" ) fastest ( backupTask , backupTask1 ) } } \u4e0d\u8981\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u53d6\u4ee3CDN\u52a0\u901f","title":"\u6700\u5feb\u8bf7\u6c42\u7ed3\u679c"},{"location":"fastest/#_1","text":"\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u5728\u83b7\u53d6\u5230\u6700\u5feb\u7684\u7ed3\u679c\u540e\u81ea\u52a8\u53d6\u6d88\u8bf7\u6c42, \u6211\u4eec\u9700\u8981\u624b\u52a8\u8bbe\u7f6euid\u624d\u53ef\u4ee5 scopeNetLife { // \u540c\u65f6\u53d1\u8d77\u56db\u4e2a\u7f51\u7edc\u8bf7\u6c42 val deferred2 = Get < String > ( \"api\" ) { setGroup ( \"\u6700\u5feb\" ) } val deferred3 = Post < String > ( \"api\" ) { setGroup ( \"\u6700\u5feb\" ) } val deferred = Get < String > ( \"api0\" ) { setGroup ( \"\u6700\u5feb\" ) } // \u9519\u8bef\u63a5\u53e3 val deferred1 = Get < String > ( \"api1\" ) { setGroup ( \"\u6700\u5feb\" ) } // \u9519\u8bef\u63a5\u53e3 // \u53ea\u8fd4\u56de\u6700\u5feb\u7684\u8bf7\u6c42\u7ed3\u679c tvFragment . text = fastest ( listOf ( deferred , deferred1 , deferred2 , deferred3 ), \"\u6700\u5feb\" ) } \u7f51\u7edc\u8bf7\u6c42\u7684\u53d6\u6d88\u672c\u8d28\u4e0a\u4f9d\u9760uid\u6765\u8fa8\u522b,\u5982\u679c\u4f7f\u7528 setGroup \u51fd\u6570\u8bbe\u7f6e\u5206\u7ec4\u540d\u79f0\u5c31\u53ef\u4ee5\u5728\u8fd4\u56de\u6700\u5feb\u7ed3\u679c\u540e\u53d6\u6d88\u6389\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42, \u53cd\u4e4b\u4e0d\u4f1a\u53d6\u6d88\u5176\u4ed6\u7f51\u7edc\u8bf7\u6c42 uid\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u4efb\u4f55\u503c, \u53ea\u6709\u8bf7\u6c42\u7684 setGroup \u53c2\u6570\u548c fastest \u51fd\u6570\u7684group\u53c2\u6570\u7b49\u4e8e\u5373\u53ef","title":"\u53d6\u6d88\u5269\u4f59"},{"location":"fastest/#_2","text":"\u5047\u8bbe\u5e76\u53d1\u7684\u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c \u6216\u8005\u60f3\u8981\u76d1\u542c\u6700\u5feb\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c\u56de\u8c03\u8bf7\u4f7f\u7528 transform \u51fd\u6570 scopeNetLife { val fastest = Post < String > ( \"api\" ). transform { Log . d ( \"\u65e5\u5fd7\" , \"Post\" ) // \u5982\u679c\u8be5\u63a5\u53e3\u6700\u5feb\u5219\u4f1a\u56de\u8c03\u8fd9\u91cc it // \u8fd9\u91cc\u53ef\u4ee5\u8fd4\u56de\u5176\u4ed6\u6570\u636e\u7ed3\u679c } val fastest2 = Get < String > ( \"api\" ). transform { Log . d ( \"\u65e5\u5fd7\" , \"Get\" ) // \u5982\u679c\u8be5\u63a5\u53e3\u6700\u5feb\u5219\u4f1a\u56de\u8c03\u8fd9\u91cc it } tvFragment . text = fastest ( fastest , fastest2 ) } \u6709\u7684\u573a\u666f\u4e0b\u5e76\u53d1\u7684\u63a5\u53e3\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c, \u4f46\u662ffastest\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b, \u6211\u4eec\u53ef\u4ee5\u4f7f transform \u7684\u56de\u8c03\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u90fd\u62e5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u63a5\u53e3, \u7136\u540e\u53bb\u7c7b\u578b\u5224\u65ad \u53ea\u6709\u6700\u5feb\u8fd4\u56de\u7ed3\u679c\u7684\u7f51\u7edc\u8bf7\u6c42(\u6216\u5f02\u6b65\u4efb\u52a1)\u7684 transform \u56de\u8c03\u624d\u4f1a\u88ab\u6267\u884c\u5230","title":"\u7c7b\u578b\u4e0d\u4e00\u81f4"},{"location":"fastest/#fastest","text":"scopeNetLife { val task = Get < String > ( \"api2\" ) val task1 = Get < String > ( \"api2\" ) val task2 = Get < String > ( \"api2\" ) val data = try { fastest ( task , task1 , task2 ) // \u5f53 task/task1/task2 \u5168\u90e8\u5f02\u5e38\u4e4b\u540e\u518d\u5e76\u53d1\u6267\u884c backupTask/backupTask1 } catch ( e : Exception ) { val backupTask = Get < String > ( \"api2\" ) val backupTask1 = Get < String > ( \"api\" ) fastest ( backupTask , backupTask1 ) } } \u4e0d\u8981\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u53d6\u4ee3CDN\u52a0\u901f","title":"\u6355\u83b7Fastest"},{"location":"https/","text":"Https\u8bbf\u95ee\u4e3b\u8981\u5c31\u662f\u8bc1\u4e66\u914d\u7f6e\u95ee\u9898, Net\u53ef\u4ee5\u4f7f\u7528OkHttp\u4e00\u5207\u51fd\u6570\u7ec4\u4ef6, \u4e14\u7b80\u5316\u8bc1\u4e66\u914d\u7f6e\u6d41\u7a0b OkHttp\u5982\u4f55\u914d\u7f6e\u8bc1\u4e66, Net\u5c31\u53ef\u4ee5\u5982\u4f55\u914d\u7f6e\u8bc1\u4e66 \u4f7f\u7528CA\u8bc1\u4e66 \u00b6 Https\u5982\u679c\u662f\u4f7f\u7528\u7684CA\u9881\u53d1\u7684\u8bc1\u4e66, \u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6eNet\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee scopeNetLife { tvFragment . text = Get < String > ( \"https://github.com/\" ). await () } \u4fe1\u4efb\u6240\u6709\u8bc1\u4e66 \u00b6 \u4fe1\u4efb\u6240\u6709\u8bc1\u4e66\u53ef\u4ee5\u89e3\u51b3\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u8bc1\u4e66\u7684Https\u5730\u5740\u95ee\u9898, \u4f46\u662f\u8fd9\u4e48\u505a\u5c31\u5931\u53bb\u4e86\u4f7f\u7528\u8bc1\u4e66\u7684\u542b\u4e49, \u4e0d\u5efa\u8bae\u6b64\u505a\u6cd5 \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"https://www.google.com/\" ){ trustSSLCertificate () // \u4fe1\u4efb\u6240\u6709\u8bc1\u4e66 } \u5355\u4f8b\u914d\u7f6e scopeNetLife { Get < String > ( \"https://github.com/\" ){ setClient { trustSSLCertificate () } }. await () } \u5bfc\u5165\u8bc1\u4e66 \u00b6 \u79c1\u6709\u8bc1\u4e66\u53ef\u4ee5\u653e\u5230\u4efb\u4f55\u4f4d\u7f6e, \u53ea\u8981\u80fd\u8bfb\u53d6\u5230 InputStream \u6d41\u5bf9\u8c61\u5373\u53ef \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"http://github.com/\" ) { val privateCertificate = resources . assets . open ( \"https.certificate\" ) setSSLCertificate ( privateCertificate ) } \u5355\u4f8b\u914d\u7f6e scopeNetLife { Get < String > ( \"https://github.com/\" ) { setClient { val privateCertificate = resources . assets . open ( \"https.certificate\" ) // \u8fd9\u91cc\u7684\u8bc1\u4e66\u662f\u653e\u5230\u5e94\u7528\u7684\u8d44\u4ea7\u76ee\u5f55\u4e0b setSSLCertificate ( privateCertificate ) } }. await () }","title":"Https\u8bc1\u4e66"},{"location":"https/#ca","text":"Https\u5982\u679c\u662f\u4f7f\u7528\u7684CA\u9881\u53d1\u7684\u8bc1\u4e66, \u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6eNet\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee scopeNetLife { tvFragment . text = Get < String > ( \"https://github.com/\" ). await () }","title":"\u4f7f\u7528CA\u8bc1\u4e66"},{"location":"https/#_1","text":"\u4fe1\u4efb\u6240\u6709\u8bc1\u4e66\u53ef\u4ee5\u89e3\u51b3\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u8bc1\u4e66\u7684Https\u5730\u5740\u95ee\u9898, \u4f46\u662f\u8fd9\u4e48\u505a\u5c31\u5931\u53bb\u4e86\u4f7f\u7528\u8bc1\u4e66\u7684\u542b\u4e49, \u4e0d\u5efa\u8bae\u6b64\u505a\u6cd5 \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"https://www.google.com/\" ){ trustSSLCertificate () // \u4fe1\u4efb\u6240\u6709\u8bc1\u4e66 } \u5355\u4f8b\u914d\u7f6e scopeNetLife { Get < String > ( \"https://github.com/\" ){ setClient { trustSSLCertificate () } }. await () }","title":"\u4fe1\u4efb\u6240\u6709\u8bc1\u4e66"},{"location":"https/#_2","text":"\u79c1\u6709\u8bc1\u4e66\u53ef\u4ee5\u653e\u5230\u4efb\u4f55\u4f4d\u7f6e, \u53ea\u8981\u80fd\u8bfb\u53d6\u5230 InputStream \u6d41\u5bf9\u8c61\u5373\u53ef \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"http://github.com/\" ) { val privateCertificate = resources . assets . open ( \"https.certificate\" ) setSSLCertificate ( privateCertificate ) } \u5355\u4f8b\u914d\u7f6e scopeNetLife { Get < String > ( \"https://github.com/\" ) { setClient { val privateCertificate = resources . assets . open ( \"https.certificate\" ) // \u8fd9\u91cc\u7684\u8bc1\u4e66\u662f\u653e\u5230\u5e94\u7528\u7684\u8d44\u4ea7\u76ee\u5f55\u4e0b setSSLCertificate ( privateCertificate ) } }. await () }","title":"\u5bfc\u5165\u8bc1\u4e66"},{"location":"interceptor/","text":"\u62e6\u622a\u5668(Interceptor)\u4e00\u822c\u7528\u4e8e\u4fee\u6539\u8bf7\u6c42\u7684\u53c2\u6570\u6216\u8005\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1/\u91cd\u8bd5. Net\u5c31\u662f\u4f7f\u7528\u7684OkHttp\u7684\u62e6\u622a\u5668. \u6240\u4ee5\u652f\u6301\u5e02\u9762\u4e0a\u7684\u6240\u6709OkHttp\u62e6\u622a\u5668\u7ec4\u4ef6\u5e93 \u4f60\u7684\u4e1a\u52a1\u53ef\u80fd\u9700\u8981\u8bf7\u6c42\u53c2\u6570\u52a0\u5bc6\u6216\u8005\u54cd\u5e94\u4fe1\u606f\u9700\u8981\u89e3\u5bc6. \u8bf7\u5c3d\u53ef\u80fd\u4e0d\u8981\u5c01\u88c5Post/Get\u7b49\u8bf7\u6c42\u52a8\u4f5c(\u8fd9\u662f\u4e0d\u660e\u667a\u7684\u505a\u6cd5) \u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u548c\u8f6c\u6362\u5668\u53ef\u4ee5\u5e94\u5bf9\u4efb\u4f55\u9879\u76ee\u9700\u6c42. \u540c\u65f6\u66f4\u7b26\u5408\u9879\u76ee\u8bbe\u8ba1 class App : Application () { override fun onCreate () { super . onCreate () NetConfig . init ( \"http://github.com/\" ) { addInterceptor { chain -> chain . proceed ( chain . request ()) } } } } \u5728\u62e6\u622a\u5668\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u590d\u5236\u8bf7\u6c42/\u54cd\u5e94\u4f53 \u51fd\u6570 \u63cf\u8ff0 peekString \u53ef\u4ee5\u590d\u5236\u622a\u53d6RequestBody/ResponseBody, \u4e14\u8fd4\u56deString logString \u7b49\u6548\u4e8e\u4e0a\u9762\u51fd\u6570, \u4f46\u662fResponse\u4ec5\u652f\u6301\u6587\u672c/JSON, Request\u4ec5\u652f\u6301FormBody \u8bf7\u6c42\u62e6\u622a\u5668 \u00b6 RequestInterceptor\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u7684\u8bf7\u6c42\u62e6\u622a\u5668, \u5728\u6bcf\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\u8be5\u62e6\u622a\u5668\u90fd\u4f1a\u88ab\u89e6\u53d1. \u4e00\u822c\u7528\u4e8e\u6dfb\u52a0\u5168\u5c40\u7684\u53c2\u6570\u548c\u8bf7\u6c42\u5934 \u521d\u59cb\u5316\u65f6\u6dfb\u52a0\u8bf7\u6c42\u62e6\u622a\u5668\u7684\u793a\u4f8b\u4ee3\u7801 NetConfig . init ( \"http://github.com/\" ) { setRequestInterceptor ( object : RequestInterceptor { override fun interceptor ( request : BaseRequest ) { request . param ( \"client\" , \"Net\" ) request . setHeader ( \"token\" , \"123456\" ) } }) } \u53ef\u4ee5\u770b\u5230 setRequestInterceptor \u662fset\u5f00\u5934. \u4ec5\u652f\u6301\u4e00\u4e2a\u8bf7\u6c42\u62e6\u622a\u5668, \u4e0d\u50cf addInterceptor \u652f\u6301\u591a\u4e2a\u8bf7\u6c42\u62e6\u622a\u5668","title":"\u62e6\u622a\u5668"},{"location":"interceptor/#_1","text":"RequestInterceptor\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u7684\u8bf7\u6c42\u62e6\u622a\u5668, \u5728\u6bcf\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\u8be5\u62e6\u622a\u5668\u90fd\u4f1a\u88ab\u89e6\u53d1. \u4e00\u822c\u7528\u4e8e\u6dfb\u52a0\u5168\u5c40\u7684\u53c2\u6570\u548c\u8bf7\u6c42\u5934 \u521d\u59cb\u5316\u65f6\u6dfb\u52a0\u8bf7\u6c42\u62e6\u622a\u5668\u7684\u793a\u4f8b\u4ee3\u7801 NetConfig . init ( \"http://github.com/\" ) { setRequestInterceptor ( object : RequestInterceptor { override fun interceptor ( request : BaseRequest ) { request . param ( \"client\" , \"Net\" ) request . setHeader ( \"token\" , \"123456\" ) } }) } \u53ef\u4ee5\u770b\u5230 setRequestInterceptor \u662fset\u5f00\u5934. \u4ec5\u652f\u6301\u4e00\u4e2a\u8bf7\u6c42\u62e6\u622a\u5668, \u4e0d\u50cf addInterceptor \u652f\u6301\u591a\u4e2a\u8bf7\u6c42\u62e6\u622a\u5668","title":"\u8bf7\u6c42\u62e6\u622a\u5668"},{"location":"interval/","text":"\u8f6e\u5faa\u5668\u5c5e\u4e8e\u9879\u76ee\u4e2d\u5e38\u89c1\u9700\u6c42, \u672c\u5de5\u5177\u652f\u6301\u4ee5\u4e0b\u7279\u6027 \u6b63\u8ba1\u65f6 \u5012\u8ba1\u65f6 \u8ba1\u6570\u5668 \u652f\u6301\u5f00\u59cb/\u505c\u6b62/\u6682\u505c/\u7ee7\u7eed/\u91cd\u7f6e/\u5207\u6362\u5f00\u5173 \u6307\u5b9a\u8f6e\u5faa\u6b21\u6570/\u95f4\u9694 interval = Interval ( 100 , 1 , TimeUnit . SECONDS ). life ( this ) // \u81ea\u5b9a\u4e49\u8ba1\u6570\u5668\u4e2a\u6570\u7684\u8f6e\u5faa\u5668 \u4ec5\u8f6e\u5faa\u95f4\u9694 interval = Interval ( 1 , TimeUnit . SECONDS ) // \u6bcf\u79d2\u56de\u8c03\u4e00\u6b21, \u4e0d\u4f1a\u81ea\u52a8\u7ed3\u675f \u5012\u8ba1\u65f6 // \u5012\u8ba1\u65f6\u8f6e\u5faa\u5668, \u5f53[start]]\u6bd4[end]\u503c\u5927, \u4e14end\u4e0d\u7b49\u4e8e-1\u65f6, \u5373\u4e3a\u5012\u8ba1\u65f6 interval = Interval ( 1 , 1 , TimeUnit . SECONDS , 5 ). life ( this ) \u76d1\u542c\u8f6e\u5faa\u5668 interval . subscribe { tvFragment . text = it . toString () }. finish { tvFragment . text = \"\u8ba1\u65f6\u5b8c\u6210\" // \u6700\u540e\u4e00\u4f4d\u6570\u65f6\u540c\u65f6\u56de\u8c03 subscribe/finish }. start () Interval\u51fd\u6570 \u63cf\u8ff0 start \u5f00\u59cb\u8f6e\u5faa\u5668 stop \u505c\u6b62 cancel \u53d6\u6d88, \u533a\u522b\u4e8estop, \u6b64\u51fd\u6570\u6267\u884c\u540e\u5e76\u4e0d\u4f1a\u56de\u8c03finish pause \u6682\u505c resume \u7ee7\u7eed reset \u91cd\u7f6e switch \u5207\u6362\u5f00\u5173 subscribe \u6bcf\u6b21\u8ba1\u65f6\u90fd\u4f1a\u6267\u884c\u8be5\u56de\u8c03 finish \u5f53\u8ba1\u65f6\u5668\u5b8c\u6210\u65f6\u6267\u884c\u8be5\u56de\u8c03, \u6267\u884cstop\u540e\u4e5f\u4f1a\u56de\u8c03 \u81ea\u52a8\u53d6\u6d88(\u611f\u77e5\u751f\u547d\u5468\u671f) interval . life ( this ). subscribe { // \u6dfb\u52a0\u4e00\u4e2alife\u51fd\u6570\u5373\u53ef tvFragment . text = it . toString () } \u5b8c\u6574\u6e90\u7801","title":"\u8f6e\u5faa\u5668/\u5012\u8ba1\u65f6"},{"location":"kotlin-serialization/","text":"\u4eceNet3\u5f00\u59cb\u652f\u6301\u4f7f\u7528 kotlin-serialization (\u7b80\u79f0KS). \u6211\u613f\u79f0\u4ed6\u4e3a\u6700\u5f3a\u5e8f\u5217\u5316\u5e93 Net\u5b8c\u7f8e\u652f\u6301kotlin-serialization\u521b\u5efa\u8f6c\u6362\u5668 kotlin-serialization \u7279\u70b9 \u00b6 kotlin\u5b98\u65b9\u51fa\u54c1, \u63a8\u8350\u4f7f\u7528 kotlinx.serialization \u662fKotlin\u4e0a\u662f\u6700\u5b8c\u7f8e\u7684\u5e8f\u5217\u5316\u5de5\u5177 \u76f8\u5bf9\u5176\u4ed6\u89e3\u6790\u5e93\u4ed6\u89e3\u51b3\u6cdb\u578b\u64e6\u9664\u673a\u5236, \u652f\u6301\u4efb\u4f55\u6cdb\u578b, \u53ef\u76f4\u63a5\u8fd4\u56deMap/List/Pair... \u914d\u7f6e\u9009\u9879\u591a \u652f\u6301\u52a8\u6001\u89e3\u6790 \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668 \u652f\u6301ProtoBuf/CBOR/JSON\u7b49\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u5e8f\u5217\u5316 \u53ef\u4ee5\u914d\u7f6e\u6210\u540e\u7aef\u5982\u679c\u8fd4\u56denull\u5219\u4f7f\u7528\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c(\u975e\u7a7a\u8986\u76d6) \u542f\u7528\u5bbd\u677e\u6a21\u5f0f, \u5141\u8bb8\u914d\u7f6e\u6210\u540e\u7aef\u548c\u524d\u7aef\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u662f\u5426\u4e25\u82db\u5339\u914d\u5bf9\u5e94 \u6ce8\u610fKs\u7684\u6570\u636e\u6a21\u578b\u7c7b\u90fd\u8981\u6c42\u4f7f\u7528\u6ce8\u89e3 @Serializable . \u4e00\u822c\u5f00\u53d1\u4e2d\u90fd\u662f\u4f7f\u7528 \u63d2\u4ef6\u751f\u6210\u6570\u636e\u6a21\u578b , \u6240\u4ee5\u8fd9\u5e76\u4e0d\u4f1a\u589e\u52a0\u5de5\u4f5c\u91cf. \u5373\u4f7f\u624b\u5199\u4e5f\u53ea\u662f\u4e00\u4e2a\u6ce8\u89e3, \u4f46\u662f\u53ef\u4ee5\u5e26\u6765\u9ed8\u8ba4\u503c\u652f\u6301\u548c\u66f4\u5b89\u5168\u7684\u6570\u636e\u89e3\u6790 \u914d\u7f6e\u8f6c\u6362\u5668 \u00b6 \u8fd9\u91cc\u4f7f\u7528Demo\u4e2d\u7684 SerializationConvert \u4f5c\u6f14\u793a. \u5982\u679c\u4f60\u4e1a\u52a1\u6709\u7279\u6b8a\u9700\u8981\u53ef\u4ee5\u590d\u5236Demo\u4e2d\u7684\u8f6c\u6362\u5668\u4ee3\u7801\u7a0d\u52a0\u4fee\u6539 \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"http://google.com/\" ) { setConverter ( SerializationConvert ()) // ... \u5176\u4ed6\u914d\u7f6e } \u5355\u4f8b\u914d\u7f6e val userList = Get < List < UserModel >> ( \"list\" ) { converter = SerializationConvert () // \u5355\u4f8b\u8f6c\u6362\u5668, \u6b64\u65f6\u4f1a\u5ffd\u7565\u5168\u5c40\u8f6c\u6362\u5668 }. await () \u4f7f\u7528 \u00b6 scopeNetLife { // \u8fd9\u91cc\u540e\u7aef\u76f4\u63a5\u8fd4\u56de\u7684Json\u6570\u7ec4 val userList = Get < List < UserModel >> ( \"list\" ) { converter = SerializationConvert () }. await () tvFragment . text = userList [ 0 ] . name } @Serializable data class UserModel ( var name : String , var age : Int , var height : Int ) \u5177\u4f53\u89e3\u6790\u8fd4\u56de\u7684JSON\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u8bf7\u5728\u8f6c\u6362\u5668\u91cc\u9762\u81ea\u5b9a \u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3KS, \u8bf7\u9605\u8bfb\u6587\u7ae0: Kotlin\u6700\u5f3a\u89e3\u6790\u5e93 - kotlin-serialization","title":"kotlin-serialization"},{"location":"kotlin-serialization/#kotlin-serialization","text":"kotlin\u5b98\u65b9\u51fa\u54c1, \u63a8\u8350\u4f7f\u7528 kotlinx.serialization \u662fKotlin\u4e0a\u662f\u6700\u5b8c\u7f8e\u7684\u5e8f\u5217\u5316\u5de5\u5177 \u76f8\u5bf9\u5176\u4ed6\u89e3\u6790\u5e93\u4ed6\u89e3\u51b3\u6cdb\u578b\u64e6\u9664\u673a\u5236, \u652f\u6301\u4efb\u4f55\u6cdb\u578b, \u53ef\u76f4\u63a5\u8fd4\u56deMap/List/Pair... \u914d\u7f6e\u9009\u9879\u591a \u652f\u6301\u52a8\u6001\u89e3\u6790 \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668 \u652f\u6301ProtoBuf/CBOR/JSON\u7b49\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u5e8f\u5217\u5316 \u53ef\u4ee5\u914d\u7f6e\u6210\u540e\u7aef\u5982\u679c\u8fd4\u56denull\u5219\u4f7f\u7528\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c(\u975e\u7a7a\u8986\u76d6) \u542f\u7528\u5bbd\u677e\u6a21\u5f0f, \u5141\u8bb8\u914d\u7f6e\u6210\u540e\u7aef\u548c\u524d\u7aef\u6570\u636e\u6a21\u578b\u5b57\u6bb5\u662f\u5426\u4e25\u82db\u5339\u914d\u5bf9\u5e94 \u6ce8\u610fKs\u7684\u6570\u636e\u6a21\u578b\u7c7b\u90fd\u8981\u6c42\u4f7f\u7528\u6ce8\u89e3 @Serializable . \u4e00\u822c\u5f00\u53d1\u4e2d\u90fd\u662f\u4f7f\u7528 \u63d2\u4ef6\u751f\u6210\u6570\u636e\u6a21\u578b , \u6240\u4ee5\u8fd9\u5e76\u4e0d\u4f1a\u589e\u52a0\u5de5\u4f5c\u91cf. \u5373\u4f7f\u624b\u5199\u4e5f\u53ea\u662f\u4e00\u4e2a\u6ce8\u89e3, \u4f46\u662f\u53ef\u4ee5\u5e26\u6765\u9ed8\u8ba4\u503c\u652f\u6301\u548c\u66f4\u5b89\u5168\u7684\u6570\u636e\u89e3\u6790","title":"kotlin-serialization \u7279\u70b9"},{"location":"kotlin-serialization/#_1","text":"\u8fd9\u91cc\u4f7f\u7528Demo\u4e2d\u7684 SerializationConvert \u4f5c\u6f14\u793a. \u5982\u679c\u4f60\u4e1a\u52a1\u6709\u7279\u6b8a\u9700\u8981\u53ef\u4ee5\u590d\u5236Demo\u4e2d\u7684\u8f6c\u6362\u5668\u4ee3\u7801\u7a0d\u52a0\u4fee\u6539 \u5168\u5c40\u914d\u7f6e NetConfig . init ( \"http://google.com/\" ) { setConverter ( SerializationConvert ()) // ... \u5176\u4ed6\u914d\u7f6e } \u5355\u4f8b\u914d\u7f6e val userList = Get < List < UserModel >> ( \"list\" ) { converter = SerializationConvert () // \u5355\u4f8b\u8f6c\u6362\u5668, \u6b64\u65f6\u4f1a\u5ffd\u7565\u5168\u5c40\u8f6c\u6362\u5668 }. await ()","title":"\u914d\u7f6e\u8f6c\u6362\u5668"},{"location":"kotlin-serialization/#_2","text":"scopeNetLife { // \u8fd9\u91cc\u540e\u7aef\u76f4\u63a5\u8fd4\u56de\u7684Json\u6570\u7ec4 val userList = Get < List < UserModel >> ( \"list\" ) { converter = SerializationConvert () }. await () tvFragment . text = userList [ 0 ] . name } @Serializable data class UserModel ( var name : String , var age : Int , var height : Int ) \u5177\u4f53\u89e3\u6790\u8fd4\u56de\u7684JSON\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u8bf7\u5728\u8f6c\u6362\u5668\u91cc\u9762\u81ea\u5b9a \u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3KS, \u8bf7\u9605\u8bfb\u6587\u7ae0: Kotlin\u6700\u5f3a\u89e3\u6790\u5e93 - kotlin-serialization","title":"\u4f7f\u7528"},{"location":"log-recorder/","text":"\u4e00\u822c\u7f51\u7edc\u8bf7\u6c42\u90fd\u4f1a\u9009\u62e9\u5728LogCat\u6253\u5370\u7f51\u7edc\u65e5\u5fd7\u4fe1\u606f, \u4f46LogCat\u65e5\u5fd7\u53ef\u8bfb\u6027\u5dee, \u4e14\u4e0d\u5b8c\u6574 Net\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6848, \u5404\u6709\u4f18\u52a3 \u4f7f\u7528AndroidStudio\u7684 Profiler\u76d1\u542c\u7f51\u7edc (\u63a8\u8350) \u53ef\u4ee5\u67e5\u770b\u9879\u76ee\u6240\u6709OkHttp\u5c42\u7684\u7f51\u7edc\u8bf7\u6c42\u65e5\u5fd7 \u4f46\u662f\u67e5\u770b\u53ef\u80fd\u4e0d\u592a\u65b9\u4fbf, \u56e0\u4e3a\u7f51\u7edc\u8bf7\u6c42\u662f\u52a8\u6001\u7684\u66f2\u7ebf\u56fe \u542f\u52a8\u5e94\u7528\u7acb\u523b\u89e6\u53d1\u7684\u8bf7\u6c42\u7684\u53ef\u80fd\u65e0\u6cd5\u6355\u6349\u5230 \u5b89\u88c5 Okhttp Profiler \u63d2\u4ef6, \u4e14\u6dfb\u52a0Net\u7684 LogRecordInterceptor \u62e6\u622a\u5668 \u5217\u8868\u663e\u793a\u8bf7\u6c42, \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65e5\u5fd7\u62e6\u622a\u5668\u624d\u652f\u6301\u663e\u793a\u65e5\u5fd7 \u5b9e\u9645\u4e0a\u662f\u63d2\u4ef6\u6355\u83b7logCat\u751f\u6210\u7684\u65e5\u5fd7, \u7ebf\u4e0a\u73af\u5883\u9700\u8981\u5173\u95ed \u63d2\u4ef6\u6709\u70b9bug, \u6bd4\u5982\u5ef6\u8fdf\u7b2c\u4e00\u6b21\u9700\u8981\u53cd\u590d\u6253\u5f00\u4e0b, \u53c2\u6570\u8bf7\u6c42\u5934\u91cd\u590d\u663e\u793a \u6dfb\u52a0\u65e5\u5fd7\u62e6\u622a\u5668 \u00b6 NetConfig . init ( \"http://github.com/\" ) { addInterceptor ( LogRecordInterceptor ( BuildConfig . DEBUG )) } \u6784\u9020\u53c2\u6570 \u63cf\u8ff0 enabled \u662f\u5426\u542f\u7528\u65e5\u5fd7 requestByteCount \u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\u6700\u5927\u5b57\u8282\u6570, \u9ed8\u8ba41MB responseByteCount \u54cd\u5e94\u65e5\u5fd7\u4fe1\u606f\u6700\u5927\u5b57\u8282\u6570, \u9ed8\u8ba44MB \u8fd9\u6837\u4f1a\u53ef\u4ee5\u5728LogCat\u770b\u5230\u65e5\u5fd7\u8f93\u51fa, \u4f46\u662f\u6211\u4eec\u8981\u4f7f\u7528\u63d2\u4ef6\u9884\u89c8\u5c31\u9700\u8981\u7b2c 2 \u6b65 \u5b89\u88c5\u63d2\u4ef6 \u00b6 1. \u5b89\u88c5\u63d2\u4ef6 \u00b6 \u5728\u63d2\u4ef6\u5e02\u573a\u641c\u7d22: \" Okhttp Profiler \" 2. \u6253\u5f00\u7a97\u53e3 \u00b6 \u5b89\u88c5\u4ee5\u540e\u5728AndroidStudio\u53f3\u4e0b\u89d2\u6253\u5f00\u7a97\u53e3 \u8bf7\u5728\u6bcf\u6b21\u4f7f\u7528\u524d\u90fd\u5148\u6253\u5f00\u63d2\u4ef6\u7a97\u53e3, \u5982\u679c\u6709\u5ef6\u8fdf\u6216\u8005\u4e0d\u663e\u793a\u5c31\u53cd\u590d\u6253\u5f00\u4e0b\u7a97\u53e3 \u4f7f\u7528\u6548\u679c \u6807\u9898 \u63cf\u8ff0 Device \u9009\u62e9\u8c03\u8bd5\u8bbe\u5907 Process \u9009\u62e9\u5c55\u793a\u8bb0\u5f55\u7684\u8fdb\u7a0b \u6293\u53d6 \u4e00\u822c\u60c5\u51b5\u4e0d\u9700\u8981\u4f7f\u7528, \u5047\u8bbe\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0\u8bf7\u70b9\u51fb\u56fe\u6807 \u6e05\u7a7a \u6e05\u7a7a\u8bb0\u5f55 \u5355\u4f8b\u7981\u7528\u65e5\u5fd7 \u00b6 scopeNetLife { tvFragment . text = Get < String > ( \"api\" ) { setLogRecord ( false ) // \u4e3a\u5f53\u524d\u8bf7\u6c42\u7981\u7528\u65e5\u5fd7\u8bb0\u5f55 }. await () } \u81ea\u5b9a\u4e49\u65e5\u5fd7(\u89e3\u5bc6) \u00b6 \u901a\u8fc7\u7ee7\u627f LogRecordInterceptor \u53ef\u4ee5\u8986\u5199\u51fd\u6570\u81ea\u5b9a\u4e49\u81ea\u5df1\u7684\u65e5\u5fd7\u8f93\u51fa\u903b\u8f91 \u5982\u679c\u4f60\u7684\u8bf7\u6c42\u4f53\u662f\u88ab\u52a0\u5bc6\u7684\u5185\u5bb9, \u4f60\u53ef\u4ee5\u901a\u8fc7\u8986\u5199 requestString \u51fd\u6570\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u8bf7\u6c42\u4fe1\u606f \u5982\u679c\u4f60\u7684\u54cd\u5e94\u4f53\u662f\u88ab\u52a0\u5bc6\u7684\u5185\u5bb9, \u4f60\u53ef\u4ee5\u901a\u8fc7\u8986\u5199 responseString \u51fd\u6570\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u54cd\u5e94\u4fe1\u606f \u7136\u540e\u521d\u59cb\u5316\u65f6\u6dfb\u52a0\u81ea\u5df1\u5b9e\u73b0\u62e6\u622a\u5668\u5373\u53ef NetConfig . init ( \"http://github.com/\" ) { addInterceptor ( MyLogRecordInterceptor ( BuildConfig . DEBUG )) } LogCat\u8fc7\u6ee4 \u00b6 \u5b9e\u9645\u4e0aNet\u7684\u7f51\u7edc\u65e5\u5fd7\u8fd8\u662f\u4f1a\u88ab\u6253\u5370\u5230LogCat, \u7136\u540e\u901a\u8fc7\u63d2\u4ef6\u6355\u6349\u663e\u793a. \u5982\u679c\u4e0d\u60f3LogCat\u7684\u5197\u4f59\u65e5\u5fd7\u5f71\u54cd\u67e5\u770b\u5176\u5b83\u65e5\u5fd7, \u53ef\u4ee5\u901a\u8fc7AndroidStudio\u7684\u529f\u80fd\u6298\u53e0\u9690\u85cf, \u6dfb\u52a0\u4e00\u4e2a OKPREL_ \u8fc7\u6ee4\u5b57\u6bb5\u5373\u53ef \u5176\u4ed6\u7f51\u7edc\u6846\u67b6 \u00b6 \u53ef\u80fd\u4f60\u9879\u76ee\u4e2d\u8fd8\u6b8b\u7559\u5176\u4ed6\u7f51\u7edc\u6846\u67b6, \u4e5f\u53ef\u4ee5\u4f7f\u7528Net\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668 LogRecorder \u6765\u4e3a\u5176\u4ed6\u6846\u67b6\u6253\u5370\u65e5\u5fd7\u4fe1\u606f \u51fd\u6570 \u63cf\u8ff0 generateId \u4ea7\u751f\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7b26, \u7528\u4e8e\u5224\u65ad\u4e3a\u540c\u4e00\u7f51\u7edc\u8bf7\u6c42 recordRequest \u8bb0\u5f55\u8bf7\u6c42\u4fe1\u606f recordResponse \u8bb0\u5f55\u54cd\u5e94\u4fe1\u606f recordException \u8bb0\u5f55\u8bf7\u6c42\u5f02\u5e38\u4fe1\u606f","title":"\u65e5\u5fd7\u62e6\u622a\u5668"},{"location":"log-recorder/#_1","text":"NetConfig . init ( \"http://github.com/\" ) { addInterceptor ( LogRecordInterceptor ( BuildConfig . DEBUG )) } \u6784\u9020\u53c2\u6570 \u63cf\u8ff0 enabled \u662f\u5426\u542f\u7528\u65e5\u5fd7 requestByteCount \u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\u6700\u5927\u5b57\u8282\u6570, \u9ed8\u8ba41MB responseByteCount \u54cd\u5e94\u65e5\u5fd7\u4fe1\u606f\u6700\u5927\u5b57\u8282\u6570, \u9ed8\u8ba44MB \u8fd9\u6837\u4f1a\u53ef\u4ee5\u5728LogCat\u770b\u5230\u65e5\u5fd7\u8f93\u51fa, \u4f46\u662f\u6211\u4eec\u8981\u4f7f\u7528\u63d2\u4ef6\u9884\u89c8\u5c31\u9700\u8981\u7b2c 2 \u6b65","title":"\u6dfb\u52a0\u65e5\u5fd7\u62e6\u622a\u5668"},{"location":"log-recorder/#_2","text":"","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"log-recorder/#1","text":"\u5728\u63d2\u4ef6\u5e02\u573a\u641c\u7d22: \" Okhttp Profiler \"","title":"1. \u5b89\u88c5\u63d2\u4ef6"},{"location":"log-recorder/#2","text":"\u5b89\u88c5\u4ee5\u540e\u5728AndroidStudio\u53f3\u4e0b\u89d2\u6253\u5f00\u7a97\u53e3 \u8bf7\u5728\u6bcf\u6b21\u4f7f\u7528\u524d\u90fd\u5148\u6253\u5f00\u63d2\u4ef6\u7a97\u53e3, \u5982\u679c\u6709\u5ef6\u8fdf\u6216\u8005\u4e0d\u663e\u793a\u5c31\u53cd\u590d\u6253\u5f00\u4e0b\u7a97\u53e3 \u4f7f\u7528\u6548\u679c \u6807\u9898 \u63cf\u8ff0 Device \u9009\u62e9\u8c03\u8bd5\u8bbe\u5907 Process \u9009\u62e9\u5c55\u793a\u8bb0\u5f55\u7684\u8fdb\u7a0b \u6293\u53d6 \u4e00\u822c\u60c5\u51b5\u4e0d\u9700\u8981\u4f7f\u7528, \u5047\u8bbe\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0\u8bf7\u70b9\u51fb\u56fe\u6807 \u6e05\u7a7a \u6e05\u7a7a\u8bb0\u5f55","title":"2. \u6253\u5f00\u7a97\u53e3"},{"location":"log-recorder/#_3","text":"scopeNetLife { tvFragment . text = Get < String > ( \"api\" ) { setLogRecord ( false ) // \u4e3a\u5f53\u524d\u8bf7\u6c42\u7981\u7528\u65e5\u5fd7\u8bb0\u5f55 }. await () }","title":"\u5355\u4f8b\u7981\u7528\u65e5\u5fd7"},{"location":"log-recorder/#_4","text":"\u901a\u8fc7\u7ee7\u627f LogRecordInterceptor \u53ef\u4ee5\u8986\u5199\u51fd\u6570\u81ea\u5b9a\u4e49\u81ea\u5df1\u7684\u65e5\u5fd7\u8f93\u51fa\u903b\u8f91 \u5982\u679c\u4f60\u7684\u8bf7\u6c42\u4f53\u662f\u88ab\u52a0\u5bc6\u7684\u5185\u5bb9, \u4f60\u53ef\u4ee5\u901a\u8fc7\u8986\u5199 requestString \u51fd\u6570\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u8bf7\u6c42\u4fe1\u606f \u5982\u679c\u4f60\u7684\u54cd\u5e94\u4f53\u662f\u88ab\u52a0\u5bc6\u7684\u5185\u5bb9, \u4f60\u53ef\u4ee5\u901a\u8fc7\u8986\u5199 responseString \u51fd\u6570\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u54cd\u5e94\u4fe1\u606f \u7136\u540e\u521d\u59cb\u5316\u65f6\u6dfb\u52a0\u81ea\u5df1\u5b9e\u73b0\u62e6\u622a\u5668\u5373\u53ef NetConfig . init ( \"http://github.com/\" ) { addInterceptor ( MyLogRecordInterceptor ( BuildConfig . DEBUG )) }","title":"\u81ea\u5b9a\u4e49\u65e5\u5fd7(\u89e3\u5bc6)"},{"location":"log-recorder/#logcat","text":"\u5b9e\u9645\u4e0aNet\u7684\u7f51\u7edc\u65e5\u5fd7\u8fd8\u662f\u4f1a\u88ab\u6253\u5370\u5230LogCat, \u7136\u540e\u901a\u8fc7\u63d2\u4ef6\u6355\u6349\u663e\u793a. \u5982\u679c\u4e0d\u60f3LogCat\u7684\u5197\u4f59\u65e5\u5fd7\u5f71\u54cd\u67e5\u770b\u5176\u5b83\u65e5\u5fd7, \u53ef\u4ee5\u901a\u8fc7AndroidStudio\u7684\u529f\u80fd\u6298\u53e0\u9690\u85cf, \u6dfb\u52a0\u4e00\u4e2a OKPREL_ \u8fc7\u6ee4\u5b57\u6bb5\u5373\u53ef","title":"LogCat\u8fc7\u6ee4"},{"location":"log-recorder/#_5","text":"\u53ef\u80fd\u4f60\u9879\u76ee\u4e2d\u8fd8\u6b8b\u7559\u5176\u4ed6\u7f51\u7edc\u6846\u67b6, \u4e5f\u53ef\u4ee5\u4f7f\u7528Net\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668 LogRecorder \u6765\u4e3a\u5176\u4ed6\u6846\u67b6\u6253\u5370\u65e5\u5fd7\u4fe1\u606f \u51fd\u6570 \u63cf\u8ff0 generateId \u4ea7\u751f\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7b26, \u7528\u4e8e\u5224\u65ad\u4e3a\u540c\u4e00\u7f51\u7edc\u8bf7\u6c42 recordRequest \u8bb0\u5f55\u8bf7\u6c42\u4fe1\u606f recordResponse \u8bb0\u5f55\u54cd\u5e94\u4fe1\u606f recordException \u8bb0\u5f55\u8bf7\u6c42\u5f02\u5e38\u4fe1\u606f","title":"\u5176\u4ed6\u7f51\u7edc\u6846\u67b6"},{"location":"model-generate/","text":"\u5728\u8bf7\u6c42\u7f51\u7edc\u6570\u636e\u8fc7\u7a0b\u4e2d\u4f1a\u9700\u8981\u7f16\u5199\u5927\u91cf\u7684\u6570\u636e\u6a21\u578b\u5bf9\u8c61, \u6620\u5c04\u540e\u7aef\u8fd4\u56de\u7684\u6570\u636e\u521b\u5efa\u6570\u636e\u5bf9\u8c61. \u56e0\u4e3a\u6211\u4eec\u4e1a\u52a1\u903b\u8f91\u4e2d\u4e00\u822c\u662f\u76f4\u63a5\u6570\u636e\u5bf9\u8c61\u66f4\u4e3a\u65b9\u4fbf \u521b\u5efa\u6570\u636e\u6a21\u578b\u6211\u4e0d\u63a8\u8350\u624b\u5199, \u9519\u8bef\u7387\u9ad8\u4e14\u4e0d\u65b9\u4fbf. \u6211\u63a8\u8350\u4f7f\u7528 JSON To Kotlin Class \u63d2\u4ef6\u81ea\u52a8\u751f\u6210 \u5b89\u88c5\u63d2\u4ef6 \u00b6 \u5728Plugins\u91cc\u9762\u641c\u7d22kotlin\u5173\u952e\u8bcd\u4e0b\u8f7d\u5b89\u88c5 \u4f7f\u7528\u63d2\u4ef6 \u00b6 \u9009\u4e2d\u5206\u5305\u540e, \u4f7f\u7528\u5feb\u6377\u952e\u6216\u8005\u9f20\u6807\u53f3\u952e\u6253\u5f00\u586b\u5199Json\u754c\u9762 \u6dfb\u52a0Json\u7136\u540e\u70b9\u51fb Generate \u751f\u6210 \u7136\u540e\u5c31\u4f1a\u5728\u4f60\u9009\u4e2d\u7684\u5206\u5305\u4e0b\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6a21\u578b\u7c7b\u4e86 \u9ad8\u7ea7\u8bbe\u7f6e \u00b6 \u70b9\u51fb Advanced \u6253\u5f00\u8bbe\u7f6e\u754c\u9762 \u53ef\u7a7a\u9009\u9879 \u00b6 \u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e Keyword \u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\u7684\u5b57\u6bb5\u662f Val\u8fd8\u662fVar Type \u5b57\u6bb5\u662f\u5426\u662f\u53ef\u7a7a\u7c7b\u578b, \u6700\u540e\u9009\u9879\u8868\u793a\u6839\u636eJson\u7684\u503c\u5224\u65ad\u662f\u5426\u53ef\u7a7a \u9ed8\u8ba4\u503c\u7684\u7b56\u7565, \u65e0\u6cd5\u9009\u62e9\u4e0d\u4ecb\u7ecd \u4f7f\u7528\u7684\u6846\u67b6 \u00b6 \u751f\u6210\u6570\u636e\u6a21\u578b\u65f6\u4f1a\u517c\u5bb9\u4f60\u4f7f\u7528\u7684\u6846\u67b6, \u4f8b\u5982Moshi\u548cKs\u53ef\u80fd\u9700\u8981\u6ce8\u89e3, \u7136\u540e\u4f1a\u81ea\u52a8\u751f\u6210SerialName\u8fd9\u4e9b\u540d\u79f0\u6ce8\u89e3 \u5176\u4ed6 \u00b6 \u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e \u662f\u5426\u4f7f\u7528\u6ce8\u91ca, \u65e2\u4f1a\u5c06Json\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6ce8\u91ca\u4fdd\u7559\u5728\u6570\u636e\u6a21\u578b\u7c7b\u4e2d \u6839\u636e\u5b57\u6bcd\u6392\u5e8f\u6570\u636e\u6a21\u578b\u7684\u5b57\u6bb5 \u4f7f\u7528\u5185\u90e8\u7c7b. \u4f8b\u5982Json\u4e2d\u7684Json\u5bf9\u8c61\u4f1a\u4f5c\u4e3a\u5185\u90e8\u7c7b\u88ab\u521b\u5efa\u5728\u6570\u636e\u6a21\u578b\u7c7b\u4e2d (\u63a8\u8350\u5f00\u542f, \u4fdd\u6301\u9ad8\u5185\u805a\u4f4e\u8026\u5408) \u5982\u679cJson\u5bf9\u8c61\u7684\u5b57\u6bb5\u90fd\u662f\u539f\u59cb\u7c7b\u578b\u5219\u4f7f\u7528Map\u6765\u8868\u793a \u53ea\u5728\u9700\u8981\u65f6\u521b\u5efa\u6ce8\u89e3 \u81ea\u52a8\u9a8c\u8bc1Json\u6b63\u786e\u6027(\u5728\u586b\u5199\u65f6) Json\u683c\u5f0f\u5316\u65f6\u4f7f\u7528\u7684\u7a7a\u683c\u6570\u91cf \u6307\u5b9a\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u7236\u7c7b\u6a21\u677f(\u65e2\u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\u90fd\u4f1a\u7ee7\u627f\u8be5\u7c7b) \u6269\u5c55 \u00b6 \u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e \u6dfb\u52a0@Keep\u6ce8\u89e3, \u4e3a\u9632\u6b62\u88ab\u4ee3\u7801\u6df7\u6dc6 \u6ce8\u89e3\u548c\u5b57\u6bb5\u5904\u4e8e\u540c\u4e00\u884c, \u4fbf\u4e8e\u7f8e\u89c2 \u4f7f\u7528Parcelable\u5e8f\u5217\u5316 \u4e3a\u5b57\u6bb5\u6dfb\u52a0\u524d\u7f00/\u540e\u7f00 \u4e3a\u6570\u636e\u6a21\u578b\u7c7b\u6dfb\u52a0\u524d\u7f00/\u540e\u7f00","title":"\u6570\u636e\u6a21\u578b\u751f\u6210\u63d2\u4ef6"},{"location":"model-generate/#_1","text":"\u5728Plugins\u91cc\u9762\u641c\u7d22kotlin\u5173\u952e\u8bcd\u4e0b\u8f7d\u5b89\u88c5","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"model-generate/#_2","text":"\u9009\u4e2d\u5206\u5305\u540e, \u4f7f\u7528\u5feb\u6377\u952e\u6216\u8005\u9f20\u6807\u53f3\u952e\u6253\u5f00\u586b\u5199Json\u754c\u9762 \u6dfb\u52a0Json\u7136\u540e\u70b9\u51fb Generate \u751f\u6210 \u7136\u540e\u5c31\u4f1a\u5728\u4f60\u9009\u4e2d\u7684\u5206\u5305\u4e0b\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6a21\u578b\u7c7b\u4e86","title":"\u4f7f\u7528\u63d2\u4ef6"},{"location":"model-generate/#_3","text":"\u70b9\u51fb Advanced \u6253\u5f00\u8bbe\u7f6e\u754c\u9762","title":"\u9ad8\u7ea7\u8bbe\u7f6e"},{"location":"model-generate/#_4","text":"\u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e Keyword \u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\u7684\u5b57\u6bb5\u662f Val\u8fd8\u662fVar Type \u5b57\u6bb5\u662f\u5426\u662f\u53ef\u7a7a\u7c7b\u578b, \u6700\u540e\u9009\u9879\u8868\u793a\u6839\u636eJson\u7684\u503c\u5224\u65ad\u662f\u5426\u53ef\u7a7a \u9ed8\u8ba4\u503c\u7684\u7b56\u7565, \u65e0\u6cd5\u9009\u62e9\u4e0d\u4ecb\u7ecd","title":"\u53ef\u7a7a\u9009\u9879"},{"location":"model-generate/#_5","text":"\u751f\u6210\u6570\u636e\u6a21\u578b\u65f6\u4f1a\u517c\u5bb9\u4f60\u4f7f\u7528\u7684\u6846\u67b6, \u4f8b\u5982Moshi\u548cKs\u53ef\u80fd\u9700\u8981\u6ce8\u89e3, \u7136\u540e\u4f1a\u81ea\u52a8\u751f\u6210SerialName\u8fd9\u4e9b\u540d\u79f0\u6ce8\u89e3","title":"\u4f7f\u7528\u7684\u6846\u67b6"},{"location":"model-generate/#_6","text":"\u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e \u662f\u5426\u4f7f\u7528\u6ce8\u91ca, \u65e2\u4f1a\u5c06Json\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6ce8\u91ca\u4fdd\u7559\u5728\u6570\u636e\u6a21\u578b\u7c7b\u4e2d \u6839\u636e\u5b57\u6bcd\u6392\u5e8f\u6570\u636e\u6a21\u578b\u7684\u5b57\u6bb5 \u4f7f\u7528\u5185\u90e8\u7c7b. \u4f8b\u5982Json\u4e2d\u7684Json\u5bf9\u8c61\u4f1a\u4f5c\u4e3a\u5185\u90e8\u7c7b\u88ab\u521b\u5efa\u5728\u6570\u636e\u6a21\u578b\u7c7b\u4e2d (\u63a8\u8350\u5f00\u542f, \u4fdd\u6301\u9ad8\u5185\u805a\u4f4e\u8026\u5408) \u5982\u679cJson\u5bf9\u8c61\u7684\u5b57\u6bb5\u90fd\u662f\u539f\u59cb\u7c7b\u578b\u5219\u4f7f\u7528Map\u6765\u8868\u793a \u53ea\u5728\u9700\u8981\u65f6\u521b\u5efa\u6ce8\u89e3 \u81ea\u52a8\u9a8c\u8bc1Json\u6b63\u786e\u6027(\u5728\u586b\u5199\u65f6) Json\u683c\u5f0f\u5316\u65f6\u4f7f\u7528\u7684\u7a7a\u683c\u6570\u91cf \u6307\u5b9a\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u7236\u7c7b\u6a21\u677f(\u65e2\u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\u90fd\u4f1a\u7ee7\u627f\u8be5\u7c7b)","title":"\u5176\u4ed6"},{"location":"model-generate/#_7","text":"\u622a\u56fe\u5373\u4e3a\u6211\u7684\u63a8\u8350\u914d\u7f6e \u6dfb\u52a0@Keep\u6ce8\u89e3, \u4e3a\u9632\u6b62\u88ab\u4ee3\u7801\u6df7\u6dc6 \u6ce8\u89e3\u548c\u5b57\u6bb5\u5904\u4e8e\u540c\u4e00\u884c, \u4fbf\u4e8e\u7f8e\u89c2 \u4f7f\u7528Parcelable\u5e8f\u5217\u5316 \u4e3a\u5b57\u6bb5\u6dfb\u52a0\u524d\u7f00/\u540e\u7f00 \u4e3a\u6570\u636e\u6a21\u578b\u7c7b\u6dfb\u52a0\u524d\u7f00/\u540e\u7f00","title":"\u6269\u5c55"},{"location":"okhttp-client/","text":"\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u5b58\u5728\u4e00\u4e2a\u5ba2\u6237\u7aef\u5bf9\u8c61, \u65e2OkHttpClient Net\u5728\u5168\u5c40\u7ef4\u62a4\u4e86\u4e00\u4e2aOkHttpClient\u5bf9\u8c61, \u5728NetConfig.okHttpClient\u7684\u5b57\u6bb5 object NetConfig { var okHttpClient : OkHttpClient } \u5f53\u7136\u4e5f\u652f\u6301\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u53d1\u8d77\u8bf7\u6c42(\u914d\u7f6e\u533a\u522b\u4e8e\u5168\u5c40\u5ba2\u6237\u7aef) \u5168\u5c40OkHttpClient \u00b6 NetConfig . init ( \"http://github.com/\" ) { // \u6b64\u5904this\u5373\u4e3aOkHttpClient.Builder } \u5355\u4f8bOkHttpClient \u00b6 \u6bcf\u4e2a\u8bf7\u6c42\u53ef\u80fd\u5b58\u5728\u72ec\u7acb\u7684OkHttpClient\u914d\u7f6e, \u6211\u4eec\u53ef\u4ee5\u5355\u4f8b\u914d\u7f6e\u5ba2\u6237\u7aef\u9009\u9879 \u5728\u5168\u5c40\u7684OkHttpClient\u914d\u7f6e\u57fa\u7840\u4e0b\u4fee\u6539 scopeNetLife { tv_response . text = Get < String > ( \"https://github.com/\" ) { setClient { // \u6b64\u5904this\u5373\u4e3aOkHttpClient.Builder trustCertificate () } }. await () } \u5b8c\u5168\u91cd\u65b0\u521b\u5efa\u4e00\u4e2aOkHttpClient, \u4e00\u822c\u60c5\u51b5\u4e0d\u63a8\u8350\u91cd\u65b0\u521b\u5efa\u4e00\u4e2aOkHttpClient, \u56e0\u4e3a\u4e00\u4e2a\u65b0\u7684OkHttpClient\u4f1a\u91cd\u65b0\u521b\u5efa\u7ebf\u7a0b\u6c60/\u8fde\u63a5\u6c60\u7b49\u9020\u6210\u5185\u5b58\u6d88\u8017\u7b49 scopeNetLife { tv_response . text = Get < String > ( \"https://github.com/\" ) { okHttpClient = OkHttpClient . Builder (). build () }. await () }","title":"OkHttpClient"},{"location":"okhttp-client/#okhttpclient","text":"NetConfig . init ( \"http://github.com/\" ) { // \u6b64\u5904this\u5373\u4e3aOkHttpClient.Builder }","title":"\u5168\u5c40OkHttpClient"},{"location":"okhttp-client/#okhttpclient_1","text":"\u6bcf\u4e2a\u8bf7\u6c42\u53ef\u80fd\u5b58\u5728\u72ec\u7acb\u7684OkHttpClient\u914d\u7f6e, \u6211\u4eec\u53ef\u4ee5\u5355\u4f8b\u914d\u7f6e\u5ba2\u6237\u7aef\u9009\u9879 \u5728\u5168\u5c40\u7684OkHttpClient\u914d\u7f6e\u57fa\u7840\u4e0b\u4fee\u6539 scopeNetLife { tv_response . text = Get < String > ( \"https://github.com/\" ) { setClient { // \u6b64\u5904this\u5373\u4e3aOkHttpClient.Builder trustCertificate () } }. await () } \u5b8c\u5168\u91cd\u65b0\u521b\u5efa\u4e00\u4e2aOkHttpClient, \u4e00\u822c\u60c5\u51b5\u4e0d\u63a8\u8350\u91cd\u65b0\u521b\u5efa\u4e00\u4e2aOkHttpClient, \u56e0\u4e3a\u4e00\u4e2a\u65b0\u7684OkHttpClient\u4f1a\u91cd\u65b0\u521b\u5efa\u7ebf\u7a0b\u6c60/\u8fde\u63a5\u6c60\u7b49\u9020\u6210\u5185\u5b58\u6d88\u8017\u7b49 scopeNetLife { tv_response . text = Get < String > ( \"https://github.com/\" ) { okHttpClient = OkHttpClient . Builder (). build () }. await () }","title":"\u5355\u4f8bOkHttpClient"},{"location":"progress/","text":"Net\u652f\u6301\u4e0a\u4f20/\u4e0b\u8f7d\u7684\u8fdb\u5ea6\u76d1\u542c, \u4e14\u5177\u5907\u5b8c\u5584\u7684\u8fdb\u5ea6\u4fe1\u606f \u4e0a\u4f20\u8fdb\u5ea6\u76d1\u542c \u00b6 scopeNetLife { Post < String > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { param ( \"file\" , assetsFile ()) addUploadListener ( object : ProgressListener () { override fun onProgress ( p : Progress ) { seek . post { seek . progress = p . progress () tvProgress . text = \"\u4e0a\u4f20\u8fdb\u5ea6: ${ p . progress () } % \u4e0a\u4f20\u901f\u5ea6: ${ p . speedSize () } \" + \"\\n\\n\u6587\u4ef6\u5927\u5c0f: ${ p . totalSize () } \u5df2\u4e0a\u4f20: ${ p . currentSize () } \u5269\u4f59\u5927\u5c0f: ${ p . remainSize () } \" + \"\\n\\n\u5df2\u4f7f\u7528\u65f6\u95f4: ${ p . useTime () } \u5269\u4f59\u65f6\u95f4: ${ p . remainTime () } \" } } }) }. await () } \u4e0b\u8f7d\u8fdb\u5ea6\u76d1\u542c \u00b6 scopeNetLife { val file = Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) addDownloadListener ( object : ProgressListener () { override fun onProgress ( p : Progress ) { seek ?. post { val progress = p . progress () seek . progress = progress tvProgress . text = \"\u4e0b\u8f7d\u8fdb\u5ea6: $ progress % \u4e0b\u8f7d\u901f\u5ea6: ${ p . speedSize () } \" + \"\\n\\n\u6587\u4ef6\u5927\u5c0f: ${ p . totalSize () } \u5df2\u4e0b\u8f7d: ${ p . currentSize () } \u5269\u4f59\u5927\u5c0f: ${ p . remainSize () } \" + \"\\n\\n\u5df2\u4f7f\u7528\u65f6\u95f4: ${ p . useTime () } \u5269\u4f59\u65f6\u95f4: ${ p . remainTime () } \" } } }) }. await () } \u65e0\u8bba\u662f\u4e0a\u4f20\u8fd8\u662f\u4e0b\u8f7d\u7684\u8fdb\u5ea6\u76d1\u542c\u4e0d\u4ec5\u4ec5\u662f\u6cdb\u578b\u4e3aFile\u5bf9\u8c61\u624d\u6709\u6548, \u4efb\u4f55\u8bf7\u6c42/\u54cd\u5e94\u90fd\u4f1a\u88ab\u76d1\u542c\u5230\u8fdb\u5ea6 \u76d1\u542c\u5668 \u00b6 \u901a\u8fc7\u7ee7\u627f ProgressListener \u62bd\u8c61\u7c7b\u5b9e\u73b0\u76d1\u542c\u8fdb\u5ea6\u4fe1\u606f. \u8fdb\u5ea6\u4fe1\u606f\u4e3a Progress \u5bf9\u8c61 \u8fdb\u5ea6\u95f4\u9694\u65f6\u95f4 \u00b6 ProgressListener\u7684\u6784\u9020\u53c2\u6570 interval \u63a7\u5236\u89e6\u53d1\u8fdb\u5ea6\u76d1\u542c\u5668\u7684\u95f4\u9694\u65f6\u95f4, \u9ed8\u8ba4\u662f500\u6beb\u79d2. \u6bd5\u7adf\u8fdb\u5ea6\u76d1\u542c\u4e0d\u9700\u8981\u592a\u9891\u7e41\u7684\u8c03\u7528\u5f71\u54cd\u6027\u80fd. \u8fdb\u5ea6\u4fe1\u606f \u00b6 \u51fd\u6570 \u63cf\u8ff0 currentBytes \u5df2\u5b8c\u6210\u5b57\u8282\u6570 totalBytes \u5168\u5c40\u5b57\u8282\u6570 intervalBytes \u76d1\u542c\u5668\u95f4\u9694\u65f6\u95f4\u5185\u7684\u5b8c\u6210\u5b57\u8282\u6570 intervalTime \u76d1\u542c\u5668\u7684\u95f4\u9694\u65f6\u95f4 startElapsedRealtime \u5f00\u59cb\u4e0b\u8f7d\u65f6\u95f4(\u8be5\u65f6\u95f4\u503c\u5f00\u673a\u5230\u73b0\u5728\u7684\u6beb\u79d2\u6570) speedBytes \u6bcf\u79d2\u4e0b\u8f7d\u5b57\u8282\u6570 progress \u8fdb\u5ea6, 1-100 finish \u6b64\u6b21\u4e0b\u8f7d/\u4e0a\u4f20\u662f\u5426\u5b8c\u6210 useTimeSeconds \u5df2\u7ecf\u4f7f\u7528\u65f6\u95f4, \u5355\u4f4d\u79d2 remainTimeSeconds \u4f30\u7b97\u7684\u5269\u4f59\u65f6\u95f4, \u5355\u4f4d\u79d2 \u540c\u65f6\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5b57\u7b26\u4e32\u683c\u5f0f\u51fd\u6570, \u90fd\u662f\u8fd4\u56de\u5df2\u7ecf\u6dfb\u52a0\u597d\u5355\u4f4d \u51fd\u6570 \u63cf\u8ff0 currentSize \u5df2\u5b8c\u6210\u5927\u5c0f, \u683c\u5f0f\u4e3a: 120kB \u6216\u8005 1.5MB totalSize \u5168\u90e8\u5927\u5c0f remainSize \u5269\u4f59\u5927\u5c0f speedSize \u6bcf\u79d2\u4e0b\u8f7d\u5927\u5c0f useTime \u5df2\u4f7f\u7528\u65f6\u95f4, \u683c\u5f0f\u4e3a: 01:23:04 remainTime \u4f30\u7b97\u7684\u5269\u4f59\u65f6\u95f4, \u683c\u5f0f\u4e3a: 01:23:04","title":"\u8fdb\u5ea6\u76d1\u542c"},{"location":"progress/#_1","text":"scopeNetLife { Post < String > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { param ( \"file\" , assetsFile ()) addUploadListener ( object : ProgressListener () { override fun onProgress ( p : Progress ) { seek . post { seek . progress = p . progress () tvProgress . text = \"\u4e0a\u4f20\u8fdb\u5ea6: ${ p . progress () } % \u4e0a\u4f20\u901f\u5ea6: ${ p . speedSize () } \" + \"\\n\\n\u6587\u4ef6\u5927\u5c0f: ${ p . totalSize () } \u5df2\u4e0a\u4f20: ${ p . currentSize () } \u5269\u4f59\u5927\u5c0f: ${ p . remainSize () } \" + \"\\n\\n\u5df2\u4f7f\u7528\u65f6\u95f4: ${ p . useTime () } \u5269\u4f59\u65f6\u95f4: ${ p . remainTime () } \" } } }) }. await () }","title":"\u4e0a\u4f20\u8fdb\u5ea6\u76d1\u542c"},{"location":"progress/#_2","text":"scopeNetLife { val file = Get < File > ( \"https://download.sublimetext.com/Sublime%20Text%20Build%203211.dmg\" ) { setDownloadFileName ( \"net.apk\" ) setDownloadDir ( requireContext (). filesDir ) addDownloadListener ( object : ProgressListener () { override fun onProgress ( p : Progress ) { seek ?. post { val progress = p . progress () seek . progress = progress tvProgress . text = \"\u4e0b\u8f7d\u8fdb\u5ea6: $ progress % \u4e0b\u8f7d\u901f\u5ea6: ${ p . speedSize () } \" + \"\\n\\n\u6587\u4ef6\u5927\u5c0f: ${ p . totalSize () } \u5df2\u4e0b\u8f7d: ${ p . currentSize () } \u5269\u4f59\u5927\u5c0f: ${ p . remainSize () } \" + \"\\n\\n\u5df2\u4f7f\u7528\u65f6\u95f4: ${ p . useTime () } \u5269\u4f59\u65f6\u95f4: ${ p . remainTime () } \" } } }) }. await () } \u65e0\u8bba\u662f\u4e0a\u4f20\u8fd8\u662f\u4e0b\u8f7d\u7684\u8fdb\u5ea6\u76d1\u542c\u4e0d\u4ec5\u4ec5\u662f\u6cdb\u578b\u4e3aFile\u5bf9\u8c61\u624d\u6709\u6548, \u4efb\u4f55\u8bf7\u6c42/\u54cd\u5e94\u90fd\u4f1a\u88ab\u76d1\u542c\u5230\u8fdb\u5ea6","title":"\u4e0b\u8f7d\u8fdb\u5ea6\u76d1\u542c"},{"location":"progress/#_3","text":"\u901a\u8fc7\u7ee7\u627f ProgressListener \u62bd\u8c61\u7c7b\u5b9e\u73b0\u76d1\u542c\u8fdb\u5ea6\u4fe1\u606f. \u8fdb\u5ea6\u4fe1\u606f\u4e3a Progress \u5bf9\u8c61","title":"\u76d1\u542c\u5668"},{"location":"progress/#_4","text":"ProgressListener\u7684\u6784\u9020\u53c2\u6570 interval \u63a7\u5236\u89e6\u53d1\u8fdb\u5ea6\u76d1\u542c\u5668\u7684\u95f4\u9694\u65f6\u95f4, \u9ed8\u8ba4\u662f500\u6beb\u79d2. \u6bd5\u7adf\u8fdb\u5ea6\u76d1\u542c\u4e0d\u9700\u8981\u592a\u9891\u7e41\u7684\u8c03\u7528\u5f71\u54cd\u6027\u80fd.","title":"\u8fdb\u5ea6\u95f4\u9694\u65f6\u95f4"},{"location":"progress/#_5","text":"\u51fd\u6570 \u63cf\u8ff0 currentBytes \u5df2\u5b8c\u6210\u5b57\u8282\u6570 totalBytes \u5168\u5c40\u5b57\u8282\u6570 intervalBytes \u76d1\u542c\u5668\u95f4\u9694\u65f6\u95f4\u5185\u7684\u5b8c\u6210\u5b57\u8282\u6570 intervalTime \u76d1\u542c\u5668\u7684\u95f4\u9694\u65f6\u95f4 startElapsedRealtime \u5f00\u59cb\u4e0b\u8f7d\u65f6\u95f4(\u8be5\u65f6\u95f4\u503c\u5f00\u673a\u5230\u73b0\u5728\u7684\u6beb\u79d2\u6570) speedBytes \u6bcf\u79d2\u4e0b\u8f7d\u5b57\u8282\u6570 progress \u8fdb\u5ea6, 1-100 finish \u6b64\u6b21\u4e0b\u8f7d/\u4e0a\u4f20\u662f\u5426\u5b8c\u6210 useTimeSeconds \u5df2\u7ecf\u4f7f\u7528\u65f6\u95f4, \u5355\u4f4d\u79d2 remainTimeSeconds \u4f30\u7b97\u7684\u5269\u4f59\u65f6\u95f4, \u5355\u4f4d\u79d2 \u540c\u65f6\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5b57\u7b26\u4e32\u683c\u5f0f\u51fd\u6570, \u90fd\u662f\u8fd4\u56de\u5df2\u7ecf\u6dfb\u52a0\u597d\u5355\u4f4d \u51fd\u6570 \u63cf\u8ff0 currentSize \u5df2\u5b8c\u6210\u5927\u5c0f, \u683c\u5f0f\u4e3a: 120kB \u6216\u8005 1.5MB totalSize \u5168\u90e8\u5927\u5c0f remainSize \u5269\u4f59\u5927\u5c0f speedSize \u6bcf\u79d2\u4e0b\u8f7d\u5927\u5c0f useTime \u5df2\u4f7f\u7528\u65f6\u95f4, \u683c\u5f0f\u4e3a: 01:23:04 remainTime \u4f30\u7b97\u7684\u5269\u4f59\u65f6\u95f4, \u683c\u5f0f\u4e3a: 01:23:04","title":"\u8fdb\u5ea6\u4fe1\u606f"},{"location":"read-cache/","text":"Net_v2\u57fa\u4e8e Kalle \u5f00\u53d1, \u652f\u6301Kalle\u76849\u79cd\u7f13\u5b58\u6a21\u5f0f \u7f13\u5b58\u6a21\u5f0f\u8981\u6c42\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u5f00\u542f NetConfig . init ( \"http://github.com/\" ) { cacheEnabled () // \u5f00\u542f\u7f13\u5b58 } \u8bf7\u6c42\u7f13\u5b58\u6216\u7f51\u7edc scopeNetLife { // \u5148\u8bfb\u53d6\u7f13\u5b58, \u5982\u679c\u7f13\u5b58\u4e0d\u5b58\u5728\u518d\u8bf7\u6c42\u7f51\u7edc tvFragment . text = Get < String > ( \"api\" , cache = CacheMode . READ_CACHE_NO_THEN_NETWORK ). await () Log . d ( \"\u65e5\u5fd7\" , \"\u8bfb\u53d6\u7f13\u5b58\" ) } \u8bfb\u53d6\u7f13\u5b58\u7136\u540e\u8bf7\u6c42\u7f51\u7edc scopeNetLife { // \u7136\u540e\u6267\u884c\u8fd9\u91cc(\u7f51\u7edc\u8bf7\u6c42) tvFragment . text = Post < String > ( \"api\" , cache = CacheMode . NETWORK_YES_THEN_WRITE_CACHE ). await () Log . d ( \"\u65e5\u5fd7\" , \"\u7f51\u7edc\u8bf7\u6c42\" ) }. preview { // \u5148\u6267\u884c\u8fd9\u91cc(\u4ec5\u8bfb\u7f13\u5b58), \u4efb\u4f55\u5f02\u5e38\u90fd\u89c6\u4e3a\u8bfb\u53d6\u7f13\u5b58\u5931\u8d25 tvFragment . text = Get < String > ( \"api\" , cache = CacheMode . READ_CACHE ). await () Log . d ( \"\u65e5\u5fd7\" , \"\u8bfb\u53d6\u7f13\u5b58\" ) } \u9884\u8bfb\u6a21\u5f0f\u672c\u8d28\u4e0a\u5c31\u662f\u521b\u5efa\u4e00\u4e2a preview \u9644\u52a0\u4f5c\u7528\u57df, \u91cc\u9762\u7684\u6240\u6709\u5f02\u5e38\u5d29\u6e83\u90fd\u4f1a\u88ab\u9759\u9ed8\u6355\u6349(\u7b97\u4f5c\u7f13\u5b58\u5931\u8d25), \u4f1a\u4f18\u5148\u4e8e scope* \u6267\u884c, \u7136\u540e\u518d\u6267\u884cscope\u672c\u8eab, \u800c\u4e14\u4e00\u65e6\u7f13\u5b58\u8bfb\u53d6\u6210\u529f( preview \u5185\u90e8\u65e0\u5f02\u5e38)\u5373\u4f7f\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\u4e5f\u53ef\u4ee5\u4e0d\u63d0\u9192\u7528\u6237\u4efb\u4f55\u9519\u8bef\u4fe1\u606f(\u53ef\u914d\u7f6e) preview \u5e76\u6ca1\u6709\u8bf4\u53ea\u80fd\u7528\u5728\u7f51\u7edc\u7f13\u5b58\u4e0a, \u4e5f\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u7684\u5904\u7406\u573a\u666f \u7f13\u5b58\u6a21\u5f0f \u00b6 \u7f13\u5b58\u6a21\u5f0f\u5c5e\u4e8e CacheMod \u679a\u4e3e, \u5efa\u8bae\u5f00\u53d1\u8005\u6d4f\u89c8\u7f13\u5b58\u6a21\u5f0f\u7684\u6e90\u7801\u548c\u6ce8\u91ca\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u66f4\u597d\u7684\u4f7f\u7528\u7f13\u5b58\u6a21\u5f0f\u3002 \u5e38\u91cf \u63cf\u8ff0 HTTP \u53d1\u8d77\u8bf7\u6c42\u524d\u5982\u679c\u672c\u5730\u5df2\u7ecf\u6709\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u672a\u8fc7\u671f\u5219\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c \u5982\u679c\u8fc7\u671f\u5219\u5e26\u4e0a\u7f13\u5b58\u5934\u53bb\u670d\u52a1\u5668\u505a\u6821\u9a8c\u3002\u5982\u679c\u670d\u52a1\u5668\u54cd\u5e94304\u5219\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u5426\u5219\u8bfb\u53d6\u670d\u52a1\u5668\u6570\u636e\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e HTTP_YES_THEN_WRITE_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u5982\u679c\u672c\u5730\u5df2\u7ecf\u6709\u7f13\u5b58\u5219\u5e26\u7f13\u5b58\u5934\uff0c\u670d\u52a1\u5668\u54cd\u5e94304\u624d\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u5426\u5219\u8bfb\u53d6\u670d\u52a1\u5668\u6570\u636e\uff0c \u5e76\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u4e0d\u8bba\u670d\u52a1\u5668\u54cd\u5e94\u5934\u5982\u4f55\uff0c\u7edd\u4e0d\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_YES_THEN_HTTP \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_YES_THEN_WRITE_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u8bf7\u6c42\u6210\u529f\u540e\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_NO_THEN_READ_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c\u8bf7\u6c42\u5931\u8d25\u540e\u5c1d\u8bd5\u8bfb\u53d6\u7f13\u5b58, \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE \u4ec5\u8bfb\u53d6\u7f13\u5b58 READ_CACHE_NO_THEN_NETWORK \u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e0d\u5b58\u5728\u5c31\u8bf7\u6c42\u7f51\u7edc\uff0c \u4e0d\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE_NO_THEN_HTTP \u5148\u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e0d\u5b58\u5728\u5c31\u8bf7\u6c42\u7f51\u7edc\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE_NO_THEN_NETWORK_THEN_WRITE_CACHE \u5148\u672c\u5730\u6709\u7f13\u5b58\u5219\u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u6ca1\u6709\u7f13\u5b58\u5219\u8bfb\u53d6\u7f51\u7edc\u5e76\u4e14\u5199\u5165\u7f13\u5b58, \u8be5\u6a21\u5f0f\u8bf7\u6c42\u6210\u529f\u540e\u4f1a\u6c38\u4e45\u4f7f\u7528\u7f13\u5b58, \u4f46\u4f60\u53ef\u4ee5\u6307\u5b9a\u52a8\u6001\u7684cacheKey\u6765\u8ba9\u7f13\u5b58\u5931\u6548 \u4f8b\u5982\u4e00\u5929\u540e\u5931\u6548, \u53ef\u4ee5\u505a\u5230\u5ba2\u6237\u7aef\u5b8c\u5168\u63a7\u5236\u7f13\u5b58","title":"Read cache"},{"location":"read-cache/#_1","text":"\u7f13\u5b58\u6a21\u5f0f\u5c5e\u4e8e CacheMod \u679a\u4e3e, \u5efa\u8bae\u5f00\u53d1\u8005\u6d4f\u89c8\u7f13\u5b58\u6a21\u5f0f\u7684\u6e90\u7801\u548c\u6ce8\u91ca\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u66f4\u597d\u7684\u4f7f\u7528\u7f13\u5b58\u6a21\u5f0f\u3002 \u5e38\u91cf \u63cf\u8ff0 HTTP \u53d1\u8d77\u8bf7\u6c42\u524d\u5982\u679c\u672c\u5730\u5df2\u7ecf\u6709\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u672a\u8fc7\u671f\u5219\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c \u5982\u679c\u8fc7\u671f\u5219\u5e26\u4e0a\u7f13\u5b58\u5934\u53bb\u670d\u52a1\u5668\u505a\u6821\u9a8c\u3002\u5982\u679c\u670d\u52a1\u5668\u54cd\u5e94304\u5219\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u5426\u5219\u8bfb\u53d6\u670d\u52a1\u5668\u6570\u636e\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e HTTP_YES_THEN_WRITE_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u5982\u679c\u672c\u5730\u5df2\u7ecf\u6709\u7f13\u5b58\u5219\u5e26\u7f13\u5b58\u5934\uff0c\u670d\u52a1\u5668\u54cd\u5e94304\u624d\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u5426\u5219\u8bfb\u53d6\u670d\u52a1\u5668\u6570\u636e\uff0c \u5e76\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u4e0d\u8bba\u670d\u52a1\u5668\u54cd\u5e94\u5934\u5982\u4f55\uff0c\u7edd\u4e0d\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_YES_THEN_HTTP \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_YES_THEN_WRITE_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c \u8bf7\u6c42\u6210\u529f\u540e\u5199\u5165\u7f13\u5b58\u6570\u636e NETWORK_NO_THEN_READ_CACHE \u53d1\u8d77\u8bf7\u6c42\u524d\u4e0d\u7ba1\u672c\u5730\u662f\u5426\u6709\u7f13\u5b58\uff0c\u90fd\u4e0d\u4f1a\u5e26\u4e0a\u7f13\u5b58\u5934\uff0c\u8bf7\u6c42\u5931\u8d25\u540e\u5c1d\u8bd5\u8bfb\u53d6\u7f13\u5b58, \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE \u4ec5\u8bfb\u53d6\u7f13\u5b58 READ_CACHE_NO_THEN_NETWORK \u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e0d\u5b58\u5728\u5c31\u8bf7\u6c42\u7f51\u7edc\uff0c \u4e0d\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE_NO_THEN_HTTP \u5148\u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e0d\u5b58\u5728\u5c31\u8bf7\u6c42\u7f51\u7edc\uff0c \u6839\u636e\u670d\u52a1\u5668\u54cd\u5e94\u5934\u6765\u51b3\u5b9a\u662f\u5426\u5199\u5165\u7f13\u5b58\u6570\u636e READ_CACHE_NO_THEN_NETWORK_THEN_WRITE_CACHE \u5148\u672c\u5730\u6709\u7f13\u5b58\u5219\u8bfb\u53d6\u7f13\u5b58\uff0c\u5982\u679c\u6ca1\u6709\u7f13\u5b58\u5219\u8bfb\u53d6\u7f51\u7edc\u5e76\u4e14\u5199\u5165\u7f13\u5b58, \u8be5\u6a21\u5f0f\u8bf7\u6c42\u6210\u529f\u540e\u4f1a\u6c38\u4e45\u4f7f\u7528\u7f13\u5b58, \u4f46\u4f60\u53ef\u4ee5\u6307\u5b9a\u52a8\u6001\u7684cacheKey\u6765\u8ba9\u7f13\u5b58\u5931\u6548 \u4f8b\u5982\u4e00\u5929\u540e\u5931\u6548, \u53ef\u4ee5\u505a\u5230\u5ba2\u6237\u7aef\u5b8c\u5168\u63a7\u5236\u7f13\u5b58","title":"\u7f13\u5b58\u6a21\u5f0f"},{"location":"request/","text":"Net\u4e2d\u5173\u4e8e\u8bf7\u6c42\u7684\u7c7b\u53ea\u6709\u4e24\u4e2a\u7c7b\u548c\u4ed6\u4eec\u5171\u540c\u7684\u62bd\u8c61\u7236\u7c7b BaseRequest |- UrlRequest |- BodyRequest \u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u4e0d\u540c\u4f7f\u7528\u7684Request\u4e5f\u4e0d\u540c GET , HEAD , OPTIONS , TRACE , // Url request POST , DELETE , PUT , PATCH // Body request \u4ee3\u7801\u793a\u4f8b scopeNetLife { Get < String > ( \"api\" ) { // this \u5373\u4e3a UrlRequest }. await () Post < String > ( \"api\" ) { // this \u5373\u4e3a BodyRequest }. await () } \u8bf7\u6c42\u53c2\u6570 \u00b6 scopeNetLife { // \u521b\u5efa\u4f5c\u7528\u57df // \u8fd9\u4e2a\u5927\u62ec\u53f7\u5185\u5c31\u5c5e\u4e8e\u4f5c\u7528\u57df\u5185\u90e8 val data = Get < String > ( \"http://www.baidu.com/\" ){ param ( \"u_name\" , \"drake\" ) param ( \"pwd\" , \"123456\" ) }. await () // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de`String`\u7c7b\u578b\u6570\u636e } \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 param \u652f\u6301\u57fa\u7840\u7c7b\u578b/\u6587\u4ef6/RequestBody/Part json \u8bf7\u6c42\u53c2\u6570\u4e3aJSONObject/JsonArray/String setQuery Url\u53c2\u6570, \u5982\u679c\u5f53\u524d\u8bf7\u6c42\u4e3aUrl\u8bf7\u6c42\u5219\u8be5\u51fd\u6570\u7b49\u6548\u4e8e param \u51fd\u6570 \u5982\u679c\u6ca1\u6709\u6dfb\u52a0\u6587\u4ef6/\u6d41\u90a3\u4e48\u5c31\u662f\u901a\u8fc7BodyRequest\u5185\u90e8\u7684 FormBody \u53d1\u8d77\u8bf7\u6c42. \u53cd\u4e4b\u5c31\u662f\u901a\u8fc7 MultipartBody \u53d1\u8d77\u8bf7\u6c42. \u5f53\u7136\u4f60\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49Body\u6765\u8bf7\u6c42, \u8b6c\u5982\u4ee5\u4e0b\u7684Json\u8bf7\u6c42 Json\u8bf7\u6c42 \u00b6 \u8fd9\u91cc\u63d0\u4f9b\u4e09\u79cd\u521b\u5efaJson\u8bf7\u6c42\u7684\u793a\u4f8b\u4ee3\u7801. \u914c\u60c5\u9009\u7528 JSON\u952e\u503c\u5bf9(\u63a8\u8350) val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { // \u53ea\u652f\u6301\u57fa\u7840\u7c7b\u578b\u7684\u503c, \u5982\u679c\u503c\u4e3a\u5bf9\u8c61\u6216\u8005\u5305\u542b\u5bf9\u8c61\u7684List\u4f1a\u5bfc\u81f4\u5176\u503c\u4e3anull json ( \"name\" to name , \"age\" to age , \"measurements\" to measurements ) }. await () } JSONObject val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { json ( JSONObject (). run { put ( \"name\" , name ) put ( \"age\" , age ) put ( \"measurements\" , JSONArray ( measurements )) }) }. await () } \u81ea\u5b9a\u4e49\u7684body val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { body = MyJsonBody ( name , age , measurements ) }. await () } \u5bf9\u4e8e\u67d0\u4e9b\u53ef\u80fdJSON\u8bf7\u6c42\u53c2\u6570\u5b58\u5728\u56fa\u5b9a\u503c: \u53ef\u4ee5\u8003\u8651\u7ee7\u627fRequestBody\u6765\u6269\u5c55\u51fa\u81ea\u5df1\u7684\u65b0\u7684Body\u5bf9\u8c61, \u7136\u540e\u8d4b\u503c\u7ed9 body \u5b57\u6bb5 \u6dfb\u52a0\u8bf7\u6c42\u62e6\u622a\u5668 RequestInterceptor \u81ea\u5b9a\u4e49\u8bf7\u6c42\u51fd\u6570 \u00b6 \u524d\u9762\u63d0\u5230 json(Pair<String, Any?>) \u51fd\u6570\u4e0d\u652f\u6301\u5bf9\u8c61\u503c, \u56e0\u4e3a\u6846\u67b6\u5185\u90e8\u4f7f\u7528\u7684 org.json.JSONObject \u5176\u4e0d\u652f\u6301\u6620\u5c04\u5bf9\u8c61\u5b57\u6bb5 \u8fd9\u91cc\u53ef\u4ee5\u521b\u5efa\u6269\u5c55\u51fd\u6570\u6765\u652f\u6301\u4f60\u60f3\u8981\u7684Json\u89e3\u6790\u6846\u67b6, \u6bd4\u5982\u4ee5\u4e0b\u5e38\u7528\u7684Json\u89e3\u6790\u6846\u67b6\u793a\u4f8b Gson fun BodyRequest . gson ( vararg body : Pair < String , Any? > ) { this . body = Gson (). toJson ( body . toMap ()). toRequestBody ( MediaConst . JSON ) } FastJson fun BodyRequest . fastJson ( vararg body : Pair < String , Any? > ) { this . body = JSON . toJSON ( body . toMap ()). toRequestBody ( MediaConst . JSON ) } \u4f7f\u7528 scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { gson ( \"name\" to name , \"model\" to Model () // \u53c2\u6570\u652f\u6301Gson\u53ef\u89e3\u6790\u7684\u5bf9\u8c61 // fastJson(\"name\" to name, \"model\" to Model() // \u4f7f\u7528FastJson }. await () } \u4e3e\u4e00\u53cd\u4e09\u53ef\u4ee5\u521b\u5efa\u5176\u4ed6\u529f\u80fd\u81ea\u5b9a\u4e49\u7684\u8bf7\u6c42\u51fd\u6570 \u6269\u5c55\u51fd\u6570\u8981\u6c42\u4e3a\u9876\u5c42\u51fd\u6570, \u5373\u76f4\u63a5\u5728\u6587\u4ef6\u4e2d (kotlin\u57fa\u7840\u8bed\u6cd5) \u8bf7\u6c42\u51fd\u6570 \u00b6 \u5173\u4e8e\u5168\u90e8\u7684\u8bf7\u6c42\u914d\u7f6e\u9009\u9879\u63a8\u8350\u9605\u8bfb\u51fd\u6570\u6587\u6863\u6216\u8005\u9605\u8bfb\u6e90\u7801. Net\u63d0\u4f9b\u6e05\u6670\u7684\u51fd\u6570\u7ed3\u6784\u6d4f\u89c8\u65b9\u4fbf\u76f4\u63a5\u9605\u8bfb\u6e90\u7801","title":"\u8bf7\u6c42\u53c2\u6570"},{"location":"request/#_1","text":"scopeNetLife { // \u521b\u5efa\u4f5c\u7528\u57df // \u8fd9\u4e2a\u5927\u62ec\u53f7\u5185\u5c31\u5c5e\u4e8e\u4f5c\u7528\u57df\u5185\u90e8 val data = Get < String > ( \"http://www.baidu.com/\" ){ param ( \"u_name\" , \"drake\" ) param ( \"pwd\" , \"123456\" ) }. await () // \u53d1\u8d77GET\u8bf7\u6c42\u5e76\u8fd4\u56de`String`\u7c7b\u578b\u6570\u636e } \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 param \u652f\u6301\u57fa\u7840\u7c7b\u578b/\u6587\u4ef6/RequestBody/Part json \u8bf7\u6c42\u53c2\u6570\u4e3aJSONObject/JsonArray/String setQuery Url\u53c2\u6570, \u5982\u679c\u5f53\u524d\u8bf7\u6c42\u4e3aUrl\u8bf7\u6c42\u5219\u8be5\u51fd\u6570\u7b49\u6548\u4e8e param \u51fd\u6570 \u5982\u679c\u6ca1\u6709\u6dfb\u52a0\u6587\u4ef6/\u6d41\u90a3\u4e48\u5c31\u662f\u901a\u8fc7BodyRequest\u5185\u90e8\u7684 FormBody \u53d1\u8d77\u8bf7\u6c42. \u53cd\u4e4b\u5c31\u662f\u901a\u8fc7 MultipartBody \u53d1\u8d77\u8bf7\u6c42. \u5f53\u7136\u4f60\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49Body\u6765\u8bf7\u6c42, \u8b6c\u5982\u4ee5\u4e0b\u7684Json\u8bf7\u6c42","title":"\u8bf7\u6c42\u53c2\u6570"},{"location":"request/#json","text":"\u8fd9\u91cc\u63d0\u4f9b\u4e09\u79cd\u521b\u5efaJson\u8bf7\u6c42\u7684\u793a\u4f8b\u4ee3\u7801. \u914c\u60c5\u9009\u7528 JSON\u952e\u503c\u5bf9(\u63a8\u8350) val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { // \u53ea\u652f\u6301\u57fa\u7840\u7c7b\u578b\u7684\u503c, \u5982\u679c\u503c\u4e3a\u5bf9\u8c61\u6216\u8005\u5305\u542b\u5bf9\u8c61\u7684List\u4f1a\u5bfc\u81f4\u5176\u503c\u4e3anull json ( \"name\" to name , \"age\" to age , \"measurements\" to measurements ) }. await () } JSONObject val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { json ( JSONObject (). run { put ( \"name\" , name ) put ( \"age\" , age ) put ( \"measurements\" , JSONArray ( measurements )) }) }. await () } \u81ea\u5b9a\u4e49\u7684body val name = \"\u91d1\u57ce\u6b66\" val age = 29 val measurements = listOf ( 100 , 100 , 100 ) scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { body = MyJsonBody ( name , age , measurements ) }. await () } \u5bf9\u4e8e\u67d0\u4e9b\u53ef\u80fdJSON\u8bf7\u6c42\u53c2\u6570\u5b58\u5728\u56fa\u5b9a\u503c: \u53ef\u4ee5\u8003\u8651\u7ee7\u627fRequestBody\u6765\u6269\u5c55\u51fa\u81ea\u5df1\u7684\u65b0\u7684Body\u5bf9\u8c61, \u7136\u540e\u8d4b\u503c\u7ed9 body \u5b57\u6bb5 \u6dfb\u52a0\u8bf7\u6c42\u62e6\u622a\u5668 RequestInterceptor","title":"Json\u8bf7\u6c42"},{"location":"request/#_2","text":"\u524d\u9762\u63d0\u5230 json(Pair<String, Any?>) \u51fd\u6570\u4e0d\u652f\u6301\u5bf9\u8c61\u503c, \u56e0\u4e3a\u6846\u67b6\u5185\u90e8\u4f7f\u7528\u7684 org.json.JSONObject \u5176\u4e0d\u652f\u6301\u6620\u5c04\u5bf9\u8c61\u5b57\u6bb5 \u8fd9\u91cc\u53ef\u4ee5\u521b\u5efa\u6269\u5c55\u51fd\u6570\u6765\u652f\u6301\u4f60\u60f3\u8981\u7684Json\u89e3\u6790\u6846\u67b6, \u6bd4\u5982\u4ee5\u4e0b\u5e38\u7528\u7684Json\u89e3\u6790\u6846\u67b6\u793a\u4f8b Gson fun BodyRequest . gson ( vararg body : Pair < String , Any? > ) { this . body = Gson (). toJson ( body . toMap ()). toRequestBody ( MediaConst . JSON ) } FastJson fun BodyRequest . fastJson ( vararg body : Pair < String , Any? > ) { this . body = JSON . toJSON ( body . toMap ()). toRequestBody ( MediaConst . JSON ) } \u4f7f\u7528 scopeNetLife { tvFragment . text = Post < String > ( \"api\" ) { gson ( \"name\" to name , \"model\" to Model () // \u53c2\u6570\u652f\u6301Gson\u53ef\u89e3\u6790\u7684\u5bf9\u8c61 // fastJson(\"name\" to name, \"model\" to Model() // \u4f7f\u7528FastJson }. await () } \u4e3e\u4e00\u53cd\u4e09\u53ef\u4ee5\u521b\u5efa\u5176\u4ed6\u529f\u80fd\u81ea\u5b9a\u4e49\u7684\u8bf7\u6c42\u51fd\u6570 \u6269\u5c55\u51fd\u6570\u8981\u6c42\u4e3a\u9876\u5c42\u51fd\u6570, \u5373\u76f4\u63a5\u5728\u6587\u4ef6\u4e2d (kotlin\u57fa\u7840\u8bed\u6cd5)","title":"\u81ea\u5b9a\u4e49\u8bf7\u6c42\u51fd\u6570"},{"location":"request/#_3","text":"\u5173\u4e8e\u5168\u90e8\u7684\u8bf7\u6c42\u914d\u7f6e\u9009\u9879\u63a8\u8350\u9605\u8bfb\u51fd\u6570\u6587\u6863\u6216\u8005\u9605\u8bfb\u6e90\u7801. Net\u63d0\u4f9b\u6e05\u6670\u7684\u51fd\u6570\u7ed3\u6784\u6d4f\u89c8\u65b9\u4fbf\u76f4\u63a5\u9605\u8bfb\u6e90\u7801","title":"\u8bf7\u6c42\u51fd\u6570"},{"location":"scope/","text":"\u534f\u7a0b\u8bf7\u6c42\u8981\u6c42\u5728\u534f\u7a0b\u7684\u4f5c\u7528\u57df\u4e2d\u8c03\u7528, \u8fd9\u91cc\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u4e0d\u540c\u7684\u4f5c\u7528\u57df\u83b7\u53d6\u4e0d\u540c\u7684\u529f\u80fd \u672c\u8d28\u4e0aNet\u7684\u8bf7\u6c42\u52a8\u4f5c\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2aDeferred\u5bf9\u8c61. \u53ef\u4ee5\u5728\u4efb\u4f55\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u6267\u884c. \u4f46\u662f\u8003\u8651\u5230\u5b8c\u6574\u7684\u751f\u547d\u5468\u671f\u548c\u9519\u8bef\u5904\u7406\u7b49\u63a8\u8350\u4f7f\u7528Net\u5185\u90e8\u5b9a\u4e49\u7684\u4f5c\u7528\u57df. \u5f02\u6b65\u4efb\u52a1\u7684\u4f5c\u7528\u57df \u00b6 \u521b\u5efa\u53ef\u4ee5\u6355\u6349\u5f02\u5e38\u7684\u534f\u7a0b\u4f5c\u7528\u57df, \u4f46\u662f\u4e0d\u4f1a\u89e6\u53d1 NetErrorHandler (\u9ed8\u8ba4\u5f02\u5e38\u5904\u7406\u8005). \u8be5\u4f5c\u7528\u57df\u4e8e\u4e00\u822c\u7528\u4e8e\u666e\u901a\u7684\u5f02\u6b65\u4efb\u52a1 \u51fd\u6570 \u63cf\u8ff0 scope \u521b\u5efa\u6700\u57fa\u7840\u7684\u4f5c\u7528\u57df, \u6240\u6709\u4f5c\u7528\u57df\u90fd\u5305\u542b\u5f02\u5e38\u6355\u6349 scopeLife \u521b\u5efa\u8ddf\u968f\u751f\u547d\u5468\u671f\u53d6\u6d88\u7684\u4f5c\u7528\u57df ViewModel.scopeLife \u521b\u5efa\u8ddf\u968fViewModel\u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df, \u5982\u4f55\u5728ViewModel\u521b\u5efa\u4f5c\u7528\u57df \u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df \u00b6 \u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df\u53ef\u4ee5\u6839\u636e\u751f\u547d\u5468\u671f\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42, \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u81ea\u52a8\u5f39\u51fa\u5410\u53f8(\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6216\u8005\u53d6\u6d88), \u5e76\u4e14\u5177\u5907\u4e00\u4e9b\u573a\u666f\u7684\u7279\u6b8a\u529f\u80fd(\u4f8b\u5982\u52a0\u8f7d\u5bf9\u8bdd\u6846, \u7f3a\u7701\u9875, \u4e0b\u62c9\u5237\u65b0\u7b49) \u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df\u6bd4\u4e0a\u9762\u63d0\u5230\u7684\u5f02\u6b65\u4efb\u52a1\u7684\u4f5c\u7528\u57df\u591a\u7684\u533a\u522b\u5c31\u662f \u53d1\u751f\u9519\u8bef\u4f1a\u89e6\u53d1\u5168\u5c40\u9519\u8bef\u5904\u7406 NetErrorHandler \u5177\u5907\u4e00\u4e9b\u7279\u6b8a\u573a\u666f\u529f\u80fd, \u6bd4\u5982\u81ea\u52a8\u4e0b\u62c9\u5237\u65b0, \u81ea\u52a8\u663e\u793a\u52a0\u8f7d\u5e93\u7b49 \u51fd\u6570 \u63cf\u8ff0 scopeNet \u521b\u5efa\u81ea\u52a8\u5904\u7406\u7f51\u7edc\u9519\u8bef\u7684\u4f5c\u7528\u57df scopeNetLife \u521b\u5efa\u81ea\u52a8\u5904\u7406\u7f51\u7edc\u9519\u8bef\u7684\u4f5c\u7528\u57df, \u4e14\u5305\u542b\u8ddf\u968fActivity\u6216\u8005Fragment\u751f\u547d\u5468\u671f scopeDialog \u521b\u5efa\u81ea\u52a8\u52a0\u8f7d\u5bf9\u8bdd\u6846\u7684\u4f5c\u7528\u57df, \u751f\u547d\u5468\u671f\u8ddf\u968f\u5bf9\u8bdd\u6846 ViewModel.scopeNetLife \u521b\u5efa\u8ddf\u968fViewModel\u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df, \u5982\u4f55\u5728ViewModel\u521b\u5efa\u4f5c\u7528\u57df PageRefreshLayout.scope \u521b\u5efa\u8ddf\u968f PageRefreshLayout \u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df StateLayout.scope \u521b\u5efa\u8ddf\u968f StateLayout \u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df PageRefreshLayout/StateLayout \u5c5e\u4e8e BRV \u6846\u67b6\u4e2d\u7684\u5e03\u5c40, \u7528\u4e8e\u652f\u6301 \u81ea\u52a8\u5316\u7f3a\u7701\u9875/\u4e0b\u62c9\u5237\u65b0 \u5982\u679c\u60f3\u4e86\u89e3\u8be6\u7ec6\u7684\u534f\u7a0b\u4f7f\u7528\u65b9\u5f0f, \u53ef\u4ee5\u67e5\u770b\u6211\u7684\u4e00\u7bc7\u6587\u7ae0: \u6700\u5168\u9762\u7684Kotlin\u534f\u7a0b: Coroutine/Channel/Flow \u4ee5\u53ca\u5b9e\u9645\u5e94\u7528 \u6709\u65f6\u5019\u53ef\u80fd\u9762\u4e34\u5d4c\u5957\u7684 scope* \u51fd\u6570\u6216\u8005\u4f5c\u7528\u57df\u5185\u6709\u5b50\u4f5c\u7528\u57df\u60c5\u51b5, \u8fd9\u4e2a\u65f6\u5019\u7684\u751f\u547d\u5468\u671f\u662f\u5982\u4f55 \u5d4c\u5957Scope \u00b6 scopeNet { val task = Post < String > ( \"api0\" ). await () scopeNet { val task = Post < String > ( \"api0\" ). await () // \u6b64\u65f6\u53d1\u751f\u8bf7\u6c42\u9519\u8bef }. catch { // A } }. catch { // B } \u4ee5\u4e0b\u5d4c\u5957\u4f5c\u7528\u57df\u9519\u8bef\u5c06\u4f1a\u4ec5\u53d1\u751f\u5728 A \u5904, \u5e76\u88ab\u6355\u83b7, \u540c\u65f6\u4e0d\u5f71\u54cd\u5916\u90e8 scopeNet \u7684\u8bf7\u6c42\u548c\u5f02\u5e38\u6355\u83b7 \u4e24\u4e2a scopeNet \u7684\u5f02\u5e38\u629b\u51fa\u548c\u6355\u83b7\u4e92\u4e0d\u5f71\u54cd scopeNet/scopeDialog/scope \u7b49\u51fd\u6570\u540c\u7406 \u5b50\u4f5c\u7528\u57df \u00b6 scopeNet { val await = Post < String > ( \"api\" ). await () launch { val task = Post < String > ( \"api0\" ). await () // \u6b64\u65f6\u53d1\u751f\u8bf7\u6c42\u9519\u8bef }. invokeOnCompletion { // A } }. catch { // B } \u8fd9\u79cd\u60c5\u51b5 \u5148\u6267\u884c A \u7136\u540e\u6267\u884c B , \u5e76\u4e14\u90fd\u80fd\u6355\u83b7\u5f02\u5e38. \u540c\u65f6 scopeNet \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u5bfc\u81f4 launch \u5185\u7684\u8bf7\u6c42\u88ab\u53d6\u6d88, launch \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u5bfc\u81f4 scopeNet \u53d1\u751f\u9519\u8bef","title":"\u521b\u5efa\u4f5c\u7528\u57df"},{"location":"scope/#_1","text":"\u521b\u5efa\u53ef\u4ee5\u6355\u6349\u5f02\u5e38\u7684\u534f\u7a0b\u4f5c\u7528\u57df, \u4f46\u662f\u4e0d\u4f1a\u89e6\u53d1 NetErrorHandler (\u9ed8\u8ba4\u5f02\u5e38\u5904\u7406\u8005). \u8be5\u4f5c\u7528\u57df\u4e8e\u4e00\u822c\u7528\u4e8e\u666e\u901a\u7684\u5f02\u6b65\u4efb\u52a1 \u51fd\u6570 \u63cf\u8ff0 scope \u521b\u5efa\u6700\u57fa\u7840\u7684\u4f5c\u7528\u57df, \u6240\u6709\u4f5c\u7528\u57df\u90fd\u5305\u542b\u5f02\u5e38\u6355\u6349 scopeLife \u521b\u5efa\u8ddf\u968f\u751f\u547d\u5468\u671f\u53d6\u6d88\u7684\u4f5c\u7528\u57df ViewModel.scopeLife \u521b\u5efa\u8ddf\u968fViewModel\u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df, \u5982\u4f55\u5728ViewModel\u521b\u5efa\u4f5c\u7528\u57df","title":"\u5f02\u6b65\u4efb\u52a1\u7684\u4f5c\u7528\u57df"},{"location":"scope/#_2","text":"\u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df\u53ef\u4ee5\u6839\u636e\u751f\u547d\u5468\u671f\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42, \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u81ea\u52a8\u5f39\u51fa\u5410\u53f8(\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6216\u8005\u53d6\u6d88), \u5e76\u4e14\u5177\u5907\u4e00\u4e9b\u573a\u666f\u7684\u7279\u6b8a\u529f\u80fd(\u4f8b\u5982\u52a0\u8f7d\u5bf9\u8bdd\u6846, \u7f3a\u7701\u9875, \u4e0b\u62c9\u5237\u65b0\u7b49) \u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df\u6bd4\u4e0a\u9762\u63d0\u5230\u7684\u5f02\u6b65\u4efb\u52a1\u7684\u4f5c\u7528\u57df\u591a\u7684\u533a\u522b\u5c31\u662f \u53d1\u751f\u9519\u8bef\u4f1a\u89e6\u53d1\u5168\u5c40\u9519\u8bef\u5904\u7406 NetErrorHandler \u5177\u5907\u4e00\u4e9b\u7279\u6b8a\u573a\u666f\u529f\u80fd, \u6bd4\u5982\u81ea\u52a8\u4e0b\u62c9\u5237\u65b0, \u81ea\u52a8\u663e\u793a\u52a0\u8f7d\u5e93\u7b49 \u51fd\u6570 \u63cf\u8ff0 scopeNet \u521b\u5efa\u81ea\u52a8\u5904\u7406\u7f51\u7edc\u9519\u8bef\u7684\u4f5c\u7528\u57df scopeNetLife \u521b\u5efa\u81ea\u52a8\u5904\u7406\u7f51\u7edc\u9519\u8bef\u7684\u4f5c\u7528\u57df, \u4e14\u5305\u542b\u8ddf\u968fActivity\u6216\u8005Fragment\u751f\u547d\u5468\u671f scopeDialog \u521b\u5efa\u81ea\u52a8\u52a0\u8f7d\u5bf9\u8bdd\u6846\u7684\u4f5c\u7528\u57df, \u751f\u547d\u5468\u671f\u8ddf\u968f\u5bf9\u8bdd\u6846 ViewModel.scopeNetLife \u521b\u5efa\u8ddf\u968fViewModel\u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df, \u5982\u4f55\u5728ViewModel\u521b\u5efa\u4f5c\u7528\u57df PageRefreshLayout.scope \u521b\u5efa\u8ddf\u968f PageRefreshLayout \u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df StateLayout.scope \u521b\u5efa\u8ddf\u968f StateLayout \u751f\u547d\u5468\u671f\u7684\u4f5c\u7528\u57df PageRefreshLayout/StateLayout \u5c5e\u4e8e BRV \u6846\u67b6\u4e2d\u7684\u5e03\u5c40, \u7528\u4e8e\u652f\u6301 \u81ea\u52a8\u5316\u7f3a\u7701\u9875/\u4e0b\u62c9\u5237\u65b0 \u5982\u679c\u60f3\u4e86\u89e3\u8be6\u7ec6\u7684\u534f\u7a0b\u4f7f\u7528\u65b9\u5f0f, \u53ef\u4ee5\u67e5\u770b\u6211\u7684\u4e00\u7bc7\u6587\u7ae0: \u6700\u5168\u9762\u7684Kotlin\u534f\u7a0b: Coroutine/Channel/Flow \u4ee5\u53ca\u5b9e\u9645\u5e94\u7528 \u6709\u65f6\u5019\u53ef\u80fd\u9762\u4e34\u5d4c\u5957\u7684 scope* \u51fd\u6570\u6216\u8005\u4f5c\u7528\u57df\u5185\u6709\u5b50\u4f5c\u7528\u57df\u60c5\u51b5, \u8fd9\u4e2a\u65f6\u5019\u7684\u751f\u547d\u5468\u671f\u662f\u5982\u4f55","title":"\u7f51\u7edc\u8bf7\u6c42\u7684\u4f5c\u7528\u57df"},{"location":"scope/#scope","text":"scopeNet { val task = Post < String > ( \"api0\" ). await () scopeNet { val task = Post < String > ( \"api0\" ). await () // \u6b64\u65f6\u53d1\u751f\u8bf7\u6c42\u9519\u8bef }. catch { // A } }. catch { // B } \u4ee5\u4e0b\u5d4c\u5957\u4f5c\u7528\u57df\u9519\u8bef\u5c06\u4f1a\u4ec5\u53d1\u751f\u5728 A \u5904, \u5e76\u88ab\u6355\u83b7, \u540c\u65f6\u4e0d\u5f71\u54cd\u5916\u90e8 scopeNet \u7684\u8bf7\u6c42\u548c\u5f02\u5e38\u6355\u83b7 \u4e24\u4e2a scopeNet \u7684\u5f02\u5e38\u629b\u51fa\u548c\u6355\u83b7\u4e92\u4e0d\u5f71\u54cd scopeNet/scopeDialog/scope \u7b49\u51fd\u6570\u540c\u7406","title":"\u5d4c\u5957Scope"},{"location":"scope/#_3","text":"scopeNet { val await = Post < String > ( \"api\" ). await () launch { val task = Post < String > ( \"api0\" ). await () // \u6b64\u65f6\u53d1\u751f\u8bf7\u6c42\u9519\u8bef }. invokeOnCompletion { // A } }. catch { // B } \u8fd9\u79cd\u60c5\u51b5 \u5148\u6267\u884c A \u7136\u540e\u6267\u884c B , \u5e76\u4e14\u90fd\u80fd\u6355\u83b7\u5f02\u5e38. \u540c\u65f6 scopeNet \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u5bfc\u81f4 launch \u5185\u7684\u8bf7\u6c42\u88ab\u53d6\u6d88, launch \u53d1\u751f\u9519\u8bef\u4e5f\u4f1a\u5bfc\u81f4 scopeNet \u53d1\u751f\u9519\u8bef","title":"\u5b50\u4f5c\u7528\u57df"},{"location":"switch-thread/","text":"\u6240\u6709 scope* \u524d\u7f00\u51fd\u6570\u7684\u521b\u5efa\u7684\u4f5c\u7528\u57df\u90fd\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u4e3b\u7ebf\u7a0b, \u5373\u53ef\u4ee5\u5728\u4f5c\u7528\u57df\u5185\u76f4\u63a5\u64cd\u4f5cUI. \u65e2\u7136\u662f\u9ed8\u8ba4\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539scope\u5185\u7684\u4f5c\u7528\u57df\u7ebf\u7a0b\u4e5f\u53ef\u4ee5\u5728\u91cc\u9762\u8fdb\u884c\u591a\u6b21\u5207\u6362 \u5207\u6362\u4f5c\u7528\u57df\u8c03\u5ea6\u5668 \u00b6 scopeNetLife ( dispatcher = Dispatchers . IO ) { binding . tvFragment . text = Get < String > ( \"api\" ). await () } \u5728\u4f5c\u7528\u57df\u5185\u90e8\u5207\u6362 \u00b6 \u53ef\u80fd\u67d0\u4e9b\u60c5\u51b5\u53ea\u662f\u4f5c\u7528\u57df\u5185\u90e8\u5206\u963b\u585e\u4efb\u52a1\u9700\u8981\u5728\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c. \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4f5c\u7528\u57df\u5185\u90e8\u8fdb\u884c\u591a\u6b21\u7684\u7ebf\u7a0b\u5207\u6362 \u4e3b\u7ebf\u7a0b\u4f5c\u7528\u57df\u5185\u5207\u6362\u5b50\u7ebf\u7a0b scopeNetLife { binding . tvFragment . text = withIO { // \u5047\u8bbe\u6b64\u5904\u662f\u4e00\u4e2aIO\u8bfb\u5199\u963b\u585e\u4efb\u52a1 return \"\u8bfb\u51fa\u7ed3\u679c\" } } \u5b50\u7ebf\u7a0b\u4f5c\u7528\u57df\u5185\u5207\u6362\u4e3b\u7ebf\u7a0b scopeNetLife ( dispatcher = Dispatchers . IO ) { binding . tvFragment . text = withMain { // \u5047\u8bbe\u6b64\u5904\u662f\u4e00\u4e2aIO\u8bfb\u5199\u963b\u585e\u4efb\u52a1 return \"\u8bfb\u51fa\u7ed3\u679c\" } } \u51fd\u6570 \u63cf\u8ff0 withMain \u5207\u6362\u5230\u4e3b\u7ebf\u7a0b withIO \u5207\u6362\u5230IO\u7ebf\u7a0b withDefault \u5207\u6362\u5230\u9ed8\u8ba4\u7ebf\u7a0b(\u5c5e\u4e8e\u5b50\u7ebf\u7a0b) withUnconfined \u5207\u6362\u5230\u65e0\u9650\u5236\u8c03\u5ea6\u5668, \u5176\u53d6\u51b3\u4e8e\u4e0a\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u5207\u6362 launch \u65e0\u8fd4\u56de\u503c\u7684\u534f\u7a0b\u6302\u8d77\u51fd\u6570, \u53ef\u6307\u5b9a\u7ebf\u7a0b async \u6709\u8fd4\u56de\u503c\u7684\u534f\u7a0b\u6302\u8d77\u51fd\u6570, \u4f46\u5f97\u901a\u8fc7 await() \u8fd4\u56de\u503c. \u53ef\u6307\u5b9a\u7ebf\u7a0b runMain \u5207\u6362\u5230\u4e3b\u7ebf\u7a0b, \u8be5\u51fd\u6570\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528\u4e0d\u9650\u4e8e\u534f\u7a0b\u4f5c\u7528\u57df with* \u51fd\u6570\u5c5e\u4e8e\u8c03\u7528\u5c31\u7acb\u5373\u6267\u884c, \u5728\u4f5c\u7528\u57df\u5185\u4f1a\u963b\u585e(\u4e0d\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b) launch/async \u5c5e\u4e8e\u6267\u884c\u5e76\u53d1\u4efb\u52a1, \u4e24\u8005\u533a\u5206\u5c31\u662f\u6709\u65e0\u8fd4\u56de\u503c \u5728\u534f\u7a0b\u4e2d\u5207\u6362\u7ebf\u7a0b\u4e5f\u88ab\u6210\u4e3a\u5207\u6362\u8c03\u5ea6\u5668","title":"\u5207\u6362\u7ebf\u7a0b"},{"location":"switch-thread/#_1","text":"scopeNetLife ( dispatcher = Dispatchers . IO ) { binding . tvFragment . text = Get < String > ( \"api\" ). await () }","title":"\u5207\u6362\u4f5c\u7528\u57df\u8c03\u5ea6\u5668"},{"location":"switch-thread/#_2","text":"\u53ef\u80fd\u67d0\u4e9b\u60c5\u51b5\u53ea\u662f\u4f5c\u7528\u57df\u5185\u90e8\u5206\u963b\u585e\u4efb\u52a1\u9700\u8981\u5728\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c. \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4f5c\u7528\u57df\u5185\u90e8\u8fdb\u884c\u591a\u6b21\u7684\u7ebf\u7a0b\u5207\u6362 \u4e3b\u7ebf\u7a0b\u4f5c\u7528\u57df\u5185\u5207\u6362\u5b50\u7ebf\u7a0b scopeNetLife { binding . tvFragment . text = withIO { // \u5047\u8bbe\u6b64\u5904\u662f\u4e00\u4e2aIO\u8bfb\u5199\u963b\u585e\u4efb\u52a1 return \"\u8bfb\u51fa\u7ed3\u679c\" } } \u5b50\u7ebf\u7a0b\u4f5c\u7528\u57df\u5185\u5207\u6362\u4e3b\u7ebf\u7a0b scopeNetLife ( dispatcher = Dispatchers . IO ) { binding . tvFragment . text = withMain { // \u5047\u8bbe\u6b64\u5904\u662f\u4e00\u4e2aIO\u8bfb\u5199\u963b\u585e\u4efb\u52a1 return \"\u8bfb\u51fa\u7ed3\u679c\" } } \u51fd\u6570 \u63cf\u8ff0 withMain \u5207\u6362\u5230\u4e3b\u7ebf\u7a0b withIO \u5207\u6362\u5230IO\u7ebf\u7a0b withDefault \u5207\u6362\u5230\u9ed8\u8ba4\u7ebf\u7a0b(\u5c5e\u4e8e\u5b50\u7ebf\u7a0b) withUnconfined \u5207\u6362\u5230\u65e0\u9650\u5236\u8c03\u5ea6\u5668, \u5176\u53d6\u51b3\u4e8e\u4e0a\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u5207\u6362 launch \u65e0\u8fd4\u56de\u503c\u7684\u534f\u7a0b\u6302\u8d77\u51fd\u6570, \u53ef\u6307\u5b9a\u7ebf\u7a0b async \u6709\u8fd4\u56de\u503c\u7684\u534f\u7a0b\u6302\u8d77\u51fd\u6570, \u4f46\u5f97\u901a\u8fc7 await() \u8fd4\u56de\u503c. \u53ef\u6307\u5b9a\u7ebf\u7a0b runMain \u5207\u6362\u5230\u4e3b\u7ebf\u7a0b, \u8be5\u51fd\u6570\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528\u4e0d\u9650\u4e8e\u534f\u7a0b\u4f5c\u7528\u57df with* \u51fd\u6570\u5c5e\u4e8e\u8c03\u7528\u5c31\u7acb\u5373\u6267\u884c, \u5728\u4f5c\u7528\u57df\u5185\u4f1a\u963b\u585e(\u4e0d\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b) launch/async \u5c5e\u4e8e\u6267\u884c\u5e76\u53d1\u4efb\u52a1, \u4e24\u8005\u533a\u5206\u5c31\u662f\u6709\u65e0\u8fd4\u56de\u503c \u5728\u534f\u7a0b\u4e2d\u5207\u6362\u7ebf\u7a0b\u4e5f\u88ab\u6210\u4e3a\u5207\u6362\u8c03\u5ea6\u5668","title":"\u5728\u4f5c\u7528\u57df\u5185\u90e8\u5207\u6362"},{"location":"sync-request/","text":"Net\u652f\u6301\u5728\u5f53\u524d\u7ebf\u7a0b\u6267\u884c, \u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\u7684\u540c\u6b65\u8bf7\u6c42 -- execute \u8fd9\u91cc\u4ecb\u7ecd\u7684\u662f\u4e0d\u4f7f\u7528\u534f\u7a0b\u7684\u540c\u6b65\u8bf7\u6c42. \u7531\u4e8eAndroid\u4e3b\u7ebf\u7a0b\u4e0d\u5141\u8bb8\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42, \u8fd9\u91cc\u6211\u4eec\u5f97\u968f\u4fbf\u521b\u5efa\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u624d\u53ef\u4ee5\u5f00\u53d1\u8d77\u540c\u6b65\u8bf7\u6c42 \u540c\u6b65\u8bf7\u6c42 thread { val result = Net . post ( \"api\" ). execute < String > () // \u7f51\u7edc\u8bf7\u6c42\u4e0d\u5141\u8bb8\u5728\u4e3b\u7ebf\u7a0b tvFragment ?. post { tvFragment ?. text = result // view\u8981\u6c42\u5728\u4e3b\u7ebf\u7a0b\u66f4\u65b0 } } toResult thread { val result = Net . post ( \"api\" ). toResult < String > (). getOrDefault ( \"\u8bf7\u6c42\u53d1\u751f\u9519\u8bef, \u6211\u8fd9\u662f\u9ed8\u8ba4\u503c\" ) tvFragment ?. post { tvFragment ?. text = result // view\u8981\u6c42\u5728\u4e3b\u7ebf\u7a0b\u66f4\u65b0 } } execute \u5728\u8bf7\u6c42\u53d1\u751f\u9519\u8bef\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38 toResult \u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38, \u901a\u8fc7 exception* \u51fd\u6570\u6765\u83b7\u53d6\u5f02\u5e38\u4fe1\u606f, \u4e14\u652f\u6301\u9ed8\u8ba4\u503c\u7b49\u7279\u6027 \u540c\u6b65\u8bf7\u6c42\u5e94\u7528\u573a\u666f\u4e00\u822c\u662f\u5728\u62e6\u622a\u5668\u4e2d\u4f7f\u7528, \u62e6\u622a\u5668\u9ed8\u8ba4\u662f\u5b50\u7ebf\u7a0b \u4f5c\u7528\u57df\u5177\u4f53\u4ecb\u7ecd\u53ef\u4ee5\u770b \u521b\u5efa\u4f5c\u7528\u57df \u8bf7\u6c42\u51fd\u6570 \u63cf\u8ff0 Net.get \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.post \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.head \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.options \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.trace \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.delete \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.put \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5 Net.patch \u6807\u51c6Http\u8bf7\u6c42\u65b9\u6cd5","title":"\u540c\u6b65\u8bf7\u6c42"},{"location":"tag/","text":"Q: \u4ec0\u4e48\u662f\u6807\u7b7e? A: \u6807\u7b7e\u5c31\u662f\u4e00\u4e2a\u5b58\u50a8\u5728Request\u5bf9\u8c61\u4e2d\u7684Map\u96c6\u5408, \u4fbf\u4e8eRequest\u8bf7\u6c42\u5bf9\u8c61\u643a\u5e26\u6307\u5b9a\u7684\u6570\u636e. \u8be5\u6570\u636e\u53ef\u4ee5\u901a\u8fc7Request\u5728\u62e6\u622a\u5668/\u8f6c\u6362\u5668/\u54cd\u5e94\u4f53\u4e2d\u88ab\u83b7\u53d6\u5230, \u7528\u4e8e\u6784\u5efa\u533a\u5206\u8bf7\u6c42\u7684\u4e1a\u52a1\u903b\u8f91 Net\u4e2d\u7684\u6807\u7b7e\u540c\u65f6\u652f\u6301\u4f7f\u7528\u5b57\u7b26\u4e32\u6216\u8005Class\u5b57\u8282\u7801\u4f5c\u4e3a\u6807\u7b7e\u7684\u952e\u540d. \u6839\u636e\u4f20\u5165\u7c7b\u578b\u51b3\u5b9a \u6807\u7b7e\u4f7f\u7528 \u00b6 1) \u8bbe\u7f6e\u6807\u7b7e \u00b6 scopeNetLife { tvFragment . text = Get < String > ( \"api\" , \"\u6807\u7b7eA\" ){ // \u4f7f\u7528Any::class.java\u4f5c\u4e3a\u952e\u540d setTag ( \"tagName\" , \"\u6807\u7b7eB\" ) // \u4f7f\u7528\u5b57\u7b26\u4e32\u4f5c\u4e3a\u952e\u540d }. await () } 2) \u62e6\u622a\u5668\u4e2d\u83b7\u53d6\u6807\u7b7e \u00b6 class MyInterceptor : Interceptor { override fun intercept ( chain : Chain ): Response { val request = chain . request () request . tag () ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } request . tag ( \"tagName\" ) ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } return chain . proceed ( request ) } } 3) \u8f6c\u6362\u5668\u4e2d\u83b7\u53d6\u6807\u7b7e \u00b6 class MyConvert : NetConvert { override fun < R > onConvert ( succeed : Type , response : Response ): R? { response . request . tag () ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } } } \u6211\u4eec\u901a\u8fc7Request\u7684\u51fd\u6570\u53ef\u4ee5\u8bbe\u7f6e\u548c\u8bfb\u53d6\u6807\u7b7e \u51fd\u6570 \u63cf\u8ff0 setTag \u8bbe\u7f6e\u6807\u7b7e tag \u8bfb\u53d6\u6807\u7b7e \u8bbe\u7f6e\u591a\u4e2a\u6807\u7b7e \u00b6 scopeNetLife { Get < String > ( \"api\" ){ setTag ( \"person\" , Person ()) // \u4f7f\u7528Request.tag(\"person\")\u83b7\u53d6 setTag ( User ()) // \u4f7f\u7528Request.tag()\u76f4\u63a5\u83b7\u53d6 }. await () } \u5f97\u5230\u6807\u7b7e class MyInterceptor : Interceptor { override fun intercept ( chain : Chain ): Response { val request = chain . request () request . tag ( \"person\" ) ?. let { // it\u65e2\u4e3aPerson\u5bf9\u8c61 } return chain . proceed ( request ) } }","title":"\u6807\u7b7e"},{"location":"tag/#_1","text":"","title":"\u6807\u7b7e\u4f7f\u7528"},{"location":"tag/#1","text":"scopeNetLife { tvFragment . text = Get < String > ( \"api\" , \"\u6807\u7b7eA\" ){ // \u4f7f\u7528Any::class.java\u4f5c\u4e3a\u952e\u540d setTag ( \"tagName\" , \"\u6807\u7b7eB\" ) // \u4f7f\u7528\u5b57\u7b26\u4e32\u4f5c\u4e3a\u952e\u540d }. await () }","title":"1) \u8bbe\u7f6e\u6807\u7b7e"},{"location":"tag/#2","text":"class MyInterceptor : Interceptor { override fun intercept ( chain : Chain ): Response { val request = chain . request () request . tag () ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } request . tag ( \"tagName\" ) ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } return chain . proceed ( request ) } }","title":"2) \u62e6\u622a\u5668\u4e2d\u83b7\u53d6\u6807\u7b7e"},{"location":"tag/#3","text":"class MyConvert : NetConvert { override fun < R > onConvert ( succeed : Type , response : Response ): R? { response . request . tag () ?. let { // \u83b7\u53d6\u6807\u7b7e\u505a\u4efb\u4f55\u4e8b } } } \u6211\u4eec\u901a\u8fc7Request\u7684\u51fd\u6570\u53ef\u4ee5\u8bbe\u7f6e\u548c\u8bfb\u53d6\u6807\u7b7e \u51fd\u6570 \u63cf\u8ff0 setTag \u8bbe\u7f6e\u6807\u7b7e tag \u8bfb\u53d6\u6807\u7b7e","title":"3) \u8f6c\u6362\u5668\u4e2d\u83b7\u53d6\u6807\u7b7e"},{"location":"tag/#_2","text":"scopeNetLife { Get < String > ( \"api\" ){ setTag ( \"person\" , Person ()) // \u4f7f\u7528Request.tag(\"person\")\u83b7\u53d6 setTag ( User ()) // \u4f7f\u7528Request.tag()\u76f4\u63a5\u83b7\u53d6 }. await () } \u5f97\u5230\u6807\u7b7e class MyInterceptor : Interceptor { override fun intercept ( chain : Chain ): Response { val request = chain . request () request . tag ( \"person\" ) ?. let { // it\u65e2\u4e3aPerson\u5bf9\u8c61 } return chain . proceed ( request ) } }","title":"\u8bbe\u7f6e\u591a\u4e2a\u6807\u7b7e"},{"location":"unique/","text":"\u67d0\u4e2a\u91cd\u590d\u53d1\u8d77\u7684\u8bf7\u6c42, \u5728\u53d1\u8d77\u7684\u65f6\u5019\u81ea\u52a8\u53d6\u6d88\u65e7\u7684\u7f51\u7edc\u8bf7\u6c42. \u8fd9\u79cd\u5e94\u7528\u573a\u666f\u5e38\u89c1\u4e8e\u7b5b\u9009\u83dc\u5355, \u6bcf\u6b21\u70b9\u51fb\u83dc\u5355\u90fd\u4f1a\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u8fd4\u56de\u7b5b\u9009\u540e\u7684\u5217\u8868, \u4f46\u662f\u8bf7\u6c42\u672a\u5b8c\u6210\u65f6, \u7528\u6237\u53c8\u70b9\u51fb\u4e86\u65b0\u7684\u7b5b\u9009\u6761\u4ef6, \u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u53d6\u6d88\u4e0a\u6b21\u8bf7\u6c42, \u91cd\u65b0\u53d1\u8d77\u65b0\u7684\u8bf7\u6c42 \u8fd9\u4e2a\u9700\u6c42\u5728Net\u4e2d\u975e\u5e38\u597d\u5b9e\u73b0, \u4fdd\u5b58\u4e00\u4e2a\u53d8\u91cf\u5373\u53ef var scope : AndroidScope? = null btn_request . setOnClickListener { tv_result . text = \"\u8bf7\u6c42\u4e2d\" scope ?. cancel () // \u5982\u679c\u5b58\u5728\u5219\u53d6\u6d88 scope = scopeNetLife { val result = Post < String > ( \"api\" ). await () Log . d ( \"\u65e5\u5fd7\" , \"\u8bf7\u6c42\u5230\u7ed3\u679c\" ) // \u4f60\u4e00\u76f4\u91cd\u590d\u70b9\u51fb\"\u53d1\u8d77\u8bf7\u6c42\"\u6309\u94ae\u4f1a\u53d1\u73b0\u6c38\u8fdc\u65e0\u6cd5\u62ff\u5230\u8bf7\u6c42\u7ed3\u679c, \u56e0\u4e3a\u6bcf\u6b21\u53d1\u8d77\u65b0\u7684\u8bf7\u6c42\u4f1a\u53d6\u6d88\u672a\u5b8c\u6210\u7684 tv_result . text = result } } \u5f53 scope \u4e0d\u4e3a\u7a7a\u65f6\u5373\u8868\u793a\u5b58\u5728\u4e0a\u4e2a\u8bf7\u6c42, \u6211\u4eec\u65e0\u8bba\u4e0a\u4e2a\u8bf7\u6c42\u662f\u5426\u5b8c\u6210\u90fd\u8c03\u7528 cancel \u51fd\u6570\u4fdd\u8bc1\u53d6\u6d88\u5373\u53ef \u8be6\u7ec6\u7684\u5173\u4e8e\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42\u7684\u64cd\u4f5c\u67e5\u770b: \u53d6\u6d88\u8bf7\u6c42","title":"\u91cd\u590d\u8bf7\u6c42"},{"location":"updates/","text":"3.1.0 \u00b6 \u4fee\u590d\u90e8\u5206\u5b50\u7ebf\u7a0b\u5f00\u542f\u4f5c\u7528\u57df\u5d29\u6e83 \u7f51\u7edc\u5f02\u5e38\u5806\u6808\u4f7f\u7528 NetConfig.logTag \u4f5c\u4e3a\u6807\u7b7e, \u4f7f\u7528debug\u65e5\u5fd7\u7c7b\u578b\u8f93\u51fa \u9ed8\u8ba4\u8f6c\u6362\u5668\u73b0\u5728\u8981\u6c42HTTP\u72b6\u6001\u7801\u4e3a\u6210\u529f\u624d\u8fd4\u56de\u6570\u636e(\u6cdb\u578bResponse\u8bf7\u6c42\u5b8c\u6210\u90fd\u8fd4\u56de) \u5f00\u542f\u7f16\u8bd1\u5668\u5f3a\u5236\u66ff\u6362\u5e9f\u5f03\u51fd\u6570(\u53ef\u67e5\u770b\u51fd\u6570\u6ce8\u91ca\u66ff\u6362\u89c4\u5219) \u7981\u6b62\u66b4\u9732\u5197\u4f59\u51fd\u6570 3.0.27 \u00b6 setDownloadDir\u51fd\u6570\u540c\u65f6\u652f\u6301\u5b8c\u6574\u8def\u5f84(\u5373\u5305\u542b\u6587\u4ef6\u540d\u79f0)\u548c\u4e0b\u8f7d\u76ee\u5f55 3.0.26 \u00b6 \u4f18\u5316\u8fd4\u56deByteArray\u7c7b\u578b\u6027\u80fd setQuery\u51fd\u6570\u652f\u6301Number/Boolean\u7c7b\u578b \u65b0\u589e\u4e00\u4e2a\u9519\u8bef\u63d0\u793a HttpFailureException 3.0.25 \u00b6 \u8f6e\u8be2\u5668\u652f\u6301ViewModel\u53d6\u6d88 \u4fee\u590d\u65e0\u6cd5\u8fd4\u56deByteArray\u7c7b\u578b\u95ee\u9898 \u95f4\u63a5\u4f9d\u8d56 update brv 1.3.37 \u66f4\u65b0\u51fd\u6570\u6ce8\u91ca 3.0.24 \u00b6 \u4fee\u590d\u4e0a\u4f20\u6587\u4ef6\u5305\u542b\u53c2\u6570\u65f6, \u7f16\u7801\u95ee\u9898\u5bfc\u81f4\u7684\u53c2\u6570\u9519\u8bef 3.0.23 \u00b6 \u4fee\u590d\u8f6e\u8be2\u5668\u91cd\u590dstart\u65e0\u6548\u95ee\u9898 Interval\u5176\u4ed6\u4f18\u5316 3.0.21 \u00b6 Interval\u6dfb\u52a0cancel\u51fd\u6570\u7528\u4e8e\u53d6\u6d88\u8ba1\u65f6\u5668, \u53d6\u6d88\u5b8c\u6210\u4e0d\u4f1a\u8c03\u7528finish 3.0.20 \u00b6 \u65b0\u589e HttpFailureException \u53ca\u5176\u5b50\u7c7b\u8868\u793a\u8bf7\u6c42\u5931\u8d25\u5f02\u5e38 \u65b0\u589e HttpResponseException \u53ca\u5176\u5b50\u7c7b\u8868\u793a\u8bf7\u6c42\u6210\u529f\u540e\u53d1\u751f\u7684\u5f02\u5e38 \u66f4\u65b0\u4f9d\u8d56\u5e93BRV\u81f31.3.31 3.0.19 \u00b6 \u66f4\u65b0\u4f9d\u8d56\u5e93BRV\u81f31.3.30 3.0.18 \u00b6 \u4fee\u590dResponse\u6d41\u5f02\u5e38\u5173\u95ed\u95ee\u9898 3.0.17 \u00b6 \u4fee\u590dProfiler\u5bfc\u81f4\u7684\u8bf7\u6c42\u95ee\u9898 3.0.16 \u00b6 \u65e5\u5fd7\u8bb0\u5f55\u5668\u4e2d\u8bf7\u6c42\u53c2\u6570\u9ed8\u8ba4\u4f7f\u7528URLDecoder\u89e3\u7801 3.0.15 \u00b6 \u4fee\u590dFileProvider\u51b2\u7a81 \u4e0a\u4f20\u6587\u4ef6\u65f6\u9ed8\u8ba4\u751f\u6210filename(\u5f53\u4f60\u672a\u6307\u5b9a\u6587\u4ef6\u540d\u60c5\u51b5\u4e0b) NetCallback\u7f51\u7edc\u8bf7\u6c42\u88ab\u53d6\u6d88\u4e0d\u4f1a\u56de\u8c03onError \u4e3aNetCallback\u6dfb\u52a0Request\u5bf9\u8c61 \u5220\u9664\u5185\u90e8Tooltip\u4f9d\u8d56 3.0.14 \u00b6 \u4fee\u590dKType\u7c7b\u578b\u95ee\u9898 \u652f\u6301 File.install \u51fd\u6570\u5b89\u88c5\u5e94\u7528 3.0.13 \u00b6 \u4f18\u5316\u6807\u7b7e\u76f8\u5173\u51fd\u6570. \u6574\u4e2a\u7f51\u7edc\u751f\u547d\u5468\u671f\u53ef\u4ee5\u5b8c\u7f8e\u4f20\u9012\u53c2\u6570 NetCallback\u5177\u5907\u8ddf\u968f\u751f\u547d\u5468\u671f\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 \u6269\u5c55NetCallback\u6765\u6dfb\u52a0DialogCallback/StateCallback/PageCallback \u5e9f\u5f03\u90e8\u5206\u51fd\u6570, \u4f8b\u5982onDialog\u88ab\u5e9f\u5f03, \u73b0\u5728\u7531 NetConfig.dialogFactory \u6784\u5efa\u5168\u5c40\u52a0\u8f7d\u5bf9\u8bdd\u6846 initNet\u73b0\u5728\u5e9f\u5f03, \u7531 NetConfig.init \u53d6\u4ee3. \u6240\u6709\u914d\u7f6e\u4fe1\u606f\u7531NetConfig\u627f\u8f7d RequestParamsException\u6dfb\u52a0\u9519\u8bef\u7801\u4fe1\u606f 3.0.12 \u00b6 \u4fee\u590d\u8f6c\u6362\u5668\u629b\u51fa\u7684\u5f02\u5e38\u5168\u90e8\u88ab ConvertException \u5305\u88f9\u7684\u95ee\u9898. NetException\u5b50\u7c7b\u4e0d\u4f1a\u88abConvertException\u5305\u88f9, \u6240\u4ee5\u8981\u6355\u83b7\u8f6c\u6362\u5668\u4e2d\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u8bf7\u5176\u7ee7\u627fNetException 3.0.11 \u00b6 \u4fee\u590d\u4e34\u65f6\u4e0b\u8f7d\u6587\u4ef6\u9519\u8bef\u95ee\u9898 \u4fee\u590dViewModel\u4f5c\u7528\u57df\u590d\u7528\u95ee\u9898 3.0.10 \u00b6 \u5347\u7ea7Tooltip\u4f9d\u8d56, \u89e3\u51b3\u4f7f\u7528Tooltip_V1.1.1\u4f9d\u8d56\u65f6Net\u5b58\u5728\u5d29\u6e83\u95ee\u9898 3.0.9 \u00b6 \u4f18\u5316\u8f6c\u6362\u5668\u5f02\u5e38\u5904\u7406 \u8f6c\u6362\u5668\u652f\u6301\u975e\u56fa\u5b9a\u683c\u5f0fJson\u89e3\u6790 3.0.7 \u00b6 \u4fee\u590d\u672a\u77e5\u7684TypeToken\u8bbf\u95ee\u6743\u9650\u95ee\u9898 3.0.6 \u00b6 \u6240\u6709Json\u89e3\u6790\u6846\u67b6\u90fd\u53ef\u4ee5\u89e3\u6790 List<UserModel> \u7b49\u5d4c\u5957\u6cdb\u578b\u6570\u636e\u7ed3\u6784: \u7279\u6b8a\u7ed3\u6784\u89e3\u6790 3.0.5 \u00b6 \u4fee\u590dPath\u7f16\u7801\u95ee\u9898 \u4e0a\u4f20File\u81ea\u52a8\u8bc6\u522bMediaType 3.0.4 \u00b6 \u6dfb\u52a0MediaConst\u8868\u793a\u5e38\u7528MediaType OkHttpBuilder\u6dfb\u52a0 setErrorHandler \u53d6\u4ee3onError/onStateError: \u5168\u5c40\u9519\u8bef\u5904\u7406 \u63d0\u4f9b\u517c\u5bb9Android4.4(API level 19)\u7684\u7248\u672c: Net-okhttp3 3.0.3 \u00b6 \u6dfb\u52a0 onResult \u51fd\u6570\u6765\u6267\u884c\u961f\u5217\u8bf7\u6c42: \u961f\u5217\u8bf7\u6c42 \u6dfb\u52a0 toResult \u51fd\u6570\u6765\u6267\u884c\u540c\u6b65\u8bf7\u6c42: \u540c\u6b65\u8bf7\u6c42 \u8bf7\u6c42\u4f53\u65e5\u5fd7\u652f\u6301JSON/\u6587\u672c\u7c7b\u578b LogRecordInterceptor\u66b4\u9732 requestString/responseString \u5b9e\u73b0\u51fd\u6570\u7528\u4e8e\u7ee7\u627f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u9700\u6c42 3.0.2 \u00b6 \u4fee\u590d\u591a\u6e20\u9053\u65e0\u6cd5\u5b89\u88c5\u95ee\u9898 3.0.1 \u00b6 \u8f6c\u6362\u5668\u652f\u6301KType, \u89e3\u51b3JAVA\u6cdb\u578b\u64e6\u9664\u95ee\u9898 \u652f\u6301kotlin-serialization\u8f6c\u6362\u5668 \u4fee\u590dJSON\u8bf7\u6c42\u53c2\u6570\u7c7b\u578b\u95ee\u9898 3.0 \u00b6 \u91cd\u6784\u4ee3\u7801, \u63d0\u5347\u7a33\u5b9a\u6027\u548c\u5b89\u5168\u6027. \u652f\u6301OkHttp\u7684\u6240\u6709\u51fd\u6570/\u7ec4\u4ef6, \u53ef\u72ec\u7acb\u5347\u7ea7OkHttp\u7248\u672c \u66f4\u52a0\u5f3a\u5927\u7684\u4e0b\u8f7d\u529f\u80fd \u6240\u6709IO\u8bfb\u5199\u4f7f\u7528OKIO \u66f4\u52a0\u4f18\u96c5\u7684\u51fd\u6570\u8bbe\u8ba1","title":"\u66f4\u65b0\u65e5\u5fd7"},{"location":"updates/#310","text":"\u4fee\u590d\u90e8\u5206\u5b50\u7ebf\u7a0b\u5f00\u542f\u4f5c\u7528\u57df\u5d29\u6e83 \u7f51\u7edc\u5f02\u5e38\u5806\u6808\u4f7f\u7528 NetConfig.logTag \u4f5c\u4e3a\u6807\u7b7e, \u4f7f\u7528debug\u65e5\u5fd7\u7c7b\u578b\u8f93\u51fa \u9ed8\u8ba4\u8f6c\u6362\u5668\u73b0\u5728\u8981\u6c42HTTP\u72b6\u6001\u7801\u4e3a\u6210\u529f\u624d\u8fd4\u56de\u6570\u636e(\u6cdb\u578bResponse\u8bf7\u6c42\u5b8c\u6210\u90fd\u8fd4\u56de) \u5f00\u542f\u7f16\u8bd1\u5668\u5f3a\u5236\u66ff\u6362\u5e9f\u5f03\u51fd\u6570(\u53ef\u67e5\u770b\u51fd\u6570\u6ce8\u91ca\u66ff\u6362\u89c4\u5219) \u7981\u6b62\u66b4\u9732\u5197\u4f59\u51fd\u6570","title":"3.1.0"},{"location":"updates/#3027","text":"setDownloadDir\u51fd\u6570\u540c\u65f6\u652f\u6301\u5b8c\u6574\u8def\u5f84(\u5373\u5305\u542b\u6587\u4ef6\u540d\u79f0)\u548c\u4e0b\u8f7d\u76ee\u5f55","title":"3.0.27"},{"location":"updates/#3026","text":"\u4f18\u5316\u8fd4\u56deByteArray\u7c7b\u578b\u6027\u80fd setQuery\u51fd\u6570\u652f\u6301Number/Boolean\u7c7b\u578b \u65b0\u589e\u4e00\u4e2a\u9519\u8bef\u63d0\u793a HttpFailureException","title":"3.0.26"},{"location":"updates/#3025","text":"\u8f6e\u8be2\u5668\u652f\u6301ViewModel\u53d6\u6d88 \u4fee\u590d\u65e0\u6cd5\u8fd4\u56deByteArray\u7c7b\u578b\u95ee\u9898 \u95f4\u63a5\u4f9d\u8d56 update brv 1.3.37 \u66f4\u65b0\u51fd\u6570\u6ce8\u91ca","title":"3.0.25"},{"location":"updates/#3024","text":"\u4fee\u590d\u4e0a\u4f20\u6587\u4ef6\u5305\u542b\u53c2\u6570\u65f6, \u7f16\u7801\u95ee\u9898\u5bfc\u81f4\u7684\u53c2\u6570\u9519\u8bef","title":"3.0.24"},{"location":"updates/#3023","text":"\u4fee\u590d\u8f6e\u8be2\u5668\u91cd\u590dstart\u65e0\u6548\u95ee\u9898 Interval\u5176\u4ed6\u4f18\u5316","title":"3.0.23"},{"location":"updates/#3021","text":"Interval\u6dfb\u52a0cancel\u51fd\u6570\u7528\u4e8e\u53d6\u6d88\u8ba1\u65f6\u5668, \u53d6\u6d88\u5b8c\u6210\u4e0d\u4f1a\u8c03\u7528finish","title":"3.0.21"},{"location":"updates/#3020","text":"\u65b0\u589e HttpFailureException \u53ca\u5176\u5b50\u7c7b\u8868\u793a\u8bf7\u6c42\u5931\u8d25\u5f02\u5e38 \u65b0\u589e HttpResponseException \u53ca\u5176\u5b50\u7c7b\u8868\u793a\u8bf7\u6c42\u6210\u529f\u540e\u53d1\u751f\u7684\u5f02\u5e38 \u66f4\u65b0\u4f9d\u8d56\u5e93BRV\u81f31.3.31","title":"3.0.20"},{"location":"updates/#3019","text":"\u66f4\u65b0\u4f9d\u8d56\u5e93BRV\u81f31.3.30","title":"3.0.19"},{"location":"updates/#3018","text":"\u4fee\u590dResponse\u6d41\u5f02\u5e38\u5173\u95ed\u95ee\u9898","title":"3.0.18"},{"location":"updates/#3017","text":"\u4fee\u590dProfiler\u5bfc\u81f4\u7684\u8bf7\u6c42\u95ee\u9898","title":"3.0.17"},{"location":"updates/#3016","text":"\u65e5\u5fd7\u8bb0\u5f55\u5668\u4e2d\u8bf7\u6c42\u53c2\u6570\u9ed8\u8ba4\u4f7f\u7528URLDecoder\u89e3\u7801","title":"3.0.16"},{"location":"updates/#3015","text":"\u4fee\u590dFileProvider\u51b2\u7a81 \u4e0a\u4f20\u6587\u4ef6\u65f6\u9ed8\u8ba4\u751f\u6210filename(\u5f53\u4f60\u672a\u6307\u5b9a\u6587\u4ef6\u540d\u60c5\u51b5\u4e0b) NetCallback\u7f51\u7edc\u8bf7\u6c42\u88ab\u53d6\u6d88\u4e0d\u4f1a\u56de\u8c03onError \u4e3aNetCallback\u6dfb\u52a0Request\u5bf9\u8c61 \u5220\u9664\u5185\u90e8Tooltip\u4f9d\u8d56","title":"3.0.15"},{"location":"updates/#3014","text":"\u4fee\u590dKType\u7c7b\u578b\u95ee\u9898 \u652f\u6301 File.install \u51fd\u6570\u5b89\u88c5\u5e94\u7528","title":"3.0.14"},{"location":"updates/#3013","text":"\u4f18\u5316\u6807\u7b7e\u76f8\u5173\u51fd\u6570. \u6574\u4e2a\u7f51\u7edc\u751f\u547d\u5468\u671f\u53ef\u4ee5\u5b8c\u7f8e\u4f20\u9012\u53c2\u6570 NetCallback\u5177\u5907\u8ddf\u968f\u751f\u547d\u5468\u671f\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 \u6269\u5c55NetCallback\u6765\u6dfb\u52a0DialogCallback/StateCallback/PageCallback \u5e9f\u5f03\u90e8\u5206\u51fd\u6570, \u4f8b\u5982onDialog\u88ab\u5e9f\u5f03, \u73b0\u5728\u7531 NetConfig.dialogFactory \u6784\u5efa\u5168\u5c40\u52a0\u8f7d\u5bf9\u8bdd\u6846 initNet\u73b0\u5728\u5e9f\u5f03, \u7531 NetConfig.init \u53d6\u4ee3. \u6240\u6709\u914d\u7f6e\u4fe1\u606f\u7531NetConfig\u627f\u8f7d RequestParamsException\u6dfb\u52a0\u9519\u8bef\u7801\u4fe1\u606f","title":"3.0.13"},{"location":"updates/#3012","text":"\u4fee\u590d\u8f6c\u6362\u5668\u629b\u51fa\u7684\u5f02\u5e38\u5168\u90e8\u88ab ConvertException \u5305\u88f9\u7684\u95ee\u9898. NetException\u5b50\u7c7b\u4e0d\u4f1a\u88abConvertException\u5305\u88f9, \u6240\u4ee5\u8981\u6355\u83b7\u8f6c\u6362\u5668\u4e2d\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u8bf7\u5176\u7ee7\u627fNetException","title":"3.0.12"},{"location":"updates/#3011","text":"\u4fee\u590d\u4e34\u65f6\u4e0b\u8f7d\u6587\u4ef6\u9519\u8bef\u95ee\u9898 \u4fee\u590dViewModel\u4f5c\u7528\u57df\u590d\u7528\u95ee\u9898","title":"3.0.11"},{"location":"updates/#3010","text":"\u5347\u7ea7Tooltip\u4f9d\u8d56, \u89e3\u51b3\u4f7f\u7528Tooltip_V1.1.1\u4f9d\u8d56\u65f6Net\u5b58\u5728\u5d29\u6e83\u95ee\u9898","title":"3.0.10"},{"location":"updates/#309","text":"\u4f18\u5316\u8f6c\u6362\u5668\u5f02\u5e38\u5904\u7406 \u8f6c\u6362\u5668\u652f\u6301\u975e\u56fa\u5b9a\u683c\u5f0fJson\u89e3\u6790","title":"3.0.9"},{"location":"updates/#307","text":"\u4fee\u590d\u672a\u77e5\u7684TypeToken\u8bbf\u95ee\u6743\u9650\u95ee\u9898","title":"3.0.7"},{"location":"updates/#306","text":"\u6240\u6709Json\u89e3\u6790\u6846\u67b6\u90fd\u53ef\u4ee5\u89e3\u6790 List<UserModel> \u7b49\u5d4c\u5957\u6cdb\u578b\u6570\u636e\u7ed3\u6784: \u7279\u6b8a\u7ed3\u6784\u89e3\u6790","title":"3.0.6"},{"location":"updates/#305","text":"\u4fee\u590dPath\u7f16\u7801\u95ee\u9898 \u4e0a\u4f20File\u81ea\u52a8\u8bc6\u522bMediaType","title":"3.0.5"},{"location":"updates/#304","text":"\u6dfb\u52a0MediaConst\u8868\u793a\u5e38\u7528MediaType OkHttpBuilder\u6dfb\u52a0 setErrorHandler \u53d6\u4ee3onError/onStateError: \u5168\u5c40\u9519\u8bef\u5904\u7406 \u63d0\u4f9b\u517c\u5bb9Android4.4(API level 19)\u7684\u7248\u672c: Net-okhttp3","title":"3.0.4"},{"location":"updates/#303","text":"\u6dfb\u52a0 onResult \u51fd\u6570\u6765\u6267\u884c\u961f\u5217\u8bf7\u6c42: \u961f\u5217\u8bf7\u6c42 \u6dfb\u52a0 toResult \u51fd\u6570\u6765\u6267\u884c\u540c\u6b65\u8bf7\u6c42: \u540c\u6b65\u8bf7\u6c42 \u8bf7\u6c42\u4f53\u65e5\u5fd7\u652f\u6301JSON/\u6587\u672c\u7c7b\u578b LogRecordInterceptor\u66b4\u9732 requestString/responseString \u5b9e\u73b0\u51fd\u6570\u7528\u4e8e\u7ee7\u627f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u9700\u6c42","title":"3.0.3"},{"location":"updates/#302","text":"\u4fee\u590d\u591a\u6e20\u9053\u65e0\u6cd5\u5b89\u88c5\u95ee\u9898","title":"3.0.2"},{"location":"updates/#301","text":"\u8f6c\u6362\u5668\u652f\u6301KType, \u89e3\u51b3JAVA\u6cdb\u578b\u64e6\u9664\u95ee\u9898 \u652f\u6301kotlin-serialization\u8f6c\u6362\u5668 \u4fee\u590dJSON\u8bf7\u6c42\u53c2\u6570\u7c7b\u578b\u95ee\u9898","title":"3.0.1"},{"location":"updates/#30","text":"\u91cd\u6784\u4ee3\u7801, \u63d0\u5347\u7a33\u5b9a\u6027\u548c\u5b89\u5168\u6027. \u652f\u6301OkHttp\u7684\u6240\u6709\u51fd\u6570/\u7ec4\u4ef6, \u53ef\u72ec\u7acb\u5347\u7ea7OkHttp\u7248\u672c \u66f4\u52a0\u5f3a\u5927\u7684\u4e0b\u8f7d\u529f\u80fd \u6240\u6709IO\u8bfb\u5199\u4f7f\u7528OKIO \u66f4\u52a0\u4f18\u96c5\u7684\u51fd\u6570\u8bbe\u8ba1","title":"3.0"},{"location":"upload-file/","text":"\u4e0a\u4f20\u6587\u4ef6\u548c\u666e\u901a\u63a5\u53e3\u8bf7\u6c42\u533a\u522b\u4e0d\u5927 scopeNetLife { Post < String > ( \"upload\" ) { param ( \"fileName\" , assetsFile ()) }. await () } \u4f7f\u7528 addUploadListener \u6dfb\u52a0\u4e0a\u4f20\u8fdb\u5ea6\u76d1\u542c\u5668, \u76d1\u542c\u4e0a\u4f20\u8fdb\u5ea6\u5177\u4f53\u4ecb\u7ecd\u5728 \u8fdb\u5ea6\u76d1\u542c \u4e2d \u6307\u5b9a\u7c7b\u578b \u00b6 \u9ed8\u8ba4\u4f1a\u6839\u636e\u6587\u4ef6\u7684\u540e\u7f00\u540d\u4ea7\u751fMediaType. \u4f46\u662f\u5982\u679c\u4f60\u60f3\u81ea\u5b9a\u4e49MediaType\u53ef\u4ee5\u76f4\u63a5\u521b\u5efaRequestBody\u53c2\u6570 scopeNetLife { Post < String > ( \"upload\" ) { param ( \"file\" , assetsFile (). toRequestBody ( \"image/webp\" . toMediaType ())) }. await () }","title":"\u4e0a\u4f20\u6587\u4ef6"},{"location":"upload-file/#_1","text":"\u9ed8\u8ba4\u4f1a\u6839\u636e\u6587\u4ef6\u7684\u540e\u7f00\u540d\u4ea7\u751fMediaType. \u4f46\u662f\u5982\u679c\u4f60\u60f3\u81ea\u5b9a\u4e49MediaType\u53ef\u4ee5\u76f4\u63a5\u521b\u5efaRequestBody\u53c2\u6570 scopeNetLife { Post < String > ( \"upload\" ) { param ( \"file\" , assetsFile (). toRequestBody ( \"image/webp\" . toMediaType ())) }. await () }","title":"\u6307\u5b9a\u7c7b\u578b"},{"location":"view-model/","text":"Net\u652f\u6301\u5728ViewModel\u4e2d\u521b\u5efa\u7f51\u7edc\u8bf7\u6c42/\u5f02\u6b65\u4efb\u52a1, \u5e76\u4e14\u5728ViewModel\u88ab\u9500\u6bc1\u65f6\u81ea\u52a8\u53d6\u6d88 \u4f7f\u7528 \u00b6 \u548c\u4e00\u822c\u7f51\u7edc\u8bf7\u6c42\u6ca1\u6709\u533a\u522b, \u5728ViewModel\u4e2d\u4f7f\u7528\u51fd\u6570 scopeLife/scopeNetLife \u8fd9\u4e24\u4e2a\u51fd\u6570\u521b\u5efa\u4f5c\u7528\u57df\u5373\u53ef, \u5177\u4f53\u4ecb\u7ecd\u770b \u4f5c\u7528\u57df class UserViewModel : ViewModel () { // \u7528\u6237\u4fe1\u606f var userInfo : MutableLiveData < String > = MutableLiveData () /** * \u62c9\u53d6\u7528\u6237\u4fe1\u606f, \u4f1a\u81ea\u52a8\u901a\u77e5\u9875\u9762\u66f4\u65b0, \u540c\u65f6\u9875\u9762\u9500\u6bc1\u4f1a\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 */ fun fetchUserInfo () = scopeNetLife { userInfo . value = Get < String > ( \"api\" ). await () } } \u4e0d\u5efa\u8bae\u4f7f\u7528LiveData\u5b9e\u73b0MVVM. \u5e94\u5f53\u4f7f\u7528DataBinding. \u4f46LiveData\u50cfObservableField\u4e00\u6837\u4f7f\u7528 \u7b80\u5355\u5730\u4e1a\u52a1\u76f4\u63a5\u5728Activity/Fragment\u4e2d\u8fdb\u884c\u8bf7\u6c42\u4f1a\u66f4\u52a0\u65b9\u4fbf ViewModel\u8fd9\u4e2a\u7c7b\u672c\u8d28\u662f\u5c5e\u4e8e\u9632\u6b62\u6570\u636e\u610f\u5916\u9500\u6bc1\u6216\u8005\u6865\u63a5VM, \u4f46\u4e0d\u662f\u6bcf\u4e2a\u9875\u9762\u90fd\u6709\u8fd9\u79cd\u9700\u6c42","title":"ViewModel"},{"location":"view-model/#_1","text":"\u548c\u4e00\u822c\u7f51\u7edc\u8bf7\u6c42\u6ca1\u6709\u533a\u522b, \u5728ViewModel\u4e2d\u4f7f\u7528\u51fd\u6570 scopeLife/scopeNetLife \u8fd9\u4e24\u4e2a\u51fd\u6570\u521b\u5efa\u4f5c\u7528\u57df\u5373\u53ef, \u5177\u4f53\u4ecb\u7ecd\u770b \u4f5c\u7528\u57df class UserViewModel : ViewModel () { // \u7528\u6237\u4fe1\u606f var userInfo : MutableLiveData < String > = MutableLiveData () /** * \u62c9\u53d6\u7528\u6237\u4fe1\u606f, \u4f1a\u81ea\u52a8\u901a\u77e5\u9875\u9762\u66f4\u65b0, \u540c\u65f6\u9875\u9762\u9500\u6bc1\u4f1a\u81ea\u52a8\u53d6\u6d88\u7f51\u7edc\u8bf7\u6c42 */ fun fetchUserInfo () = scopeNetLife { userInfo . value = Get < String > ( \"api\" ). await () } } \u4e0d\u5efa\u8bae\u4f7f\u7528LiveData\u5b9e\u73b0MVVM. \u5e94\u5f53\u4f7f\u7528DataBinding. \u4f46LiveData\u50cfObservableField\u4e00\u6837\u4f7f\u7528 \u7b80\u5355\u5730\u4e1a\u52a1\u76f4\u63a5\u5728Activity/Fragment\u4e2d\u8fdb\u884c\u8bf7\u6c42\u4f1a\u66f4\u52a0\u65b9\u4fbf ViewModel\u8fd9\u4e2a\u7c7b\u672c\u8d28\u662f\u5c5e\u4e8e\u9632\u6b62\u6570\u636e\u610f\u5916\u9500\u6bc1\u6216\u8005\u6865\u63a5VM, \u4f46\u4e0d\u662f\u6bcf\u4e2a\u9875\u9762\u90fd\u6709\u8fd9\u79cd\u9700\u6c42","title":"\u4f7f\u7528"}]}